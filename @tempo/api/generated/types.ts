import type { DocumentNode } from 'graphql';
import gql from 'graphql-tag';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  Date: { input: string; output: string; }
  DateTime: { input: string; output: string; }
  GlobalID: { input: string; output: string; }
  JSONString: { input: string; output: string; }
  Metadata: { input: Record<string, string>; output: Record<string, string>; }
  PositiveDecimal: { input: string | number; output: string | number; }
  Upload: { input: unknown; output: unknown; }
  Void: { input: void; output: void; }
  Weight: { input: string | number; output: string | number; }
};

/**
 * Mixin for the Order and Checkout models.
 *
 * It provides common fields and methods.
 */
export type AbstractOrder = {
  /** List of actions that can be performed in the current state of an order. */
  actions: Array<OrderAction>;
  /** The authorize status of the order. */
  authorizeStatus: OrderAuthorizeStatus;
  /** Collection points that can be used for this order. */
  availableCollectionPoints: Array<Warehouse>;
  /**
   * Shipping methods that can be used with this order.
   * @deprecated Use `shippingMethods`, this field will be removed in 4.0
   */
  availableShippingMethods?: Maybe<Array<ShippingMethod>>;
  billingAddress?: Maybe<Address>;
  /** Informs whether a draft order can be finalized (turned into a regular order). */
  canFinalize: Scalars['Boolean']['output'];
  channel: Channel;
  /** The charge status of the order. */
  chargeStatus: OrderChargeStatus;
  collectionPointName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  /** Email of a customer. */
  customerEmail?: Maybe<Scalars['String']['output']>;
  customerFirstName?: Maybe<Scalars['String']['output']>;
  customerLastName?: Maybe<Scalars['String']['output']>;
  customerNote: Scalars['String']['output'];
  /** Phone number of a customer. */
  customerPhone?: Maybe<Scalars['String']['output']>;
  discount?: Maybe<Money>;
  discountName: Scalars['String']['output'];
  /** List of all discounts assigned to the order. */
  discounts: Array<OrderDiscount>;
  /** Determines whether checkout prices should include taxes when displayed in a storefront. */
  displayGrossPrices: Scalars['Boolean']['output'];
  /** List of errors that occurred during order validation. */
  errors: Array<OrderError>;
  /** List of events associated with the order. */
  events: Array<OrderEvent>;
  /** The date and time when fulfillment of the order must be completed. */
  fulfillmentDeadline?: Maybe<Scalars['DateTime']['output']>;
  /** The delivery method selected for this checkout. */
  fulfillmentMethod?: Maybe<FulfillmentMethod>;
  fulfillmentMethodType?: Maybe<FulfillmentMethodType>;
  /** List of shipments for the order. */
  fulfillments: Array<Fulfillment>;
  giftCards: Array<GiftCard>;
  /** List of order invoices. Can be fetched for orders created in Tempo 3.2 and later, for other orders requires one of the following permissions: MANAGE_ORDERS, OWNER. */
  invoices: Array<Invoice>;
  /** Informs if an order is fully paid. */
  isPaid: Scalars['Boolean']['output'];
  isShippingRequired: Scalars['Boolean']['output'];
  /** Order language code. */
  languageCode: LanguageCode;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  note: Scalars['String']['output'];
  number: Scalars['String']['output'];
  /** The order origin. */
  origin: OrderOrigin;
  /** The ID of the order that was the base for this order. */
  original: Scalars['ID']['output'];
  paymentStatus: ChargeStatus;
  paymentStatusDisplay: Scalars['String']['output'];
  payments: Array<Payment>;
  /** List of points of contact for order fulfillment. */
  pointsOfContact: Array<PointOfContact>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  redirectUrl: Scalars['String']['output'];
  shippingAddress?: Maybe<Address>;
  shippingMethod?: Maybe<ShippingMethod>;
  shippingMethodName: Scalars['String']['output'];
  /** Shipping methods related to this order. */
  shippingMethods: Array<ShippingMethod>;
  /** Total price of shipping. */
  shippingPrice: TaxedMoney;
  /** Denormalized tax class assigned to the shipping method. */
  shippingTaxClass?: Maybe<TaxClass>;
  /** Denormalized public metadata of the shipping method's tax class. */
  shippingTaxClassMetadata: Array<MetadataItem>;
  /** Denormalized name of the tax class assigned to the shipping method. */
  shippingTaxClassName?: Maybe<Scalars['String']['output']>;
  /** Denormalized private metadata of the shipping method's tax class. Requires staff permissions to access. */
  shippingTaxClassPrivateMetadata: Array<MetadataItem>;
  /** The shipping tax rate value. */
  shippingTaxRate: Scalars['Float']['output'];
  status: OrderStatus;
  statusDisplay: Scalars['String']['output'];
  /** The sum of line prices not including shipping. */
  subtotal: TaxedMoney;
  /** Returns True if order has to be exempt from taxes. */
  taxExemption: Scalars['Boolean']['output'];
  /** Total amount of the order. */
  total: TaxedMoney;
  /** Amount authorized for the order. */
  totalAuthorized: Money;
  /** The difference between the paid and the order total amount. */
  totalBalance: Money;
  /** Amount captured by payment. */
  totalCaptured: Money;
  trackingClientId: Scalars['String']['output'];
  /** List of transactions for the order. */
  transactions: Array<TransactionItem>;
  translatedDiscountName?: Maybe<Scalars['String']['output']>;
  /** Undiscounted total amount of the order. */
  undiscountedTotal: TaxedMoney;
  updatedAt: Scalars['DateTime']['output'];
  user?: Maybe<User>;
  userEmail?: Maybe<Scalars['String']['output']>;
  voucher?: Maybe<Voucher>;
  weight?: Maybe<Scalars['Weight']['output']>;
};


/**
 * Mixin for the Order and Checkout models.
 *
 * It provides common fields and methods.
 */
export type AbstractOrderMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Mixin for the Order and Checkout models.
 *
 * It provides common fields and methods.
 */
export type AbstractOrderMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * Mixin for the Order and Checkout models.
 *
 * It provides common fields and methods.
 */
export type AbstractOrderPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Mixin for the Order and Checkout models.
 *
 * It provides common fields and methods.
 */
export type AbstractOrderPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProduct = Node & ObjectWithMetadata & Product & TempoNode & {
  __typename: 'AbstractProduct';
  ancestors: Array<AbstractProduct>;
  /** Get a single attribute attached to product by attribute slug. */
  attribute: Attribute;
  /** List of attributes assigned to this variant. */
  attributes: Array<Attribute>;
  /** Date when product is available for purchase. */
  availableForPurchaseAt: Scalars['DateTime']['output'];
  category?: Maybe<Category>;
  /** Channel given to retrieve this product variant. Also used by federation gateway to resolve this object in a federated query. */
  channel: Scalars['String']['output'];
  /** List of availability and price info in channels for the product. */
  channelListings: Array<ProductChannelListing>;
  /** List of collections for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS. */
  collections: Array<Collection>;
  createdAt: Scalars['DateTime']['output'];
  defaultVariant: Product;
  description?: Maybe<Scalars['JSONString']['output']>;
  /** Digital content for the product variant. */
  digitalContent: DigitalContent;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  imageById: ProductImage;
  images: Array<ProductImage>;
  /** Whether the product is in stock and visible or not. */
  isAvailable: Scalars['Boolean']['output'];
  /** Whether the product is available for purchase. */
  isAvailableForPurchase: Scalars['Boolean']['output'];
  /** List of media for the product variant. */
  media: Array<ProductMediaItem>;
  /** Get a single product media by ID. */
  mediaById: ProductMediaItem;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  parent: AbstractProduct;
  parentId?: Maybe<Scalars['ID']['output']>;
  pk: Scalars['String']['output'];
  /** Preorder data for product variant. */
  preorder?: Maybe<PreorderData>;
  /** Lists the storefront variant's pricing, the current price and discounts, only meant for displaying. */
  pricing?: Maybe<ProductPricingInfo>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  productKlass: ProductKlass;
  /** Quantity of a product available for sale in one checkout. Field value will be `null` when no `maxItemCountPerCheckout` in global settings has been set, and `productVariant` stocks are not tracked. */
  quantityAvailable?: Maybe<Scalars['Int']['output']>;
  /** Total quantity ordered. */
  quantityOrdered: Scalars['Int']['output'];
  rating: Scalars['Float']['output'];
  /** Total revenue generated by a variant in given period of time. Note: this field should be queried using `reportProductSales` query as it uses optimizations suitable for such calculations. */
  revenue: TaxedMoney;
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  /** Stocks for the product variant. */
  stocks: Array<Stock>;
  /** Tax class assigned to this product type. All products of this product type use this tax class, unless it's overridden in the `Product` type. */
  taxClass?: Maybe<TaxClass>;
  thumbnail?: Maybe<Image>;
  translation?: Maybe<ProductTranslation>;
  updatedAt: Scalars['DateTime']['output'];
  /** Get a single variant by SKU or ID. */
  variant: Product;
  /** List of variants for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS. */
  variants: Array<Product>;
  weight: Scalars['Weight']['output'];
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductAncestorsArgs = {
  includeSelf?: Scalars['Boolean']['input'];
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductAttributeArgs = {
  slug: Scalars['String']['input'];
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductAttributesArgs = {
  variantSelection?: InputMaybe<ProductAttributeScope>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductImageByIdArgs = {
  id: Scalars['String']['input'];
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductIsAvailableArgs = {
  address: AddressUpdateInput;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductIsAvailableForPurchaseArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductMediaByIdArgs = {
  id: Scalars['ID']['input'];
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductPricingArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  channelSlug?: InputMaybe<Scalars['String']['input']>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductQuantityAvailableArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductRevenueArgs = {
  period: ReportingPeriod;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductStocksArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductThumbnailArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};


/** AbstractProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type AbstractProductVariantArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type AccountError = ErrorInterface & {
  __typename: 'AccountError';
  /** A type of address that causes the error. */
  addressType?: Maybe<AddressType>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
};

export type AccountErrorCode =
  | 'ACCOUNT_NOT_CONFIRMED'
  | 'ACTIVATE_OWN_ACCOUNT'
  | 'ACTIVATE_SUPERUSER_ACCOUNT'
  | 'CHANNEL_INACTIVE'
  | 'DEACTIVATE_OWN_ACCOUNT'
  | 'DEACTIVATE_SUPERUSER_ACCOUNT'
  | 'DELETE_NON_STAFF_USER'
  | 'DELETE_OWN_ACCOUNT'
  | 'DELETE_STAFF_ACCOUNT'
  | 'DELETE_SUPERUSER_ACCOUNT'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INACTIVE'
  | 'INVALID'
  | 'INVALID_CREDENTIALS'
  | 'INVALID_PASSWORD'
  | 'JWT_DECODE_ERROR'
  | 'JWT_INVALID_CSRF_TOKEN'
  | 'JWT_INVALID_TOKEN'
  | 'JWT_MISSING_TOKEN'
  | 'JWT_SIGNATURE_EXPIRED'
  | 'LEFT_NOT_MANAGEABLE_PERMISSION'
  | 'MISSING_CHANNEL_SLUG'
  | 'NOT_FOUND'
  | 'OUT_OF_SCOPE_GROUP'
  | 'OUT_OF_SCOPE_PERMISSION'
  | 'OUT_OF_SCOPE_USER'
  | 'PASSWORD_ENTIRELY_NUMERIC'
  | 'PASSWORD_TOO_COMMON'
  | 'PASSWORD_TOO_SHORT'
  | 'PASSWORD_TOO_SIMILAR'
  | 'REQUIRED'
  | 'UNIQUE';

/** History log of the account. */
export type AccountEvent = Node & TempoNode & {
  __typename: 'AccountEvent';
  app?: Maybe<App>;
  count?: Maybe<Scalars['Int']['output']>;
  date: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Content of the event. */
  message: Scalars['String']['output'];
  /** The concerned order. */
  order: Order;
  /** The concerned order line. */
  orderLine: OrderLine;
  pk: Scalars['String']['output'];
  type: AccountEventType;
  user: User;
};

export type AccountEventType =
  | 'ACCOUNT_ACTIVATED'
  | 'ACCOUNT_CREATED'
  | 'ACCOUNT_DEACTIVATED'
  | 'CUSTOMER_DELETED'
  | 'DIGITAL_LINK_DOWNLOADED'
  | 'EMAIL_ASSIGNED'
  | 'EMAIL_CHANGED'
  | 'EMAIL_CHANGE_REQUEST'
  | 'NAME_ASSIGNED'
  | 'NOTE_ADDED'
  | 'NOTE_ADDED_TO_ORDER'
  | 'PASSWORD_CHANGED'
  | 'PASSWORD_RESET'
  | 'PASSWORD_RESET_LINK_SENT'
  | 'PLACED_ORDER';

/** Address(id, company_name, first_name, last_name, street_address_1, street_address_2, city, city_area, country_area, postal_code, country, phone, normalized, coordinates) */
export type Address = AddressBase & GoogleAddressBase & Node & TempoNode & {
  __typename: 'Address';
  city: Scalars['String']['output'];
  /** District. */
  cityArea?: Maybe<Scalars['String']['output']>;
  companyName?: Maybe<Scalars['String']['output']>;
  coordinates?: Maybe<Coordinates>;
  country: Country;
  /** State or province. */
  countryArea?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Address is user's default billing address. */
  isDefaultBillingAddress?: Maybe<Scalars['Boolean']['output']>;
  /** Indicates whether the address is the user's default shipping address. */
  isDefaultShippingAddress?: Maybe<Scalars['Boolean']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  pk: Scalars['String']['output'];
  postalCode: Scalars['String']['output'];
  streetAddress1: Scalars['String']['output'];
  streetAddress2?: Maybe<Scalars['String']['output']>;
};

export type AddressBase = {
  city: Scalars['String']['output'];
  cityArea?: Maybe<Scalars['String']['output']>;
  companyName?: Maybe<Scalars['String']['output']>;
  countryArea?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  postalCode: Scalars['String']['output'];
  streetAddress1: Scalars['String']['output'];
  streetAddress2?: Maybe<Scalars['String']['output']>;
};

/** Event sent when new address is created. */
export type AddressCreated = AddressEvent & Event & {
  __typename: 'AddressCreated';
  /** The address the event relates to. */
  address: Address;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** Event sent when address is deleted. */
export type AddressDeleted = AddressEvent & Event & {
  __typename: 'AddressDeleted';
  /** The address the event relates to. */
  address: Address;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AddressEvent = {
  /** The address the event relates to. */
  address: Address;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AddressMutationResult = BaseMutationResult & {
  __typename: 'AddressMutationResult';
  address: Address;
  errors?: Maybe<Array<ErrorInterface>>;
  user: User;
};

export type AddressType =
  | 'BILLING'
  | 'SHIPPING';

/** Address(id, company_name, first_name, last_name, street_address_1, street_address_2, city, city_area, country_area, postal_code, country, phone, normalized, coordinates) */
export type AddressUpdateInput = {
  city: Scalars['String']['input'];
  /** District. */
  cityArea?: InputMaybe<Scalars['String']['input']>;
  companyName?: InputMaybe<Scalars['String']['input']>;
  /** State or province. */
  countryArea?: InputMaybe<Scalars['String']['input']>;
  countryCode: CountryCode;
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postalCode: Scalars['String']['input'];
  streetAddress1: Scalars['String']['input'];
  streetAddress2?: InputMaybe<Scalars['String']['input']>;
};

/** Event sent when address is updated. */
export type AddressUpdated = AddressEvent & Event & {
  __typename: 'AddressUpdated';
  /** The address the event relates to. */
  address: Address;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AddressValidationData = {
  __typename: 'AddressValidationData';
  addressFormat: Scalars['String']['output'];
  addressLatinFormat: Scalars['String']['output'];
  allowedFields: Array<Scalars['String']['output']>;
  cityAreaChoices: Array<ChoiceValue>;
  cityAreaType: Scalars['String']['output'];
  cityChoices: Array<ChoiceValue>;
  cityType: Scalars['String']['output'];
  countryAreaChoices: Array<ChoiceValue>;
  countryAreaType: Scalars['String']['output'];
  countryCode: Scalars['String']['output'];
  countryName: Scalars['String']['output'];
  postalCodeExamples: Array<Scalars['String']['output']>;
  postalCodeMatchers: Array<Scalars['String']['output']>;
  postalCodePrefix: Scalars['String']['output'];
  postalCodeType: Scalars['String']['output'];
  requiredFields: Array<Scalars['String']['output']>;
  upperFields: Array<Scalars['String']['output']>;
};

/** Allocation(id, order_line, stock, quantity_allocated) */
export type Allocation = Node & TempoNode & {
  __typename: 'Allocation';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
  /** Quantity allocated for orders. */
  quantity: Scalars['Int']['output'];
  /** The warehouse were items were allocated. */
  warehouse: Warehouse;
};

export type AllocationStrategy =
  | 'PRIORITIZE_HIGH_STOCK'
  | 'PRIORITIZE_SORTING_ORDER';

/** App(id, created_at, updated_at, private_metadata, metadata, name, is_active, type, identifier, about_app, data_privacy, data_privacy_url, homepage_url, support_url, configuration_url, app_url, manifest_url, version, audience) */
export type App = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'App';
  /** Description of this app. */
  aboutApp: Scalars['String']['output'];
  /** JWT token used to authenticate by third-party app. */
  accessToken: Scalars['String']['output'];
  /** URL to iframe with the app. */
  appUrl: Scalars['String']['output'];
  /** The newly created authentication token. */
  authToken?: Maybe<Scalars['String']['output']>;
  configurationUrl: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  /** URL to details about the privacy policy on the app owner page. */
  dataPrivacyUrl: Scalars['String']['output'];
  /** App's dashboard extensions. */
  extensions: Array<AppExtension>;
  /** Homepage of the app. */
  homepageUrl: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Determines if app will be set active or not. */
  isActive: Scalars['Boolean']['output'];
  /** URL to manifest used during app's installation. */
  manifestUrl: Scalars['String']['output'];
  metadata: Array<MetadataItem>;
  metafield: Scalars['String']['output'];
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  permissions: Array<Permission>;
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** Support page for the app. */
  supportUrl: Scalars['String']['output'];
  /** Last 4 characters of the tokens. */
  tokens: Array<AppToken>;
  /** Type of the app. */
  type: AppType;
  version: Scalars['String']['output'];
  /** List of webhooks assigned to this app. */
  webhooks: Array<Webhook>;
};


/** App(id, created_at, updated_at, private_metadata, metadata, name, is_active, type, identifier, about_app, data_privacy, data_privacy_url, homepage_url, support_url, configuration_url, app_url, manifest_url, version, audience) */
export type AppMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** App(id, created_at, updated_at, private_metadata, metadata, name, is_active, type, identifier, about_app, data_privacy, data_privacy_url, homepage_url, support_url, configuration_url, app_url, manifest_url, version, audience) */
export type AppMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** App(id, created_at, updated_at, private_metadata, metadata, name, is_active, type, identifier, about_app, data_privacy, data_privacy_url, homepage_url, support_url, configuration_url, app_url, manifest_url, version, audience) */
export type AppPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** App(id, created_at, updated_at, private_metadata, metadata, name, is_active, type, identifier, about_app, data_privacy, data_privacy_url, homepage_url, support_url, configuration_url, app_url, manifest_url, version, audience) */
export type AppPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type AppBase = {
  /** The application the event relates to. */
  app: App;
};

export type AppConnection = {
  __typename: 'AppConnection';
  /** Contains the nodes in this connection */
  edges: Array<AppEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AppDeleted = AppBase & Event & {
  __typename: 'AppDeleted';
  /** The application the event relates to. */
  app: App;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** An edge in a connection. */
export type AppEdge = {
  __typename: 'AppEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: App;
};

export type AppError = ErrorInterface & {
  __typename: 'AppError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of permissions which causes the error. */
  permissions?: Maybe<Array<PermissionCode>>;
};

export type AppErrorCode =
  | 'FORBIDDEN'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'INVALID_MANIFEST_FORMAT'
  | 'INVALID_PERMISSION'
  | 'INVALID_STATUS'
  | 'INVALID_URL_FORMAT'
  | 'MANIFEST_URL_CANT_CONNECT'
  | 'NOT_FOUND'
  | 'OUT_OF_SCOPE_APP'
  | 'OUT_OF_SCOPE_PERMISSION'
  | 'REQUIRED'
  | 'UNIQUE';

/** Represents app data. */
export type AppExtension = Node & TempoNode & {
  __typename: 'AppExtension';
  /** JWT token used to authenticate by third-party app extension. */
  accessToken: Scalars['String']['output'];
  app: App;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Label of the extension to show in the dashboard. */
  label: Scalars['String']['output'];
  /** Place where given extension will be mounted. */
  mount: AppExtensionMount;
  permissions: Array<Permission>;
  pk: Scalars['String']['output'];
  target: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type AppExtensionConnection = {
  __typename: 'AppExtensionConnection';
  /** Contains the nodes in this connection */
  edges: Array<AppExtensionEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type AppExtensionEdge = {
  __typename: 'AppExtensionEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: AppExtension;
};

/** Represents app data. */
export type AppExtensionFilter = {
  AND?: InputMaybe<AppExtensionFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<AppExtensionFilter>;
  OR?: InputMaybe<AppExtensionFilter>;
  mount?: InputMaybe<Array<AppExtensionMount>>;
  target?: InputMaybe<AppExtensionTarget>;
};

export type AppExtensionMount =
  | 'CUSTOMER_DETAILS_MORE_ACTIONS'
  | 'CUSTOMER_OVERVIEW_CREATE'
  | 'CUSTOMER_OVERVIEW_MORE_ACTIONS'
  | 'NAVIGATION_CATALOG'
  | 'NAVIGATION_CUSTOMERS'
  | 'NAVIGATION_DISCOUNTS'
  | 'NAVIGATION_MEDIA'
  | 'NAVIGATION_ORDERS'
  | 'NAVIGATION_PAGES'
  | 'NAVIGATION_TRANSLATIONS'
  | 'ORDER_DETAILS_MORE_ACTIONS'
  | 'ORDER_OVERVIEW_CREATE'
  | 'ORDER_OVERVIEW_MORE_ACTIONS'
  | 'PRODUCT_DETAILS_MORE_ACTIONS'
  | 'PRODUCT_OVERVIEW_CREATE'
  | 'PRODUCT_OVERVIEW_MORE_ACTIONS';

export type AppExtensionTarget =
  | 'APP_PAGE'
  | 'POPUP';

/** App(id, created_at, updated_at, private_metadata, metadata, name, is_active, type, identifier, about_app, data_privacy, data_privacy_url, homepage_url, support_url, configuration_url, app_url, manifest_url, version, audience) */
export type AppFilter = {
  AND?: InputMaybe<AppFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<AppFilter>;
  OR?: InputMaybe<AppFilter>;
  /** Determines if app will be set active or not. */
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  /** Type of the app. */
  type?: InputMaybe<AppType>;
};

export type AppInput = {
  name: Scalars['String']['input'];
  permissions: Array<PermissionCode>;
};

export type AppInstallInput = {
  activateAfterInstallation?: InputMaybe<Scalars['Boolean']['input']>;
  appName: Scalars['String']['input'];
  manifestUrl: Scalars['String']['input'];
  permissions: Array<PermissionCode>;
};

/** AppInstallation(id, status, message, created_at, updated_at, app_name, manifest_url) */
export type AppInstallation = Job & Node & TempoNode & {
  __typename: 'AppInstallation';
  appName: Scalars['String']['output'];
  /** Created date time of job in ISO 8601 format. */
  createdAt: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  manifestUrl: Scalars['String']['output'];
  message: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Job status. */
  status: JobStatus;
  /** Date time of job last update in ISO 8601 format. */
  updatedAt: Scalars['DateTime']['output'];
};

export type AppInstallationMutationResult = BaseMutationResult & {
  __typename: 'AppInstallationMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: AppInstallation;
};

export type AppInstalled = AppBase & Event & {
  __typename: 'AppInstalled';
  /** The application the event relates to. */
  app: App;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AppManifestExtension = {
  __typename: 'AppManifestExtension';
  /** Label of the extension to show in the dashboard. */
  label: Scalars['String']['output'];
  /** Place where given extension will be mounted. */
  mount: AppExtensionMount;
  /** List of the app extension's permissions. */
  permissions: Array<Permission>;
  /** Type of way how app extension will be opened. */
  target: AppExtensionTarget;
  /** URL of a view where extension's iframe is placed. */
  url: Scalars['String']['output'];
};

export type AppManifestWebhook = {
  __typename: 'AppManifestWebhook';
  /** The name of the webhook. */
  name: Scalars['String']['output'];
  /** Subscription query of a webhook */
  query: Scalars['String']['output'];
  syncEvents: Array<WebhookEventTypeSync>;
  /** The url to receive the payload. */
  targetUrl: Scalars['String']['output'];
};

export type AppMutationResult = BaseMutationResult & {
  __typename: 'AppMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: App;
};

export type AppOrdering =
  | 'CREATION_DATE'
  | 'NAME';

export type AppStatusChanged = AppBase & Event & {
  __typename: 'AppStatusChanged';
  /** The application the event relates to. */
  app: App;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AppToken = Node & {
  __typename: 'AppToken';
  /** Last 4 characters of the token. */
  authToken: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Name of the authenticated token. */
  name: Scalars['String']['output'];
};

export type AppTokenInput = {
  app: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AppTokenMutationResult = BaseMutationResult & {
  __typename: 'AppTokenMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: AppToken;
};

export type AppType =
  | 'LOCAL'
  | 'THIRDPARTY';

export type AppUpdated = AppBase & Event & {
  __typename: 'AppUpdated';
  /** The application the event relates to. */
  app: App;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AppUser = App | User;

export type AreaUnit =
  | 'SQ_CM'
  | 'SQ_FT'
  | 'SQ_INCH'
  | 'SQ_KM'
  | 'SQ_M'
  | 'SQ_YD';

/** Asynchronous webhook event. */
export type AsyncWebhookEvent = Node & TempoNode & {
  __typename: 'AsyncWebhookEvent';
  /** Internal name of the event type. */
  eventType: AsyncWebhookEventType;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Display name of the event. */
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
};

export type AsyncWebhookEventType =
  | 'ADDRESS_CREATED'
  | 'ADDRESS_DELETED'
  | 'ADDRESS_UPDATED'
  | 'ANY'
  | 'APP_DELETED'
  | 'APP_INSTALLED'
  | 'APP_STATUS_CHANGED'
  | 'APP_UPDATED'
  | 'ATTRIBUTE_CREATED'
  | 'ATTRIBUTE_DELETED'
  | 'ATTRIBUTE_UPDATED'
  | 'ATTRIBUTE_VALUE_CREATED'
  | 'ATTRIBUTE_VALUE_DELETED'
  | 'ATTRIBUTE_VALUE_UPDATED'
  | 'CATEGORY_CREATED'
  | 'CATEGORY_DELETED'
  | 'CATEGORY_UPDATED'
  | 'CHANNEL_CREATED'
  | 'CHANNEL_DELETED'
  | 'CHANNEL_STATUS_CHANGED'
  | 'CHANNEL_UPDATED'
  | 'CHECKOUT_CREATED'
  | 'CHECKOUT_METADATA_UPDATED'
  | 'CHECKOUT_UPDATED'
  | 'COLLECTION_CREATED'
  | 'COLLECTION_DELETED'
  | 'COLLECTION_METADATA_UPDATED'
  | 'COLLECTION_UPDATED'
  | 'CUSTOMER_CREATED'
  | 'CUSTOMER_DELETED'
  | 'CUSTOMER_METADATA_UPDATED'
  | 'CUSTOMER_UPDATED'
  | 'DRAFT_ORDER_CREATED'
  | 'DRAFT_ORDER_DELETED'
  | 'DRAFT_ORDER_UPDATED'
  | 'FULFILLMENT_APPROVED'
  | 'FULFILLMENT_CANCELED'
  | 'FULFILLMENT_CREATED'
  | 'FULFILLMENT_METADATA_UPDATED'
  | 'GIFT_CARD_CREATED'
  | 'GIFT_CARD_DELETED'
  | 'GIFT_CARD_METADATA_UPDATED'
  | 'GIFT_CARD_STATUS_CHANGED'
  | 'GIFT_CARD_UPDATED'
  | 'INVOICE_DELETED'
  | 'INVOICE_REQUESTED'
  | 'INVOICE_SENT'
  | 'MEDIA_CREATED'
  | 'MEDIA_DELETED'
  | 'MEDIA_UPDATED'
  | 'MENU_CREATED'
  | 'MENU_DELETED'
  | 'MENU_ITEM_CREATED'
  | 'MENU_ITEM_DELETED'
  | 'MENU_ITEM_UPDATED'
  | 'MENU_UPDATED'
  | 'NOTIFY_USER'
  | 'OBSERVABILITY'
  | 'ORDER_CANCELLED'
  | 'ORDER_CONFIRMED'
  | 'ORDER_CREATED'
  | 'ORDER_FULFILLED'
  | 'ORDER_FULLY_PAID'
  | 'ORDER_METADATA_UPDATED'
  | 'ORDER_UPDATED'
  | 'PAGE_CREATED'
  | 'PAGE_DELETED'
  | 'PAGE_TYPE_CREATED'
  | 'PAGE_TYPE_DELETED'
  | 'PAGE_TYPE_UPDATED'
  | 'PAGE_UPDATED'
  | 'PERMISSION_GROUP_CREATED'
  | 'PERMISSION_GROUP_DELETED'
  | 'PERMISSION_GROUP_UPDATED'
  | 'PRODUCT_CREATED'
  | 'PRODUCT_DELETED'
  | 'PRODUCT_METADATA_UPDATED'
  | 'PRODUCT_UPDATED'
  | 'PRODUCT_VARIANT_BACK_IN_STOCK'
  | 'PRODUCT_VARIANT_CREATED'
  | 'PRODUCT_VARIANT_DELETED'
  | 'PRODUCT_VARIANT_METADATA_UPDATED'
  | 'PRODUCT_VARIANT_OUT_OF_STOCK'
  | 'PRODUCT_VARIANT_UPDATED'
  | 'SALE_CREATED'
  | 'SALE_DELETED'
  | 'SALE_TOGGLE'
  | 'SALE_UPDATED'
  | 'SHIPPING_PRICE_CREATED'
  | 'SHIPPING_PRICE_DELETED'
  | 'SHIPPING_PRICE_UPDATED'
  | 'SHIPPING_ZONE_CREATED'
  | 'SHIPPING_ZONE_DELETED'
  | 'SHIPPING_ZONE_METADATA_UPDATED'
  | 'SHIPPING_ZONE_UPDATED'
  | 'STAFF_CREATED'
  | 'STAFF_DELETED'
  | 'STAFF_UPDATED'
  | 'TRANSACTION_ACTION_REQUEST'
  | 'TRANSACTION_ITEM_METADATA_UPDATED'
  | 'TRANSLATION_CREATED'
  | 'TRANSLATION_UPDATED'
  | 'VOUCHER_CREATED'
  | 'VOUCHER_DELETED'
  | 'VOUCHER_METADATA_UPDATED'
  | 'VOUCHER_UPDATED'
  | 'WAREHOUSE_CREATED'
  | 'WAREHOUSE_DELETED'
  | 'WAREHOUSE_METADATA_UPDATED'
  | 'WAREHOUSE_UPDATED';

/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type Attribute = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Attribute';
  availableInGrid: Scalars['Boolean']['output'];
  /** The entity type which can be used as a reference. */
  entityType?: Maybe<AttributeEntityType>;
  filterableInDashboard: Scalars['Boolean']['output'];
  filterableInStorefront: Scalars['Boolean']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Input type to use for entering attribute values in the dashboard. */
  inputType: AttributeInputType;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  /** Attribute name displayed in the admin interface. */
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  productKlasses: ProductKlassNodeConnection;
  productVariantTypes: ProductKlassNodeConnection;
  /** Internal representation of attribute name. */
  slug: Scalars['String']['output'];
  storefrontSearchPosition: Scalars['Int']['output'];
  translation: AttributeTranslation;
  type: AttributeType;
  /** The unit of attribute values. */
  unit: MeasurementUnit;
  valueRequired: Scalars['Boolean']['output'];
  values: ValueConnection;
  visibleInStorefront: Scalars['Boolean']['output'];
  withChoices: Scalars['Boolean']['output'];
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributeMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributeMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributeProductKlassesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributeProductVariantTypesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributeTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};


/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributeValuesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ValueFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<AttributeChoicesOrderingInput>;
};

export type AttributeBase = {
  /** The attribute the event relates to. */
  attribute: Attribute;
};

export type AttributeChoicesOrdering =
  | 'NAME'
  | 'SLUG';

export type AttributeChoicesOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<AttributeChoicesOrdering>;
};

export type AttributeConnection = {
  __typename: 'AttributeConnection';
  /** Contains the nodes in this connection */
  edges: Array<AttributeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AttributeCreated = AttributeBase & Event & {
  __typename: 'AttributeCreated';
  /** The attribute the event relates to. */
  attribute: Attribute;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AttributeCreationInput = {
  availableInGrid?: InputMaybe<Scalars['Boolean']['input']>;
  entityType: AttributeEntityType;
  filterableInDashboard: Scalars['Boolean']['input'];
  filterableInStorefront: Scalars['Boolean']['input'];
  inputType: AttributeInputType;
  isVariantOnly?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  slug?: InputMaybe<Scalars['String']['input']>;
  storefrontSearchPosition?: InputMaybe<Scalars['Int']['input']>;
  type: AttributeType;
  unit?: InputMaybe<MeasurementUnit>;
  valueRequired: Scalars['Boolean']['input'];
  values: Array<ValueCreationInput>;
  visibleInStorefront: Scalars['Boolean']['input'];
};

export type AttributeDeleted = AttributeBase & Event & {
  __typename: 'AttributeDeleted';
  /** The attribute the event relates to. */
  attribute: Attribute;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** An edge in a connection. */
export type AttributeEdge = {
  __typename: 'AttributeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Attribute;
};

export type AttributeEntityType =
  | 'PAGE'
  | 'PRODUCT';

export type AttributeErrorCode =
  | 'ALREADY_EXISTS'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/**
 * Custom attribute of a product.
 *
 * Attributes can be assigned to products and variants at the product type level.".
 */
export type AttributeFilter = {
  AND?: InputMaybe<AttributeFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<AttributeFilter>;
  OR?: InputMaybe<AttributeFilter>;
  /** Whether the attribute can be displayed in the admin product list. */
  availableInGrid?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the attribute can be filtered in dashboard. */
  filterableInDashboard?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the attribute can be filtered in storefront. */
  filterableInStorefront?: InputMaybe<Scalars['Boolean']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  inCategory?: InputMaybe<Array<Scalars['ID']['input']>>;
  inCollection?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** Whether the attribute is for variants only. */
  isVariantOnly?: InputMaybe<Scalars['Boolean']['input']>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
  type?: InputMaybe<AttributeType>;
  /** Whether the attribute requires values to be passed or not. */
  valueRequired?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the attribute should be visible or not in storefront. */
  visibleInStorefront?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AttributeInput = {
  boolean?: InputMaybe<Scalars['Boolean']['input']>;
  date?: InputMaybe<DateRangeInput>;
  dateTime?: InputMaybe<DateTimeRangeInput>;
  slug: Scalars['String']['input'];
  values?: InputMaybe<Array<Scalars['String']['input']>>;
  valuesRange?: InputMaybe<IntRangeInput>;
};

export type AttributeInputType =
  | 'BOOLEAN'
  | 'DATE'
  | 'DATE_TIME'
  | 'DROPDOWN'
  | 'FILE'
  | 'MULTISELECT'
  | 'NUMERIC'
  | 'PLAIN_TEXT'
  | 'REFERENCE'
  | 'RICH_TEXT'
  | 'SWATCH';

export type AttributeMutationResult = BaseMutationResult & {
  __typename: 'AttributeMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Attribute;
};

export type AttributeNodeConnection = {
  __typename: 'AttributeNodeConnection';
  /** Contains the nodes in this connection */
  edges: Array<AttributeNodeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type AttributeNodeEdge = {
  __typename: 'AttributeNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Attribute;
};

export type AttributeOrdering =
  | 'AVAILABLE_IN_GRID'
  | 'FILTERABLE_IN_DASHBOARD'
  | 'FILTERABLE_IN_STOREFRONT'
  | 'IS_VARIANT_ONLY'
  | 'NAME'
  | 'SLUG'
  | 'STOREFRONT_SEARCH_POSITION'
  | 'VALUE_REQUIRED'
  | 'VISIBLE_IN_STOREFRONT';

export type AttributeOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<AttributeOrdering>;
};

/** AttributeTranslation(id, language_code, attribute, name) */
export type AttributeTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'AttributeTranslation';
  attribute: Attribute;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
};

export type AttributeType =
  | 'PAGE_TYPE'
  | 'PRODUCT_TYPE';

export type AttributeUpdateInput = {
  addValues: Array<ValueUpdateInput>;
  availableInGrid?: InputMaybe<Scalars['Boolean']['input']>;
  filterableInDashboard: Scalars['Boolean']['input'];
  filterableInStorefront: Scalars['Boolean']['input'];
  isVariantOnly?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  removeValues: Array<Scalars['ID']['input']>;
  slug: Scalars['String']['input'];
  storefrontSearchPosition?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<MeasurementUnit>;
  valueRequired: Scalars['Boolean']['input'];
  visibleInStorefront: Scalars['Boolean']['input'];
};

export type AttributeUpdated = AttributeBase & Event & {
  __typename: 'AttributeUpdated';
  /** The attribute the event relates to. */
  attribute: Attribute;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type AuthInput = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

export type AuthPluginInput = {
  data?: InputMaybe<Scalars['JSONString']['input']>;
  pluginId: Scalars['String']['input'];
};

export type AuthPluginMutationResult = BaseMutationResult & {
  __typename: 'AuthPluginMutationResult';
  /** The data returned by the authentication plugin. */
  data?: Maybe<Scalars['JSONString']['output']>;
  errors?: Maybe<Array<ErrorInterface>>;
};

export type BaseMutationResult = {
  errors?: Maybe<Array<ErrorInterface>>;
};

export type BasePricingInfo = {
  /** The discount amount if in sale (null otherwise). */
  discount: TaxedMoney;
  /** The discount amount in the local currency. */
  discountLocalCurrency: TaxedMoney;
  /** Whether it is in sale or not. */
  onSale: Scalars['Boolean']['output'];
};

export type BaseTranslation = {
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
};

export type BoolMutationResult = BaseMutationResult & {
  __typename: 'BoolMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Scalars['Boolean']['output'];
};

export type BulkProductError = ErrorInterface & {
  __typename: 'BulkProductError';
  /** List of attributes IDs which causes the error. */
  attributes?: Maybe<Array<Scalars['ID']['output']>>;
  /** List of channel IDs which causes the error. */
  channels?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** Index of an input list item that caused the error. */
  index: Scalars['Int']['output'];
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of attribute values IDs which causes the error. */
  values?: Maybe<Array<Scalars['ID']['output']>>;
  /** List of warehouse IDs which causes the error. */
  warehouses?: Maybe<Array<Scalars['ID']['output']>>;
};

export type BulkStockError = ErrorInterface & {
  __typename: 'BulkStockError';
  /** List of attributes IDs which causes the error. */
  attributes?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** Index of an input list item that caused the error. */
  index: Scalars['Int']['output'];
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of attribute values IDs which causes the error. */
  values?: Maybe<Array<Scalars['ID']['output']>>;
};

export type BulkValueInput = {
  boolean?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  values?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CalculateTaxes = Event & {
  __typename: 'CalculateTaxes';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  taxBase: TaxableObject;
};

export type CardInput = {
  code: Scalars['String']['input'];
  cvc?: InputMaybe<Scalars['String']['input']>;
  money: MoneyInput;
};

export type CatalogueInput = {
  categories: Array<Scalars['ID']['input']>;
  collections: Array<Scalars['ID']['input']>;
  products: Array<Scalars['ID']['input']>;
  variants: Array<Scalars['ID']['input']>;
};

/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type Category = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Category';
  /** List of ancestors of the category. */
  ancestors: CategoryNodeConnection;
  backgroundImage?: Maybe<Image>;
  /** List of children of the category. */
  children: CategoryNodeConnection;
  description?: Maybe<Scalars['JSONString']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  level: Scalars['Int']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  parent: Category;
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** List of products in the category. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS. */
  products: ProductNodeConnection;
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  translation?: Maybe<CategoryTranslation>;
  url: Scalars['String']['output'];
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryBackgroundImageArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryChildrenArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<ProductOrderingInput>;
};


/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

export type CategoryBase = {
  /** The category the event relates to. */
  category: Category;
};

export type CategoryConnection = {
  __typename: 'CategoryConnection';
  /** Contains the nodes in this connection */
  edges: Array<CategoryEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CategoryCreated = CategoryBase & Event & {
  __typename: 'CategoryCreated';
  /** The category the event relates to. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type CategoryDeleted = CategoryBase & Event & {
  __typename: 'CategoryDeleted';
  /** The category the event relates to. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** An edge in a connection. */
export type CategoryEdge = {
  __typename: 'CategoryEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Category;
};

/**
 * A category of products.
 *
 * Categories allow organizing products into tree-like hierarchies that can be used
 * for navigation in the storefront.
 */
export type CategoryFilter = {
  AND?: InputMaybe<CategoryFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<CategoryFilter>;
  OR?: InputMaybe<CategoryFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CategoryInput = {
  backgroundImage: Scalars['Upload']['input'];
  backgroundImageAlt: Scalars['String']['input'];
  description?: InputMaybe<Scalars['JSONString']['input']>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  name: Scalars['String']['input'];
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  seo: SeoInput;
  slug: Scalars['String']['input'];
};

export type CategoryMutationResult = BaseMutationResult & {
  __typename: 'CategoryMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Category;
};

export type CategoryNodeConnection = {
  __typename: 'CategoryNodeConnection';
  /** Contains the nodes in this connection */
  edges: Array<CategoryNodeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type CategoryNodeEdge = {
  __typename: 'CategoryNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Category;
};

export type CategoryOrdering =
  | 'NAME'
  | 'PRODUCT_COUNT'
  | 'SUBCATEGORY_COUNT';

export type CategoryOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<CategoryOrdering>;
};

/** CategoryTranslation(id, language_code, seo_title, seo_description, category, name, description) */
export type CategoryTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'CategoryTranslation';
  category: Category;
  /** Translated description of the category. */
  description?: Maybe<Scalars['JSONString']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
};

export type CategoryUpdated = CategoryBase & Event & {
  __typename: 'CategoryUpdated';
  /** The category the event relates to. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/**
 * A sales channel.
 *
 * Inspired by https://docs.saleor.io/docs/3.x/developer/channels
 */
export type Channel = Node & TempoNode & {
  __typename: 'Channel';
  /** List of shippable countries for the channel. */
  countries: Array<Country>;
  /** A currency that is assigned to the channel. */
  currencyCode: Scalars['String']['output'];
  /** Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided. */
  defaultCountry: Country;
  /** Whether a channel has associated orders. */
  hasOrders: Scalars['Boolean']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Whether the channel is active. */
  isActive: Scalars['Boolean']['output'];
  /** Name of the channel. */
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  /** Define the stock setting for this channel. */
  stockSettings: StockSettings;
  /** List of warehouses assigned to this channel. */
  warehouses: Array<Warehouse>;
};

export type ChannelBase = {
  /** The channel the event relates to. */
  channel: Channel;
};

export type ChannelCreated = ChannelBase & Event & {
  __typename: 'ChannelCreated';
  /** The channel the event relates to. */
  channel: Channel;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type ChannelCreationInput = {
  addShippingZones?: InputMaybe<Array<Scalars['ID']['input']>>;
  addWarehouses?: InputMaybe<Array<Scalars['ID']['input']>>;
  currencyCode: Scalars['String']['input'];
  defaultCountryCode: CountryCode;
  isActive: Scalars['Boolean']['input'];
  name: Scalars['String']['input'];
  slug: Scalars['String']['input'];
  stockSettings?: InputMaybe<StockSettingsInput>;
};

export type ChannelDeleteInput = {
  channelId: Scalars['ID']['input'];
};

export type ChannelDeleted = ChannelBase & Event & {
  __typename: 'ChannelDeleted';
  /** The channel the event relates to. */
  channel: Channel;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type ChannelError = ErrorInterface & {
  __typename: 'ChannelError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of shipping zone IDs which causes the error. */
  shippingZones?: Maybe<Array<Scalars['ID']['output']>>;
  /** List of warehouses IDs which causes the error. */
  warehouses?: Maybe<Array<Scalars['ID']['output']>>;
};

export type ChannelErrorCode =
  | 'ALREADY_EXISTS'
  | 'CHANNELS_CURRENCY_MUST_BE_THE_SAME'
  | 'CHANNEL_WITH_ORDERS'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

export type ChannelMutationResult = BaseMutationResult & {
  __typename: 'ChannelMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Channel;
};

export type ChannelReorderWarehousesMutationResult = BaseMutationResult & {
  __typename: 'ChannelReorderWarehousesMutationResult';
  /** Channel within the warehouses are reordered. */
  channel: Channel;
  errors?: Maybe<Array<ErrorInterface>>;
};

export type ChannelStatusChanged = ChannelBase & Event & {
  __typename: 'ChannelStatusChanged';
  /** The channel the event relates to. */
  channel: Channel;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type ChannelUpdateInput = {
  addShippingZones?: InputMaybe<Array<Scalars['ID']['input']>>;
  addWarehouses?: InputMaybe<Array<Scalars['ID']['input']>>;
  defaultCountryCode: CountryCode;
  isActive: Scalars['Boolean']['input'];
  name: Scalars['String']['input'];
  removeShippingZones?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeWarehouses?: InputMaybe<Array<Scalars['ID']['input']>>;
  slug: Scalars['String']['input'];
  stockSettings?: InputMaybe<StockSettingsInput>;
};

export type ChannelUpdated = ChannelBase & Event & {
  __typename: 'ChannelUpdated';
  /** The channel the event relates to. */
  channel: Channel;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type ChargeStatus =
  | 'CANCELLED'
  | 'FULLY_CHARGED'
  | 'FULLY_REFUNDED'
  | 'NOT_CHARGED'
  | 'PARTIALLY_CHARGED'
  | 'PARTIALLY_REFUNDED'
  | 'PENDING'
  | 'REFUSED';

/** A shopping checkout. */
export type Checkout = AbstractOrder & Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Checkout';
  /** List of actions that can be performed in the current state of an order. */
  actions: Array<OrderAction>;
  /** The authorize status of the order. */
  authorizeStatus: OrderAuthorizeStatus;
  /** Collection points that can be used for this order. */
  availableCollectionPoints: Array<Warehouse>;
  /** List of available payment gateways. */
  availablePaymentGateways: Array<PaymentGateway>;
  availableShippingMethods?: Maybe<Array<ShippingMethod>>;
  billingAddress?: Maybe<Address>;
  /** Informs whether a draft order can be finalized (turned into a regular order). */
  canFinalize: Scalars['Boolean']['output'];
  channel: Channel;
  /** The charge status of the order. */
  chargeStatus: OrderChargeStatus;
  collectionPointName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  /** Email of a customer. */
  customerEmail?: Maybe<Scalars['String']['output']>;
  customerFirstName?: Maybe<Scalars['String']['output']>;
  customerLastName?: Maybe<Scalars['String']['output']>;
  customerNote: Scalars['String']['output'];
  /** Phone number of a customer. */
  customerPhone?: Maybe<Scalars['String']['output']>;
  discount: Money;
  discountName: Scalars['String']['output'];
  /** List of all discounts assigned to the order. */
  discounts: Array<OrderDiscount>;
  /** Determines whether checkout prices should include taxes when displayed in a storefront. */
  displayGrossPrices: Scalars['Boolean']['output'];
  /** List of errors that occurred during order validation. */
  errors: Array<OrderError>;
  /** List of events associated with the order. */
  events: Array<OrderEvent>;
  /** The date and time when fulfillment of the order must be completed. */
  fulfillmentDeadline?: Maybe<Scalars['DateTime']['output']>;
  /** The delivery method selected for this checkout. */
  fulfillmentMethod?: Maybe<FulfillmentMethod>;
  fulfillmentMethodType?: Maybe<FulfillmentMethodType>;
  /** List of shipments for the order. */
  fulfillments: Array<Fulfillment>;
  /** List of gift cards associated with this checkout. */
  giftCards: Array<GiftCard>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** List of order invoices. Can be fetched for orders created in Tempo 3.2 and later, for other orders requires one of the following permissions: MANAGE_ORDERS, OWNER. */
  invoices: Array<Invoice>;
  /** Informs if an order is fully paid. */
  isPaid: Scalars['Boolean']['output'];
  /** Returns True, if checkout requires shipping. */
  isShippingRequired: Scalars['Boolean']['output'];
  /** Checkout language code. */
  languageCode: LanguageCode;
  /** A list of checkout lines, each containing information about an item in the checkout. */
  lines: Array<CheckoutLine>;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  note: Scalars['String']['output'];
  number: Scalars['String']['output'];
  /** The order origin. */
  origin: OrderOrigin;
  /** The ID of the order that was the base for this order. */
  original: Scalars['ID']['output'];
  paymentStatus: ChargeStatus;
  paymentStatusDisplay: Scalars['String']['output'];
  payments: Array<Payment>;
  pk: Scalars['String']['output'];
  /** List of points of contact for order fulfillment. */
  pointsOfContact: Array<PointOfContact>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** The number of items purchased. */
  quantity: Scalars['Int']['output'];
  redirectUrl: Scalars['String']['output'];
  shippingAddress?: Maybe<Address>;
  shippingMethod?: Maybe<ShippingMethod>;
  shippingMethodName: Scalars['String']['output'];
  /** Shipping methods that can be used with this checkout. */
  shippingMethods: Array<ShippingMethod>;
  /** The price of the shipping, with all the taxes included. */
  shippingPrice: TaxedMoney;
  /** Denormalized tax class assigned to the shipping method. */
  shippingTaxClass?: Maybe<TaxClass>;
  /** Denormalized public metadata of the shipping method's tax class. */
  shippingTaxClassMetadata: Array<MetadataItem>;
  /** Denormalized name of the tax class assigned to the shipping method. */
  shippingTaxClassName?: Maybe<Scalars['String']['output']>;
  /** Denormalized private metadata of the shipping method's tax class. Requires staff permissions to access. */
  shippingTaxClassPrivateMetadata: Array<MetadataItem>;
  /** The shipping tax rate value. */
  shippingTaxRate: Scalars['Float']['output'];
  status: OrderStatus;
  statusDisplay: Scalars['String']['output'];
  /** Date when oldest stock reservation for this checkout expires or null if no stock is reserved. */
  stockReservationExpires: Scalars['DateTime']['output'];
  /** The sum of line prices not including shipping. */
  subtotal: TaxedMoney;
  /** The price of the checkout before shipping, with taxes included. */
  subtotalPrice: TaxedMoney;
  /** Returns True if order has to be exempt from taxes. */
  taxExemption: Scalars['Boolean']['output'];
  /** Total amount of the order. */
  total: TaxedMoney;
  /** Amount authorized for the order. */
  totalAuthorized: Money;
  /** The difference between the paid and the order total amount. */
  totalBalance: Money;
  /** Amount captured by payment. */
  totalCaptured: Money;
  /** The sum of the the checkout line prices, with all the taxes,shipping costs, and discounts included. */
  totalPrice: TaxedMoney;
  trackingClientId: Scalars['String']['output'];
  /** List of transactions for the order. */
  transactions: Array<TransactionItem>;
  translatedDiscountName?: Maybe<Scalars['String']['output']>;
  /** Undiscounted total amount of the order. */
  undiscountedTotal: TaxedMoney;
  updatedAt: Scalars['DateTime']['output'];
  user?: Maybe<User>;
  userEmail?: Maybe<Scalars['String']['output']>;
  validationErrors: Array<Error>;
  voucher?: Maybe<Voucher>;
  voucherCode?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['Weight']['output']>;
};


/** A shopping checkout. */
export type CheckoutMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A shopping checkout. */
export type CheckoutMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A shopping checkout. */
export type CheckoutPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A shopping checkout. */
export type CheckoutPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type CheckoutAddressValidationRules = {
  checkFieldsFormat?: Scalars['Boolean']['input'];
  checkRequiredFields?: Scalars['Boolean']['input'];
  enableFieldsNormalization?: Scalars['Boolean']['input'];
};

export type CheckoutBase = {
  /** The checkout the event relates to. */
  checkout: Checkout;
};

export type CheckoutCompleteMutationResult = BaseMutationResult & {
  __typename: 'CheckoutCompleteMutationResult';
  /** Confirmation data used to process additional authorization steps. */
  confirmationData?: Maybe<Scalars['JSONString']['output']>;
  /** Set to true if payment needs to be confirmed before checkout is complete. */
  confirmationNeeded: Scalars['Boolean']['output'];
  errors?: Maybe<Array<ErrorInterface>>;
  order: Order;
};

export type CheckoutConnection = {
  __typename: 'CheckoutConnection';
  /** Contains the nodes in this connection */
  edges: Array<CheckoutEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CheckoutContactInfoUpdateInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
};

export type CheckoutCreated = CheckoutBase & Event & {
  __typename: 'CheckoutCreated';
  /** The checkout the event relates to. */
  checkout: Checkout;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type CheckoutCreationInput = {
  billingAddress?: InputMaybe<AddressUpdateInput>;
  channel?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  languageCode?: InputMaybe<LanguageCode>;
  lines: Array<CheckoutLineInput>;
  pointsOfContact?: InputMaybe<Array<CheckoutPointOfContactInput>>;
  shippingAddress?: InputMaybe<AddressUpdateInput>;
  validationRules?: InputMaybe<CheckoutValidationRules>;
};

/** An edge in a connection. */
export type CheckoutEdge = {
  __typename: 'CheckoutEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Checkout;
};

export type CheckoutError = ErrorInterface & {
  __typename: 'CheckoutError';
  /** The type of address that causes the error. */
  addressType?: Maybe<AddressType>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** List of line IDs that cause the error. */
  lines?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of variant IDs that cause the error. */
  variants?: Maybe<Array<Scalars['ID']['output']>>;
};

export type CheckoutErrorCode =
  | 'BILLING_ADDRESS_NOT_SET'
  | 'CHANNEL_INACTIVE'
  | 'CHECKOUT_NOT_FULLY_PAID'
  | 'DELIVERY_METHOD_NOT_APPLICABLE'
  | 'EMAIL_NOT_SET'
  | 'GIFT_CARD_NOT_APPLICABLE'
  | 'GRAPHQL_ERROR'
  | 'INACTIVE_PAYMENT'
  | 'INSUFFICIENT_STOCK'
  | 'INVALID'
  | 'INVALID_SHIPPING_METHOD'
  | 'MISSING_CHANNEL_SLUG'
  | 'NOT_FOUND'
  | 'NO_LINES'
  | 'PAYMENT_ERROR'
  | 'PRODUCT_NOT_PUBLISHED'
  | 'PRODUCT_UNAVAILABLE_FOR_PURCHASE'
  | 'QUANTITY_GREATER_THAN_LIMIT'
  | 'REQUIRED'
  | 'SHIPPING_ADDRESS_NOT_SET'
  | 'SHIPPING_METHOD_NOT_APPLICABLE'
  | 'SHIPPING_METHOD_NOT_SET'
  | 'SHIPPING_NOT_REQUIRED'
  | 'TAX_ERROR'
  | 'UNAVAILABLE_VARIANT_IN_CHANNEL'
  | 'UNIQUE'
  | 'VOUCHER_NOT_APPLICABLE'
  | 'ZERO_QUANTITY';

/** A shopping checkout. */
export type CheckoutFilter = {
  AND?: InputMaybe<CheckoutFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<CheckoutFilter>;
  OR?: InputMaybe<CheckoutFilter>;
  createdAt?: InputMaybe<DateRangeInput>;
  customer?: InputMaybe<Scalars['String']['input']>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type CheckoutFilterShippingMethods = CheckoutBase & Event & {
  __typename: 'CheckoutFilterShippingMethods';
  /** The checkout the event relates to. */
  checkout: Checkout;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** Shipping methods that can be used with this checkout. */
  shippingMethods: Array<ShippingMethod>;
};

/** A checkout line. */
export type CheckoutLine = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'CheckoutLine';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  product: ConcreteProduct;
  quantity: Scalars['Int']['output'];
  /** Indicates whether the item need to be delivered. */
  requiresShipping: Scalars['Boolean']['output'];
  totalPrice: TaxedMoney;
  /** The sum of the checkout line price, without discounts. */
  undiscountedTotalPrice: Money;
  /** The unit price of the checkout line, without discounts. */
  undiscountedUnitPrice: Money;
  /** The unit price of the checkout line, with taxes and discounts. */
  unitPrice: TaxedMoney;
};


/** A checkout line. */
export type CheckoutLineMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A checkout line. */
export type CheckoutLineMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A checkout line. */
export type CheckoutLinePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A checkout line. */
export type CheckoutLinePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type CheckoutLineConnection = {
  __typename: 'CheckoutLineConnection';
  /** Contains the nodes in this connection */
  edges: Array<CheckoutLineEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type CheckoutLineEdge = {
  __typename: 'CheckoutLineEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: CheckoutLine;
};

export type CheckoutLineInput = {
  forceNewLine?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  price?: InputMaybe<Scalars['PositiveDecimal']['input']>;
  productId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
};

export type CheckoutLineUpdateInput = {
  lineId?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['PositiveDecimal']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
};

export type CheckoutMetadataUpdated = CheckoutBase & Event & {
  __typename: 'CheckoutMetadataUpdated';
  /** The checkout the event relates to. */
  checkout: Checkout;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type CheckoutMutationResult = BaseMutationResult & {
  __typename: 'CheckoutMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Checkout;
};

export type CheckoutNodeConnection = {
  __typename: 'CheckoutNodeConnection';
  /** Contains the nodes in this connection */
  edges: Array<CheckoutNodeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type CheckoutNodeEdge = {
  __typename: 'CheckoutNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Checkout;
};

export type CheckoutOptionalMutationResult = BaseMutationResult & {
  __typename: 'CheckoutOptionalMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result?: Maybe<Checkout>;
};

export type CheckoutOrdering =
  | 'CREATION_DATE'
  | 'CUSTOMER'
  | 'PAYMENT';

export type CheckoutOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<CheckoutOrdering>;
};

export type CheckoutPaymentMutationResult = BaseMutationResult & {
  __typename: 'CheckoutPaymentMutationResult';
  /** Related checkout object. */
  checkout: Checkout;
  errors?: Maybe<Array<ErrorInterface>>;
  /** A newly created payment. */
  payment: Payment;
};

export type CheckoutPointOfContactInput = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  notes: Scalars['String']['input'];
  phone: Scalars['String']['input'];
};

export type CheckoutUpdated = CheckoutBase & Event & {
  __typename: 'CheckoutUpdated';
  /** The checkout the event relates to. */
  checkout: Checkout;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type CheckoutValidationRules = {
  billingAddress?: InputMaybe<CheckoutAddressValidationRules>;
  shippingAddress?: InputMaybe<CheckoutAddressValidationRules>;
};

export type ChoiceValue = {
  __typename: 'ChoiceValue';
  raw: Scalars['String']['output'];
  verbose: Scalars['String']['output'];
};

/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type Collection = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Collection';
  backgroundImage?: Maybe<Image>;
  /** Channel given to retrieve this collection. Also used by federation gateway to resolve this object in a federated query. */
  channel: Scalars['String']['output'];
  /** List of channels in which the collection is available. */
  channelListings: Array<CollectionChannelListing>;
  description?: Maybe<Scalars['JSONString']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  products: ProductConnection;
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  translation?: Maybe<CollectionTranslation>;
};


/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionBackgroundImageArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
};


/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<ProductOrderingInput>;
};


/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

export type CollectionBase = {
  /** The collection the event relates to. */
  collection: Collection;
};


export type CollectionBaseCollectionArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** Represents collection channel listing. */
export type CollectionChannelListing = Node & TempoNode & {
  __typename: 'CollectionChannelListing';
  channel: Channel;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isPublished: Scalars['Boolean']['output'];
  pk: Scalars['String']['output'];
  /** The collection publication date. */
  publishedAt: Scalars['DateTime']['output'];
};

export type CollectionChannelListingError = ErrorInterface & {
  __typename: 'CollectionChannelListingError';
  /** List of attributes IDs which causes the error. */
  attributes?: Maybe<Array<Scalars['ID']['output']>>;
  /** List of channels IDs which causes the error. */
  channels?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of attribute values IDs which causes the error. */
  values?: Maybe<Array<Scalars['ID']['output']>>;
};

export type CollectionChannelListingMutationResult = BaseMutationResult & {
  __typename: 'CollectionChannelListingMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: CollectionChannelListing;
};

export type CollectionChannelListingUpdateInput = {
  addChannels?: InputMaybe<Array<PublishableChannelListingInput>>;
  removeChannels?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CollectionConnection = {
  __typename: 'CollectionConnection';
  /** Contains the nodes in this connection */
  edges: Array<CollectionEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CollectionCreated = CollectionBase & Event & {
  __typename: 'CollectionCreated';
  /** The collection the event relates to. */
  collection: Collection;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};


export type CollectionCreatedCollectionArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type CollectionCreationInput = {
  backgroundImage: Scalars['Upload']['input'];
  backgroundImageAlt: Scalars['String']['input'];
  description?: InputMaybe<Scalars['JSONString']['input']>;
  isPublished: Scalars['Boolean']['input'];
  metadata?: InputMaybe<Array<MetadataInput>>;
  name: Scalars['String']['input'];
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  products: Array<Scalars['ID']['input']>;
  seo: SeoInput;
  slug: Scalars['String']['input'];
};

export type CollectionDeleted = CollectionBase & Event & {
  __typename: 'CollectionDeleted';
  /** The collection the event relates to. */
  collection: Collection;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};


export type CollectionDeletedCollectionArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** An edge in a connection. */
export type CollectionEdge = {
  __typename: 'CollectionEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Collection;
};

export type CollectionErrorCode =
  | 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/** Collection(id, private_metadata, metadata, seo_title, seo_description, name, slug, background_image, background_image_alt, description) */
export type CollectionFilter = {
  AND?: InputMaybe<CollectionFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<CollectionFilter>;
  OR?: InputMaybe<CollectionFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  published?: InputMaybe<CollectionPublished>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CollectionInput = {
  backgroundImage: Scalars['Upload']['input'];
  backgroundImageAlt: Scalars['String']['input'];
  description?: InputMaybe<Scalars['JSONString']['input']>;
  isPublished: Scalars['Boolean']['input'];
  metadata?: InputMaybe<Array<MetadataInput>>;
  name: Scalars['String']['input'];
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  seo: SeoInput;
  slug: Scalars['String']['input'];
};

export type CollectionMetadataUpdated = CollectionBase & Event & {
  __typename: 'CollectionMetadataUpdated';
  /** The collection the event relates to. */
  collection: Collection;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};


export type CollectionMetadataUpdatedCollectionArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type CollectionMutationResult = BaseMutationResult & {
  __typename: 'CollectionMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Collection;
};

export type CollectionOrdering =
  | 'AVAILABILITY'
  | 'NAME'
  | 'PRODUCT_COUNT'
  | 'PUBLISHED_AT';

export type CollectionOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<CollectionOrdering>;
};

export type CollectionPublished =
  | 'HIDDEN'
  | 'PUBLISHED';

/** CollectionTranslation(id, language_code, seo_title, seo_description, collection, name, description) */
export type CollectionTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'CollectionTranslation';
  collection: Collection;
  /** Translated description of the collection. */
  description?: Maybe<Scalars['JSONString']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
};

export type CollectionUpdated = CollectionBase & Event & {
  __typename: 'CollectionUpdated';
  /** The collection the event relates to. */
  collection: Collection;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};


export type CollectionUpdatedCollectionArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProduct = Node & ObjectWithMetadata & Product & TempoNode & {
  __typename: 'ConcreteProduct';
  ancestors: Array<AbstractProduct>;
  /** Get a single attribute attached to product by attribute slug. */
  attribute: Attribute;
  /** List of attributes assigned to this variant. */
  attributes: Array<Attribute>;
  /** Date when product is available for purchase. */
  availableForPurchaseAt: Scalars['DateTime']['output'];
  category?: Maybe<Category>;
  /** Channel given to retrieve this product variant. Also used by federation gateway to resolve this object in a federated query. */
  channel: Scalars['String']['output'];
  /** List of availability and price info in channels for the product. */
  channelListings: Array<ProductChannelListing>;
  /** List of collections for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS. */
  collections: Array<Collection>;
  createdAt: Scalars['DateTime']['output'];
  defaultVariant: Product;
  description?: Maybe<Scalars['JSONString']['output']>;
  /** Digital content for the product variant. */
  digitalContent: DigitalContent;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  imageById: ProductImage;
  images: Array<ProductImage>;
  /** Whether the product is in stock and visible or not. */
  isAvailable: Scalars['Boolean']['output'];
  /** Whether the product is available for purchase. */
  isAvailableForPurchase: Scalars['Boolean']['output'];
  /** Gross margin percentage value. */
  margin: Scalars['Int']['output'];
  /** List of media for the product variant. */
  media: Array<ProductMediaItem>;
  /** Get a single product media by ID. */
  mediaById: ProductMediaItem;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  parent: AbstractProduct;
  parentId?: Maybe<Scalars['ID']['output']>;
  pk: Scalars['String']['output'];
  /** Preorder data for product variant. */
  preorder?: Maybe<PreorderData>;
  /** Lists the storefront variant's pricing, the current price and discounts, only meant for displaying. */
  pricing?: Maybe<ProductPricingInfo>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  productKlass: ProductKlass;
  /** Quantity of a product available for sale in one checkout. Field value will be `null` when no `maxItemCountPerCheckout` in global settings has been set, and `productVariant` stocks are not tracked. */
  quantityAvailable?: Maybe<Scalars['Int']['output']>;
  quantityLimitPerCustomer: Scalars['Int']['output'];
  /** Total quantity ordered. */
  quantityOrdered: Scalars['Int']['output'];
  rating: Scalars['Float']['output'];
  /** Total revenue generated by a variant in given period of time. Note: this field should be queried using `reportProductSales` query as it uses optimizations suitable for such calculations. */
  revenue: TaxedMoney;
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  sku: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  /** Stocks for the product variant. */
  stocks: Array<Stock>;
  /** Tax class assigned to this product type. All products of this product type use this tax class, unless it's overridden in the `Product` type. */
  taxClass?: Maybe<TaxClass>;
  thumbnail?: Maybe<Image>;
  trackInventory: Scalars['Boolean']['output'];
  translation?: Maybe<ProductTranslation>;
  updatedAt: Scalars['DateTime']['output'];
  /** Get a single variant by SKU or ID. */
  variant: Product;
  /** List of variants for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS. */
  variants: Array<Product>;
  weight: Scalars['Weight']['output'];
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductAncestorsArgs = {
  includeSelf?: Scalars['Boolean']['input'];
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductAttributeArgs = {
  slug: Scalars['String']['input'];
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductAttributesArgs = {
  variantSelection?: InputMaybe<ProductAttributeScope>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductImageByIdArgs = {
  id: Scalars['String']['input'];
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductIsAvailableArgs = {
  address: AddressUpdateInput;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductIsAvailableForPurchaseArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductMediaByIdArgs = {
  id: Scalars['ID']['input'];
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductPricingArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  channelSlug?: InputMaybe<Scalars['String']['input']>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductQuantityAvailableArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductRevenueArgs = {
  period: ReportingPeriod;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductStocksArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductThumbnailArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};


/** ConcreteProduct(id, sort_order, created_at, updated_at, private_metadata, metadata, path, position, seo_title, seo_description, type, klass, name, slug, sku, description, description_plaintext, is_abstract, parent, search_document, search_vector, search_index_dirty, default_variant, category, track_inventory, is_preorder, preorder_end_date, preorder_global_threshold, quantity_limit_per_customer, weight, rating, tax_class) */
export type ConcreteProductVariantArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type ConfigurationItem = {
  __typename: 'ConfigurationItem';
  /** Help text for the field. */
  helpText?: Maybe<Scalars['String']['output']>;
  /** Label for the field. */
  label?: Maybe<Scalars['String']['output']>;
  /** Name of the field. */
  name: Scalars['String']['output'];
  /** Type of the field. */
  type: ConfigurationTypeField;
  /** Current value of the field. */
  value?: Maybe<Scalars['String']['output']>;
};

export type ConfigurationItemInput = {
  name: Scalars['String']['input'];
  value?: InputMaybe<Scalars['String']['input']>;
};

export type ConfigurationTypeField =
  | 'BOOLEAN'
  | 'MULTILINE'
  | 'OUTPUT'
  | 'PASSWORD'
  | 'SECRET'
  | 'SECRET_MULTILINE'
  | 'STRING';

export type Coordinates = {
  __typename: 'Coordinates';
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
};

export type Country = {
  __typename: 'Country';
  code: CountryCode;
  name: Scalars['String']['output'];
};

export type CountryCode =
  | 'AD'
  | 'AE'
  | 'AF'
  | 'AG'
  | 'AI'
  | 'AL'
  | 'AM'
  | 'AO'
  | 'AQ'
  | 'AR'
  | 'AS'
  | 'AT'
  | 'AU'
  | 'AW'
  | 'AX'
  | 'AZ'
  | 'BA'
  | 'BB'
  | 'BD'
  | 'BE'
  | 'BF'
  | 'BG'
  | 'BH'
  | 'BI'
  | 'BJ'
  | 'BL'
  | 'BM'
  | 'BN'
  | 'BO'
  | 'BQ'
  | 'BR'
  | 'BS'
  | 'BT'
  | 'BV'
  | 'BW'
  | 'BY'
  | 'BZ'
  | 'CA'
  | 'CC'
  | 'CD'
  | 'CF'
  | 'CG'
  | 'CH'
  | 'CI'
  | 'CK'
  | 'CL'
  | 'CM'
  | 'CN'
  | 'CO'
  | 'CR'
  | 'CU'
  | 'CV'
  | 'CW'
  | 'CX'
  | 'CY'
  | 'CZ'
  | 'DE'
  | 'DJ'
  | 'DK'
  | 'DM'
  | 'DO'
  | 'DZ'
  | 'EC'
  | 'EE'
  | 'EG'
  | 'EH'
  | 'ER'
  | 'ES'
  | 'ET'
  | 'EU'
  | 'FI'
  | 'FJ'
  | 'FK'
  | 'FM'
  | 'FO'
  | 'FR'
  | 'GA'
  | 'GB'
  | 'GD'
  | 'GE'
  | 'GF'
  | 'GG'
  | 'GH'
  | 'GI'
  | 'GL'
  | 'GM'
  | 'GN'
  | 'GP'
  | 'GQ'
  | 'GR'
  | 'GS'
  | 'GT'
  | 'GU'
  | 'GW'
  | 'GY'
  | 'HK'
  | 'HM'
  | 'HN'
  | 'HR'
  | 'HT'
  | 'HU'
  | 'ID'
  | 'IE'
  | 'IL'
  | 'IM'
  | 'IN'
  | 'IO'
  | 'IQ'
  | 'IR'
  | 'IS'
  | 'IT'
  | 'JE'
  | 'JM'
  | 'JO'
  | 'JP'
  | 'KE'
  | 'KG'
  | 'KH'
  | 'KI'
  | 'KM'
  | 'KN'
  | 'KP'
  | 'KR'
  | 'KW'
  | 'KY'
  | 'KZ'
  | 'LA'
  | 'LB'
  | 'LC'
  | 'LI'
  | 'LK'
  | 'LR'
  | 'LS'
  | 'LT'
  | 'LU'
  | 'LV'
  | 'LY'
  | 'MA'
  | 'MC'
  | 'MD'
  | 'ME'
  | 'MF'
  | 'MG'
  | 'MH'
  | 'MK'
  | 'ML'
  | 'MM'
  | 'MN'
  | 'MO'
  | 'MP'
  | 'MQ'
  | 'MR'
  | 'MS'
  | 'MT'
  | 'MU'
  | 'MV'
  | 'MW'
  | 'MX'
  | 'MY'
  | 'MZ'
  | 'NA'
  | 'NC'
  | 'NE'
  | 'NF'
  | 'NG'
  | 'NI'
  | 'NL'
  | 'NO'
  | 'NP'
  | 'NR'
  | 'NU'
  | 'NZ'
  | 'OM'
  | 'PA'
  | 'PE'
  | 'PF'
  | 'PG'
  | 'PH'
  | 'PK'
  | 'PL'
  | 'PM'
  | 'PN'
  | 'PR'
  | 'PS'
  | 'PT'
  | 'PW'
  | 'PY'
  | 'QA'
  | 'RE'
  | 'RO'
  | 'RS'
  | 'RU'
  | 'RW'
  | 'SA'
  | 'SB'
  | 'SC'
  | 'SD'
  | 'SE'
  | 'SG'
  | 'SH'
  | 'SI'
  | 'SJ'
  | 'SK'
  | 'SL'
  | 'SM'
  | 'SN'
  | 'SO'
  | 'SR'
  | 'SS'
  | 'ST'
  | 'SV'
  | 'SX'
  | 'SY'
  | 'SZ'
  | 'TC'
  | 'TD'
  | 'TF'
  | 'TG'
  | 'TH'
  | 'TJ'
  | 'TK'
  | 'TL'
  | 'TM'
  | 'TN'
  | 'TO'
  | 'TR'
  | 'TT'
  | 'TV'
  | 'TW'
  | 'TZ'
  | 'UA'
  | 'UG'
  | 'UM'
  | 'US'
  | 'UY'
  | 'UZ'
  | 'VA'
  | 'VC'
  | 'VE'
  | 'VG'
  | 'VI'
  | 'VN'
  | 'VU'
  | 'WF'
  | 'WS'
  | 'YE'
  | 'YT'
  | 'ZA'
  | 'ZM'
  | 'ZW';

export type CountryFilter = {
  attachedToShippingZones?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CountryRateInput = {
  countryCode: CountryCode;
  rate: Scalars['Float']['input'];
};

export type CountryRateUpdateInput = {
  countryCode: CountryCode;
  rate?: InputMaybe<Scalars['Float']['input']>;
};

export type CreateOrderd = Event & OrderBase & {
  __typename: 'CreateOrderd';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type CreditCard = {
  __typename: 'CreditCard';
  brand: Scalars['String']['output'];
  /** Two-digit number representing the card`s expiration month. */
  expMonth?: Maybe<Scalars['Int']['output']>;
  /** Four-digit number representing the card`s expiration year. */
  expYear?: Maybe<Scalars['Int']['output']>;
  /** First 4 digits of the card number. */
  firstDigits?: Maybe<Scalars['String']['output']>;
  /** Last 4 digits of the card number. */
  lastDigits: Scalars['String']['output'];
};

export type Currency =
  | 'AFN'
  | 'ALL'
  | 'ANG'
  | 'ARS'
  | 'AUD'
  | 'AWG'
  | 'AZN'
  | 'BAM'
  | 'BBD'
  | 'BDT'
  | 'BGN'
  | 'BMD'
  | 'BND'
  | 'BOB'
  | 'BRL'
  | 'BSD'
  | 'BWP'
  | 'BYR'
  | 'BZD'
  | 'CAD'
  | 'CHF'
  | 'CLP'
  | 'CNY'
  | 'COP'
  | 'CRC'
  | 'CUP'
  | 'CZK'
  | 'DKK'
  | 'DOP'
  | 'EEK'
  | 'EGP'
  | 'EUR'
  | 'FJD'
  | 'FKP'
  | 'GBP'
  | 'GGP'
  | 'GHC'
  | 'GIP'
  | 'GTQ'
  | 'GYD'
  | 'HKD'
  | 'HNL'
  | 'HRK'
  | 'HUF'
  | 'IDR'
  | 'ILS'
  | 'IMP'
  | 'INR'
  | 'IRR'
  | 'ISK'
  | 'JEP'
  | 'JMD'
  | 'JPY'
  | 'KGS'
  | 'KHR'
  | 'KPW'
  | 'KRW'
  | 'KYD'
  | 'KZT'
  | 'LAK'
  | 'LBP'
  | 'LKR'
  | 'LRD'
  | 'LTL'
  | 'LVL'
  | 'MKD'
  | 'MNT'
  | 'MUR'
  | 'MXN'
  | 'MYR'
  | 'MZN'
  | 'NAD'
  | 'NGN'
  | 'NIO'
  | 'NOK'
  | 'NPR'
  | 'NZD'
  | 'OMR'
  | 'PAB'
  | 'PEN'
  | 'PHP'
  | 'PKR'
  | 'PLN'
  | 'PYG'
  | 'QAR'
  | 'RON'
  | 'RSD'
  | 'RUB'
  | 'SAR'
  | 'SBD'
  | 'SCR'
  | 'SEK'
  | 'SGD'
  | 'SHP'
  | 'SOS'
  | 'SRD'
  | 'SVC'
  | 'SYP'
  | 'THB'
  | 'TRL'
  | 'TRY'
  | 'TTD'
  | 'TVD'
  | 'TWD'
  | 'UAH'
  | 'USD'
  | 'UYU'
  | 'UZS'
  | 'VEF'
  | 'VND'
  | 'XCD'
  | 'YER'
  | 'ZAR'
  | 'ZWD';

export type CustomerCreated = Event & UserBase & {
  __typename: 'CustomerCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The user the event relates to. */
  user: User;
};

/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type CustomerFilter = {
  AND?: InputMaybe<CustomerFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<CustomerFilter>;
  OR?: InputMaybe<CustomerFilter>;
  dateJoined?: InputMaybe<DateRangeInput>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  numberOfOrders?: InputMaybe<IntRangeInput>;
  placedOrders?: InputMaybe<DateRangeInput>;
  search?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<DateTimeRangeInput>;
};

export type CustomerMetadataUpdated = Event & UserBase & {
  __typename: 'CustomerMetadataUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The user the event relates to. */
  user: User;
};

export type CustomerUpdated = Event & UserBase & {
  __typename: 'CustomerUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The user the event relates to. */
  user: User;
};

export type DateRangeInput = {
  gte?: InputMaybe<Scalars['Date']['input']>;
  lte?: InputMaybe<Scalars['Date']['input']>;
};

export type DateTimeRangeInput = {
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
};

/** DigitalContent(id, private_metadata, metadata, use_default_settings, auto_fulfill, content_type, product, content_file, max_downloads, url_valid_days) */
export type DigitalContent = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'DigitalContent';
  autoFulfill: Scalars['Boolean']['output'];
  contentFile: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  maxDownloads: Scalars['Int']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  productVariant: Product;
  urlValidDays: Scalars['Int']['output'];
  /** List of URLs for the digital variant. */
  urls: Array<DigitalContentUrl>;
  useDefaultSettings: Scalars['Boolean']['output'];
};


/** DigitalContent(id, private_metadata, metadata, use_default_settings, auto_fulfill, content_type, product, content_file, max_downloads, url_valid_days) */
export type DigitalContentMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** DigitalContent(id, private_metadata, metadata, use_default_settings, auto_fulfill, content_type, product, content_file, max_downloads, url_valid_days) */
export type DigitalContentMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** DigitalContent(id, private_metadata, metadata, use_default_settings, auto_fulfill, content_type, product, content_file, max_downloads, url_valid_days) */
export type DigitalContentPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** DigitalContent(id, private_metadata, metadata, use_default_settings, auto_fulfill, content_type, product, content_file, max_downloads, url_valid_days) */
export type DigitalContentPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type DigitalContentConnection = {
  __typename: 'DigitalContentConnection';
  /** Contains the nodes in this connection */
  edges: Array<DigitalContentEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type DigitalContentEdge = {
  __typename: 'DigitalContentEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: DigitalContent;
};

export type DigitalContentInput = {
  autoFulfill?: InputMaybe<Scalars['Boolean']['input']>;
  maxDownloads?: InputMaybe<Scalars['Int']['input']>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  urlValidDays?: InputMaybe<Scalars['Int']['input']>;
  useDefaultSettings: Scalars['Boolean']['input'];
};

export type DigitalContentMutationResult = BaseMutationResult & {
  __typename: 'DigitalContentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: DigitalContent;
};

export type DigitalContentUploadInput = {
  autoFulfill?: InputMaybe<Scalars['Boolean']['input']>;
  contentFile: Scalars['Upload']['input'];
  maxDownloads?: InputMaybe<Scalars['Int']['input']>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  urlValidDays?: InputMaybe<Scalars['Int']['input']>;
  useDefaultSettings: Scalars['Boolean']['input'];
};

/** DigitalContentUrl(id, token, content, created_at, download_num, line) */
export type DigitalContentUrl = Node & TempoNode & {
  __typename: 'DigitalContentUrl';
  content: DigitalContent;
  createdAt: Scalars['DateTime']['output'];
  downloadNum: Scalars['Int']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
  /** URL for digital content. */
  url: Scalars['String']['output'];
};

export type DigitalContentUrlCreationInput = {
  content: Scalars['ID']['input'];
};

export type DiscountError = ErrorInterface & {
  __typename: 'DiscountError';
  /** List of channels IDs which causes the error. */
  channels?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  products: Array<Scalars['ID']['output']>;
};

export type DiscountErrorCode =
  | 'ALREADY_EXISTS'
  | 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

export type DiscountStatus =
  | 'ACTIVE'
  | 'EXPIRED'
  | 'SCHEDULED';

export type DiscountValueType =
  | 'FIXED'
  | 'PERCENTAGE';

export type DistanceUnit =
  | 'CM'
  | 'FT'
  | 'INCH'
  | 'KM'
  | 'M'
  | 'YD';

export type DraftOrderCreated = Event & OrderBase & {
  __typename: 'DraftOrderCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type DraftOrderCreationInput = {
  billingAddress: AddressUpdateInput;
  channelId: Scalars['ID']['input'];
  customerNote: Scalars['String']['input'];
  discount: Scalars['PositiveDecimal']['input'];
  lines: Array<OrderLineCreationInput>;
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
  shippingAddress: AddressUpdateInput;
  shippingMethod: Scalars['ID']['input'];
  user: Scalars['ID']['input'];
  userEmail: Scalars['String']['input'];
  voucher: Scalars['ID']['input'];
};

export type DraftOrderDeleted = Event & OrderBase & {
  __typename: 'DraftOrderDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type DraftOrderInput = {
  billingAddress: AddressUpdateInput;
  channelId: Scalars['ID']['input'];
  customerNote: Scalars['String']['input'];
  discount: Scalars['PositiveDecimal']['input'];
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
  shippingAddress: AddressUpdateInput;
  shippingMethod: Scalars['ID']['input'];
  user: Scalars['ID']['input'];
  userEmail: Scalars['String']['input'];
  voucher: Scalars['ID']['input'];
};

export type DraftOrderUpdated = Event & OrderBase & {
  __typename: 'DraftOrderUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type Error = ErrorInterface & {
  __typename: 'Error';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
};

export type ErrorInterface = {
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
};

export type Event = {
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** EventDelivery(id, created_at, status, event_type, payload, webhook) */
export type EventDelivery = Node & TempoNode & {
  __typename: 'EventDelivery';
  createdAt: Scalars['DateTime']['output'];
  /** Webhook event type. */
  eventType: WebhookEventType;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Event payload. */
  payload: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Event delivery status. */
  status: EventDeliveryStatus;
};

export type EventDeliveryConnection = {
  __typename: 'EventDeliveryConnection';
  /** Contains the nodes in this connection */
  edges: Array<EventDeliveryEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type EventDeliveryEdge = {
  __typename: 'EventDeliveryEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: EventDelivery;
};

/** Webhook event. */
export type EventDeliveryFilter = {
  AND?: InputMaybe<EventDeliveryFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<EventDeliveryFilter>;
  OR?: InputMaybe<EventDeliveryFilter>;
  /** Internal name of the event type. */
  eventType?: InputMaybe<WebhookEventType>;
  status?: InputMaybe<EventDeliveryStatus>;
};

export type EventDeliveryMutationResult = BaseMutationResult & {
  __typename: 'EventDeliveryMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: EventDelivery;
};

export type EventDeliveryOrdering =
  | 'CREATED_AT';

export type EventDeliveryOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<EventDeliveryOrdering>;
};

export type EventDeliveryStatus =
  | 'FAILED'
  | 'PENDING'
  | 'SUCCESS';

export type ExportErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED';

/** Model used to store events that happened during the export file lifecycle. */
export type ExportEvent = Node & TempoNode & {
  __typename: 'ExportEvent';
  app?: Maybe<App>;
  /** Date when event happened at in ISO 8601 format. */
  date: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Content of the event. */
  message: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Export event type. */
  type: ExportEventType;
  /** User who performed the action. */
  user?: Maybe<User>;
};

export type ExportEventType =
  | 'EXPORTED_FILE_SENT'
  | 'EXPORT_DELETED'
  | 'EXPORT_FAILED'
  | 'EXPORT_FAILED_INFO_SENT'
  | 'EXPORT_PENDING'
  | 'EXPORT_SUCCESS';

/** ExportFile(id, status, message, created_at, updated_at, user, app, content_file) */
export type ExportFile = Job & Node & TempoNode & {
  __typename: 'ExportFile';
  app: App;
  /** Created date time of job in ISO 8601 format. */
  createdAt: Scalars['DateTime']['output'];
  /** List of events associated with the export. */
  events: Array<ExportEvent>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  message: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Job status. */
  status: JobStatus;
  /** Date time of job last update in ISO 8601 format. */
  updatedAt: Scalars['DateTime']['output'];
  /** The URL of field to download. */
  url: Scalars['String']['output'];
  user: User;
};

export type ExportFileConnection = {
  __typename: 'ExportFileConnection';
  /** Contains the nodes in this connection */
  edges: Array<ExportFileEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type ExportFileEdge = {
  __typename: 'ExportFileEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: ExportFile;
};

export type ExportFileFilter = {
  app?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<Scalars['String']['input']>;
};

export type ExportFileMutationResult = BaseMutationResult & {
  __typename: 'ExportFileMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: ExportFile;
};

export type ExportFileOrdering =
  | 'CREATED_AT'
  | 'LAST_MODIFIED_AT'
  | 'STATUS';

export type ExportFileOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<ExportFileOrdering>;
};

export type ExportGiftCardsInput = {
  fileType: FileType;
  filters?: InputMaybe<GiftCardFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  scope: ExportScope;
};

export type ExportInfoInput = {
  attributes: Array<Scalars['ID']['input']>;
  channels: Array<Scalars['ID']['input']>;
  fields: Array<ProductField>;
  warehouses: Array<Scalars['ID']['input']>;
};

export type ExportProductsInput = {
  exportInfo?: InputMaybe<ExportInfoInput>;
  fileType: FileType;
  filters?: InputMaybe<ProductFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  scope: ExportScope;
};

export type ExportScope =
  | 'ALL'
  | 'FILTER'
  | 'IDS';

export type ExternalAuthentication = {
  __typename: 'ExternalAuthentication';
  /** ID of external authentication plugin. */
  id: Scalars['String']['output'];
  /** Name of external authentication plugin. */
  name: Scalars['String']['output'];
};

export type ExternalNotificationTriggerInput = {
  externalEventType: Scalars['String']['input'];
  extraPayload: Scalars['JSONString']['input'];
  ids: Array<Scalars['ID']['input']>;
};

export type ExternalNotificationTriggerMutationResult = BaseMutationResult & {
  __typename: 'ExternalNotificationTriggerMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  none?: Maybe<Scalars['Void']['output']>;
};

export type File = {
  __typename: 'File';
  contentType: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type FileMutationResult = BaseMutationResult & {
  __typename: 'FileMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: File;
};

export type FileType =
  | 'CSV'
  | 'XLSX';

/** Fulfillment(id, private_metadata, metadata, created_at, fulfillment_order, order, status, tracking_number, shipping_refund_amount, total_refund_amount) */
export type Fulfillment = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Fulfillment';
  createdAt: Scalars['DateTime']['output'];
  fulfillmentOrder: Scalars['Int']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** List of lines for the fulfillment. */
  lines: Array<FulfillmentLine>;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  status: FulfillmentStatus;
  statusDisplay: Scalars['String']['output'];
  trackingNumber: Scalars['String']['output'];
  /** Warehouse from fulfillment was fulfilled. */
  warehouse?: Maybe<Warehouse>;
};


/** Fulfillment(id, private_metadata, metadata, created_at, fulfillment_order, order, status, tracking_number, shipping_refund_amount, total_refund_amount) */
export type FulfillmentMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Fulfillment(id, private_metadata, metadata, created_at, fulfillment_order, order, status, tracking_number, shipping_refund_amount, total_refund_amount) */
export type FulfillmentMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Fulfillment(id, private_metadata, metadata, created_at, fulfillment_order, order, status, tracking_number, shipping_refund_amount, total_refund_amount) */
export type FulfillmentPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Fulfillment(id, private_metadata, metadata, created_at, fulfillment_order, order, status, tracking_number, shipping_refund_amount, total_refund_amount) */
export type FulfillmentPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type FulfillmentApproved = Event & FulfillmentBase & {
  __typename: 'FulfillmentApproved';
  /** The fulfillment the event relates to. */
  fulfillment: Fulfillment;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the fulfillment belongs to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type FulfillmentBase = {
  /** The fulfillment the event relates to. */
  fulfillment: Fulfillment;
  /** The order the fulfillment belongs to. */
  order: Order;
};

export type FulfillmentCancelInput = {
  warehouseId?: InputMaybe<Scalars['ID']['input']>;
};

export type FulfillmentCanceled = Event & FulfillmentBase & {
  __typename: 'FulfillmentCanceled';
  /** The fulfillment the event relates to. */
  fulfillment: Fulfillment;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the fulfillment belongs to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type FulfillmentCreated = Event & FulfillmentBase & {
  __typename: 'FulfillmentCreated';
  /** The fulfillment the event relates to. */
  fulfillment: Fulfillment;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the fulfillment belongs to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

/** LineFulfillment(id, order_line, fulfillment, quantity, stock) */
export type FulfillmentLine = Node & TempoNode & {
  __typename: 'FulfillmentLine';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  orderLine: OrderLine;
  pk: Scalars['String']['output'];
  quantity: Scalars['Int']['output'];
};

export type FulfillmentMetadataUpdated = Event & FulfillmentBase & {
  __typename: 'FulfillmentMetadataUpdated';
  /** The fulfillment the event relates to. */
  fulfillment: Fulfillment;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the fulfillment belongs to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type FulfillmentMethod = ShippingMethod | Warehouse;

export type FulfillmentMethodType =
  | 'COLLECTION_POINT'
  | 'DIGITAL'
  | 'SHIPPING_METHOD'
  | 'WAREHOUSE';

export type FulfillmentStatus =
  | 'CANCELED'
  | 'FULFILLED'
  | 'REFUNDED'
  | 'REFUNDED_AND_RETURNED'
  | 'REPLACED'
  | 'RETURNED'
  | 'WAITING_FOR_APPROVAL';

export type FulfillmentUpdateTrackingInput = {
  notifyCustomer?: Scalars['Boolean']['input'];
  trackingNumber: Scalars['String']['input'];
};

/** Payment gateway client configuration key and value pair. */
export type GatewayConfigLine = {
  __typename: 'GatewayConfigLine';
  field: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

/**
 * A gift card is a prepaid electronic payment card accepted in stores.
 *
 * They can be used during checkout by providing a valid gift card codes.
 */
export type GiftCard = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'GiftCard';
  /** App which created the gift card. Requires one of the following permissions: MANAGE_APPS, OWNER. */
  app: App;
  /** Slug of the channel where the gift card was bought. */
  boughtInChannel?: Maybe<Scalars['String']['output']>;
  /** Gift card code. Can be fetched by a staff member with MANAGE_GIFT_CARD when gift card wasn't yet used and by the gift card owner. */
  code: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  /** The user who bought or issued a gift card. */
  createdBy: User;
  /** Email address of the user who bought or issued gift card. Requires one of the following permissions: MANAGE_USERS, OWNER. */
  createdByEmail?: Maybe<Scalars['String']['output']>;
  currentBalance: Money;
  /** Code in format which allows displaying in a user interface. */
  displayCode: Scalars['String']['output'];
  endDate: Scalars['DateTime']['output'];
  /** List of events associated with the gift card. */
  events: Array<GiftCardEvent>;
  expiryDate: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  initialBalance: Money;
  isActive: Scalars['Boolean']['output'];
  /** Last 4 characters of gift card code. */
  last4CodeChars: Scalars['String']['output'];
  lastUsedOn: Scalars['DateTime']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** Related gift card product. */
  product: Product;
  /** The gift card tag. */
  tags: Array<GiftCardTag>;
  /** The customer who used a gift card. */
  usedBy: User;
  /** Email address of the customer who used a gift card. */
  usedByEmail?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};


/**
 * A gift card is a prepaid electronic payment card accepted in stores.
 *
 * They can be used during checkout by providing a valid gift card codes.
 */
export type GiftCardEventsArgs = {
  filters?: InputMaybe<GiftCardEventFilter>;
};


/**
 * A gift card is a prepaid electronic payment card accepted in stores.
 *
 * They can be used during checkout by providing a valid gift card codes.
 */
export type GiftCardMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A gift card is a prepaid electronic payment card accepted in stores.
 *
 * They can be used during checkout by providing a valid gift card codes.
 */
export type GiftCardMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A gift card is a prepaid electronic payment card accepted in stores.
 *
 * They can be used during checkout by providing a valid gift card codes.
 */
export type GiftCardPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A gift card is a prepaid electronic payment card accepted in stores.
 *
 * They can be used during checkout by providing a valid gift card codes.
 */
export type GiftCardPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type GiftCardAddNoteInput = {
  message: Scalars['String']['input'];
};

export type GiftCardBase = {
  /** The gift card the event relates to. */
  giftCard: GiftCard;
};

export type GiftCardBulkCreationInput = {
  balance: PriceInput;
  count: Scalars['Int']['input'];
  expiryDate: Scalars['DateTime']['input'];
  isActive: Scalars['Boolean']['input'];
  tags: Array<Scalars['String']['input']>;
};

export type GiftCardBulkMutationResult = BaseMutationResult & {
  __typename: 'GiftCardBulkMutationResult';
  /** Returns how many objects were mutated. */
  count: Scalars['Int']['output'];
  errors?: Maybe<Array<ErrorInterface>>;
  objects: Array<GiftCard>;
};

export type GiftCardConnection = {
  __typename: 'GiftCardConnection';
  /** Contains the nodes in this connection */
  edges: Array<GiftCardEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type GiftCardCreated = Event & GiftCardBase & {
  __typename: 'GiftCardCreated';
  /** The gift card the event relates to. */
  giftCard: GiftCard;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type GiftCardCreationInput = {
  addTags: Array<Scalars['String']['input']>;
  balance: PriceInput;
  channel?: InputMaybe<Scalars['String']['input']>;
  expiryDate: Scalars['DateTime']['input'];
  isActive: Scalars['Boolean']['input'];
  note: Scalars['String']['input'];
  userEmail?: InputMaybe<Scalars['String']['input']>;
};

export type GiftCardDeleted = Event & GiftCardBase & {
  __typename: 'GiftCardDeleted';
  /** The gift card the event relates to. */
  giftCard: GiftCard;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** An edge in a connection. */
export type GiftCardEdge = {
  __typename: 'GiftCardEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: GiftCard;
};

export type GiftCardError = ErrorInterface & {
  __typename: 'GiftCardError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of tag values that cause the error. */
  tags?: Maybe<Array<Scalars['String']['output']>>;
};

export type GiftCardErrorCode =
  | 'ALREADY_EXISTS'
  | 'DUPLICATED_INPUT_ITEM'
  | 'EXPIRED_GIFT_CARD'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/** GiftCardEvent(id, date, type, parameters, user, app, order, gift_card) */
export type GiftCardEvent = Node & TempoNode & {
  __typename: 'GiftCardEvent';
  /** App that performed the action. */
  app: App;
  /** The gift card balance. */
  balance: GiftCardEventBalance;
  date: Scalars['DateTime']['output'];
  email: Scalars['String']['output'];
  /** The gift card expiry date. */
  expiryDate: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  message: Scalars['String']['output'];
  /** Previous gift card expiry date. */
  oldExpiryDate: Scalars['DateTime']['output'];
  /** The list of old gift card tags. */
  oldTags: Array<Scalars['String']['output']>;
  orderId: Scalars['ID']['output'];
  /** User-friendly number of an order where gift card was used or bought. */
  orderNumber: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** The list of gift card tags. */
  tags: Array<Scalars['String']['output']>;
  type: GiftCardEventType;
  user: User;
};

export type GiftCardEventBalance = {
  __typename: 'GiftCardEventBalance';
  /** Current balance of the gift card. */
  currentBalance: Money;
  /** Initial balance of the gift card. */
  initialBalance: Money;
  /** Previous current balance of the gift card. */
  oldCurrentBalance: Money;
  /** Previous initial balance of the gift card. */
  oldInitialBalance: Money;
};

export type GiftCardEventFilter = {
  orders?: InputMaybe<Array<Scalars['ID']['input']>>;
  type?: InputMaybe<GiftCardEventType>;
};

export type GiftCardEventType =
  | 'ACTIVATED'
  | 'BALANCE_RESET'
  | 'BOUGHT'
  | 'DEACTIVATED'
  | 'EXPIRY_DATE_UPDATED'
  | 'ISSUED'
  | 'NOTE_ADDED'
  | 'RESENT'
  | 'SENT_TO_CUSTOMER'
  | 'TAGS_UPDATED'
  | 'UPDATED'
  | 'USED_IN_ORDER';

/**
 * A gift card is a prepaid electronic payment card accepted in stores.
 *
 * They can be used during checkout by providing a valid gift card codes.
 */
export type GiftCardFilter = {
  AND?: InputMaybe<GiftCardFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<GiftCardFilter>;
  OR?: InputMaybe<GiftCardFilter>;
  code?: InputMaybe<Scalars['String']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  currentBalance?: InputMaybe<PriceRangeInput>;
  initialBalance?: InputMaybe<PriceRangeInput>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  products?: InputMaybe<Array<Scalars['ID']['input']>>;
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  used?: InputMaybe<Scalars['Boolean']['input']>;
  usedBy?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type GiftCardMetadataUpdated = Event & GiftCardBase & {
  __typename: 'GiftCardMetadataUpdated';
  /** The gift card the event relates to. */
  giftCard: GiftCard;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type GiftCardMutationResult = BaseMutationResult & {
  __typename: 'GiftCardMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: GiftCard;
};

export type GiftCardNodeConnection = {
  __typename: 'GiftCardNodeConnection';
  /** Contains the nodes in this connection */
  edges: Array<GiftCardNodeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type GiftCardNodeEdge = {
  __typename: 'GiftCardNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: GiftCard;
};

export type GiftCardOrdering =
  | 'CREATED_AT'
  | 'CURRENT_BALANCE'
  | 'PRODUCT'
  | 'USED_BY';

export type GiftCardOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<GiftCardOrdering>;
};

export type GiftCardResendInput = {
  channel?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Gift-card-related settings from site settings. */
export type GiftCardSettings = {
  __typename: 'GiftCardSettings';
  /** The gift card expiry period settings. */
  expiryPeriod?: Maybe<TimePeriod>;
  /** The gift card expiry type settings. */
  expiryType: GiftCardSettingsExpiryType;
};

export type GiftCardSettingsErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'REQUIRED';

export type GiftCardSettingsExpiryType =
  | 'EXPIRY_PERIOD'
  | 'NEVER_EXPIRE';

export type GiftCardSettingsMutationResult = BaseMutationResult & {
  __typename: 'GiftCardSettingsMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: GiftCardSettings;
};

export type GiftCardSettingsUpdateInput = {
  expiryPeriod: TimePeriodInputType;
  expiryType: GiftCardSettingsExpiryType;
};

export type GiftCardStatusChanged = Event & GiftCardBase & {
  __typename: 'GiftCardStatusChanged';
  /** The gift card the event relates to. */
  giftCard: GiftCard;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** GiftCardTag(id, name) */
export type GiftCardTag = Node & TempoNode & {
  __typename: 'GiftCardTag';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
};

export type GiftCardTagConnection = {
  __typename: 'GiftCardTagConnection';
  /** Contains the nodes in this connection */
  edges: Array<GiftCardTagEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type GiftCardTagEdge = {
  __typename: 'GiftCardTagEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: GiftCardTag;
};

/** GiftCardTag(id, name) */
export type GiftCardTagFilter = {
  AND?: InputMaybe<GiftCardTagFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<GiftCardTagFilter>;
  OR?: InputMaybe<GiftCardTagFilter>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type GiftCardUpdateInput = {
  addTags: Array<Scalars['String']['input']>;
  balanceAmount?: InputMaybe<Scalars['PositiveDecimal']['input']>;
  expiryDate: Scalars['DateTime']['input'];
  removeTags: Array<Scalars['String']['input']>;
};

export type GiftCardUpdated = Event & GiftCardBase & {
  __typename: 'GiftCardUpdated';
  /** The gift card the event relates to. */
  giftCard: GiftCard;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type Giftcardmutationresult = BaseMutationResult & {
  __typename: 'Giftcardmutationresult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** Gift card note created. */
  event: GiftCardEvent;
  /** Gift card with the note added. */
  giftCard: GiftCard;
};

export type GoogleAddressBase = {
  city: Scalars['String']['output'];
  cityArea?: Maybe<Scalars['String']['output']>;
  countryArea?: Maybe<Scalars['String']['output']>;
  postalCode: Scalars['String']['output'];
  streetAddress1: Scalars['String']['output'];
  streetAddress2?: Maybe<Scalars['String']['output']>;
};

/**
 * A permission group.
 *
 * Groups are a generic way of categorizing users to apply permissions, or
 * some other label, to those users. A user can belong to any number of
 * groups.
 *
 * A user in a group automatically has all the permissions granted to that
 * group. For example, if the group 'Site editors' has the permission
 * can_edit_home_page, any user in that group will have that permission.
 *
 * Beyond permissions, groups are a convenient way to categorize users to
 * apply some label, or extended functionality, to them. For example, you
 * could create a group 'Special users', and you could write code that would
 * do special things to those users -- such as giving them access to a
 * members-only portion of your site, or sending them members-only email
 * messages.
 */
export type Group = Node & TempoNode & {
  __typename: 'Group';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  name: Scalars['String']['output'];
  permissions: Array<Permission>;
  pk: Scalars['String']['output'];
  /** True, if the currently authenticated user has rights to manage a group. */
  userCanManage: Scalars['Boolean']['output'];
  /** List of group users */
  users: Array<User>;
};

export type GroupBase = {
  /** The permission group the event relates to. */
  group: Group;
};

export type GroupConnection = {
  __typename: 'GroupConnection';
  /** Contains the nodes in this connection */
  edges: Array<GroupEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type GroupCreated = Event & GroupBase & {
  __typename: 'GroupCreated';
  /** The permission group the event relates to. */
  group: Group;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type GroupCreationInput = {
  addPermissions?: InputMaybe<Array<PermissionCode>>;
  addUsers?: InputMaybe<Array<Scalars['ID']['input']>>;
  name: Scalars['String']['input'];
};

export type GroupDeleted = Event & GroupBase & {
  __typename: 'GroupDeleted';
  /** The permission group the event relates to. */
  group: Group;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** An edge in a connection. */
export type GroupEdge = {
  __typename: 'GroupEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Group;
};

export type GroupError = ErrorInterface & {
  __typename: 'GroupError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of permissions which causes the error. */
  permissions?: Maybe<Array<PermissionCode>>;
  /** List of user IDs which causes the error. */
  users?: Maybe<Array<Scalars['ID']['output']>>;
};

export type GroupErrorCode =
  | 'ASSIGN_NON_STAFF_MEMBER'
  | 'CANNOT_REMOVE_FROM_LAST_GROUP'
  | 'DUPLICATED_INPUT_ITEM'
  | 'LEFT_NOT_MANAGEABLE_PERMISSION'
  | 'OUT_OF_SCOPE_PERMISSION'
  | 'OUT_OF_SCOPE_USER'
  | 'REQUIRED'
  | 'UNIQUE';

/**
 * A permission group.
 *
 * Groups are a generic way of categorizing users to apply permissions, or
 * some other label, to those users. A user can belong to any number of
 * groups.
 *
 * A user in a group automatically has all the permissions granted to that
 * group. For example, if the group 'Site editors' has the permission
 * can_edit_home_page, any user in that group will have that permission.
 *
 * Beyond permissions, groups are a convenient way to categorize users to
 * apply some label, or extended functionality, to them. For example, you
 * could create a group 'Special users', and you could write code that would
 * do special things to those users -- such as giving them access to a
 * members-only portion of your site, or sending them members-only email
 * messages.
 */
export type GroupFilter = {
  AND?: InputMaybe<GroupFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<GroupFilter>;
  OR?: InputMaybe<GroupFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type GroupMutationResult = BaseMutationResult & {
  __typename: 'GroupMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Group;
};

export type GroupOrdering =
  | 'NAME';

export type GroupOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<GroupOrdering>;
};

export type GroupUpdateInput = {
  addPermissions?: InputMaybe<Array<PermissionCode>>;
  addUsers?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<Scalars['String']['input']>;
  removePermissions?: InputMaybe<Array<PermissionCode>>;
  removeUsers?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type GroupUpdated = Event & GroupBase & {
  __typename: 'GroupUpdated';
  /** The permission group the event relates to. */
  group: Group;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type IdListMutationResult = BaseMutationResult & {
  __typename: 'IDListMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Array<Scalars['ID']['output']>;
};

export type Image = {
  __typename: 'Image';
  /** Alt text. */
  alt: Scalars['String']['output'];
  aspectRatio?: Maybe<Scalars['Float']['output']>;
  /** The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned. */
  format: ThumbnailFormat;
  height?: Maybe<Scalars['Int']['output']>;
  /** The URL of the image. */
  url: Scalars['String']['output'];
  width?: Maybe<Scalars['Int']['output']>;
};

export type IntRangeInput = {
  gte?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
};

/** Represents an invoice. */
export type Invoice = Job & Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Invoice';
  createdAt: Scalars['DateTime']['output'];
  externalUrl: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  message: Scalars['String']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  number: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** Job status. */
  status: JobStatus;
  updatedAt: Scalars['DateTime']['output'];
  /** URL to download an invoice. */
  url: Scalars['String']['output'];
};


/** Represents an invoice. */
export type InvoiceMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Represents an invoice. */
export type InvoiceMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Represents an invoice. */
export type InvoicePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Represents an invoice. */
export type InvoicePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type InvoiceBase = {
  /** The invoice the event relates to. */
  invoice: Invoice;
};

export type InvoiceCreationInput = {
  number: Scalars['String']['input'];
  url: Scalars['String']['input'];
};

export type InvoiceDeleted = Event & InvoiceBase & {
  __typename: 'InvoiceDeleted';
  /** The invoice the event relates to. */
  invoice: Invoice;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type InvoiceErrorCode =
  | 'EMAIL_NOT_SET'
  | 'INVALID_STATUS'
  | 'NOT_FOUND'
  | 'NOT_READY'
  | 'NO_INVOICE_PLUGIN'
  | 'NUMBER_NOT_SET'
  | 'REQUIRED'
  | 'URL_NOT_SET';

export type InvoiceMutationResult = BaseMutationResult & {
  __typename: 'InvoiceMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Invoice;
};

export type InvoiceRequested = Event & InvoiceBase & {
  __typename: 'InvoiceRequested';
  /** The invoice the event relates to. */
  invoice: Invoice;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type InvoiceSent = Event & InvoiceBase & {
  __typename: 'InvoiceSent';
  /** The invoice the event relates to. */
  invoice: Invoice;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type Jwt = {
  __typename: 'JWT';
  accessToken: Scalars['String']['output'];
  csrfToken: Scalars['String']['output'];
  refreshToken: Scalars['String']['output'];
  user: User;
};

export type JwtMutationResult = BaseMutationResult & {
  __typename: 'JWTMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Jwt;
};

export type Job = {
  /** Created date time of job in ISO 8601 format. */
  createdAt: Scalars['DateTime']['output'];
  message: Scalars['String']['output'];
  /** Job status. */
  status: JobStatus;
  /** Date time of job last update in ISO 8601 format. */
  updatedAt: Scalars['DateTime']['output'];
};

export type JobStatus =
  | 'DELETED'
  | 'FAILED'
  | 'PENDING'
  | 'SUCCESS';

export type LanguageCode =
  | 'AF'
  | 'AF_NA'
  | 'AF_ZA'
  | 'BM_ML'
  | 'BN'
  | 'BN_BD'
  | 'BN_IN'
  | 'BO'
  | 'BO_CN'
  | 'BO_IN'
  | 'BR'
  | 'BRX'
  | 'BRX_IN'
  | 'BR_FR'
  | 'CA'
  | 'CA_AD'
  | 'CA_ES'
  | 'CA_ES_VALENCIA'
  | 'CA_FR'
  | 'CA_IT'
  | 'CCP'
  | 'CCP_BD'
  | 'CCP_IN'
  | 'CE'
  | 'CEB'
  | 'CEB_PH'
  | 'CE_RU'
  | 'CGG'
  | 'CGG_UG'
  | 'CHR'
  | 'CHR_US'
  | 'CKB'
  | 'CKB_IQ'
  | 'CKB_IR'
  | 'CS'
  | 'CS_CZ'
  | 'CU'
  | 'CU_RU'
  | 'CY'
  | 'CY_GB'
  | 'DE_AT'
  | 'DE_BE'
  | 'DE_CH'
  | 'DE_DE'
  | 'DE_LI'
  | 'DE_LU'
  | 'DSB'
  | 'DSB_DE'
  | 'DUA'
  | 'DUA_CM'
  | 'DV'
  | 'DV_MV'
  | 'DZ'
  | 'DZ_BT'
  | 'EBU'
  | 'EBU_KE'
  | 'EE'
  | 'EE_GH'
  | 'EE_TG'
  | 'EL'
  | 'EL_CY'
  | 'EL_GR'
  | 'EN'
  | 'EN_001'
  | 'EN_150'
  | 'EN_AG'
  | 'EN_AI'
  | 'EN_AS'
  | 'EN_AT'
  | 'EN_AU'
  | 'EN_BB'
  | 'EN_BE'
  | 'EN_BI'
  | 'EN_BM'
  | 'EN_BS'
  | 'EN_BW'
  | 'EN_BZ'
  | 'EN_CA'
  | 'EN_CC'
  | 'EN_CH'
  | 'EN_CK'
  | 'EN_CM'
  | 'EN_CX'
  | 'EN_CY'
  | 'EN_DE'
  | 'EN_DG'
  | 'EN_DK'
  | 'EN_DM'
  | 'EN_ER'
  | 'EN_FI'
  | 'EN_FJ'
  | 'EN_FK'
  | 'EN_FM'
  | 'EN_GB'
  | 'EN_GD'
  | 'EN_GG'
  | 'EN_GH'
  | 'EN_GI'
  | 'EN_GM'
  | 'EN_GU'
  | 'EN_GY'
  | 'EN_HK'
  | 'EN_IE'
  | 'EN_IL'
  | 'EN_IM'
  | 'EN_IN'
  | 'EN_IO'
  | 'EN_JE'
  | 'EN_JM'
  | 'EN_KE'
  | 'EN_KI'
  | 'EN_KN'
  | 'EN_KY'
  | 'EN_LC'
  | 'EN_LR'
  | 'EN_LS'
  | 'EN_MG'
  | 'EN_MH'
  | 'EN_MO'
  | 'EN_MP'
  | 'EN_MS'
  | 'EN_MT'
  | 'EN_MU'
  | 'EN_MW'
  | 'EN_MY'
  | 'EN_NA'
  | 'EN_NF'
  | 'EN_NG'
  | 'EN_NL'
  | 'EN_NO'
  | 'EN_NR'
  | 'EN_NU'
  | 'EN_NZ'
  | 'EN_PG'
  | 'EN_PH'
  | 'EN_PK'
  | 'EN_PN'
  | 'EN_PR'
  | 'EN_PW'
  | 'EN_RW'
  | 'EN_SB'
  | 'EN_SC'
  | 'EN_SD'
  | 'EN_SE'
  | 'EN_SG'
  | 'EN_SH'
  | 'EN_SI'
  | 'EN_SL'
  | 'EN_SS'
  | 'EN_SX'
  | 'EN_SZ'
  | 'EN_TC'
  | 'EN_TK'
  | 'EN_TO'
  | 'EN_TT'
  | 'EN_TV'
  | 'EN_TZ'
  | 'EN_UG'
  | 'EN_UM'
  | 'EN_US'
  | 'EN_US_POSIX'
  | 'EN_VC'
  | 'EN_VG'
  | 'EN_VI'
  | 'EN_VU'
  | 'EN_WS'
  | 'EN_ZA'
  | 'EN_ZM'
  | 'EN_ZW'
  | 'EO'
  | 'ES'
  | 'ES_419'
  | 'ES_AR'
  | 'ES_BO'
  | 'ES_CL'
  | 'ES_CO'
  | 'ES_CR'
  | 'ES_CU'
  | 'ES_DO'
  | 'ES_EA'
  | 'ES_EC'
  | 'ES_ES'
  | 'ES_GQ'
  | 'ES_GT'
  | 'ES_HN'
  | 'ES_IC'
  | 'ES_MX'
  | 'ES_NI'
  | 'ES_PA'
  | 'ES_PE'
  | 'ES_PH'
  | 'ES_PR'
  | 'ES_PY'
  | 'ES_SV'
  | 'ES_US'
  | 'ES_UY'
  | 'ES_VE'
  | 'ET'
  | 'ET_EE'
  | 'EU'
  | 'EU_ES'
  | 'EW'
  | 'EW_CM'
  | 'FA'
  | 'FA_AF'
  | 'FA_IR'
  | 'FF'
  | 'FF_SN'
  | 'FI'
  | 'FIL'
  | 'FIL_PH'
  | 'FI_FI'
  | 'FO'
  | 'FO_DK'
  | 'FO_FO'
  | 'FR'
  | 'FR_BE'
  | 'FR_BF'
  | 'FR_BI'
  | 'FR_BJ'
  | 'FR_BL'
  | 'FR_CA'
  | 'FR_CD'
  | 'FR_CF'
  | 'FR_CG'
  | 'FR_CH'
  | 'FR_CI'
  | 'FR_CM'
  | 'FR_DJ'
  | 'FR_DZ'
  | 'FR_FR'
  | 'FR_GA'
  | 'FR_GF'
  | 'FR_GN'
  | 'FR_GP'
  | 'FR_GQ'
  | 'FR_HT'
  | 'FR_KM'
  | 'FR_LU'
  | 'FR_MA'
  | 'FR_MC'
  | 'FR_MF'
  | 'FR_MG'
  | 'FR_ML'
  | 'FR_MQ'
  | 'FR_MR'
  | 'FR_MU'
  | 'FR_NC'
  | 'FR_NE'
  | 'FR_PF'
  | 'FR_PM'
  | 'FR_RE'
  | 'FR_RW'
  | 'FR_SC'
  | 'FR_SN'
  | 'FR_SY'
  | 'FR_TD'
  | 'FR_TG'
  | 'FR_TN'
  | 'FR_VU'
  | 'FR_WF'
  | 'FR_YT'
  | 'FUR'
  | 'FUR_IT'
  | 'FY'
  | 'FY_NL'
  | 'GA'
  | 'GA_IE'
  | 'GD'
  | 'GD_GB'
  | 'GL'
  | 'GL_ES'
  | 'GN'
  | 'GN_PY'
  | 'GSW'
  | 'GSW_CH'
  | 'GSW_FR'
  | 'GSW_LI'
  | 'GU'
  | 'GUZ'
  | 'GUZ_KE'
  | 'GU_IN'
  | 'GV'
  | 'GV_GB'
  | 'HA'
  | 'HAW'
  | 'HAW_US'
  | 'HA_GH'
  | 'HA_NE'
  | 'HA_NG'
  | 'HE'
  | 'HE_IL'
  | 'HI'
  | 'HI_IN'
  | 'HR'
  | 'HR_BA'
  | 'HR_HR'
  | 'HSB'
  | 'HSB_DE'
  | 'HU'
  | 'HU_HU'
  | 'HY'
  | 'HY_AM'
  | 'ID'
  | 'ID_ID'
  | 'IG'
  | 'IG_NG'
  | 'II'
  | 'II_CN'
  | 'IN'
  | 'IN_ID'
  | 'IS'
  | 'IS_IS'
  | 'IT'
  | 'IT_CH'
  | 'IT_IT'
  | 'IU'
  | 'IU_CA'
  | 'IU_LATN'
  | 'IU_LATN_CA'
  | 'JA'
  | 'JA_JP'
  | 'JBO'
  | 'JBO_001'
  | 'JGO'
  | 'JGO_CM'
  | 'JMC'
  | 'JMC_TZ'
  | 'JUT'
  | 'JUT_DK'
  | 'JV'
  | 'JV_ID'
  | 'KA'
  | 'KAB'
  | 'KAB_DZ'
  | 'KAM'
  | 'KAM_KE'
  | 'KA_GE'
  | 'KCG'
  | 'KCG_NG'
  | 'KDA'
  | 'KDA_CI'
  | 'KEA'
  | 'KEA_CV'
  | 'KHQ'
  | 'KHQ_ML'
  | 'KI'
  | 'KI_KE'
  | 'KK'
  | 'KKJ'
  | 'KKJ_CM'
  | 'KK_KZ'
  | 'KL'
  | 'KLN'
  | 'KLN_KE'
  | 'KL_GL'
  | 'KM'
  | 'KM_KH'
  | 'KN'
  | 'KN_IN'
  | 'KO'
  | 'KOK'
  | 'KOK_IN'
  | 'KO_KP'
  | 'KO_KR'
  | 'KR'
  | 'KR_NG'
  | 'KS'
  | 'KSB'
  | 'KSB_TZ'
  | 'KSF'
  | 'KSF_CM'
  | 'KSH'
  | 'KSH_DE'
  | 'KS_ARAB'
  | 'KS_ARAB_IN'
  | 'KS_IN'
  | 'KW'
  | 'KW_GB'
  | 'KY'
  | 'KY_KG'
  | 'LA'
  | 'LAG'
  | 'LAG_TZ'
  | 'LA_001'
  | 'LB'
  | 'LB_LU'
  | 'LG'
  | 'LG_UG'
  | 'LKT'
  | 'LKT_US'
  | 'LN'
  | 'LN_AO'
  | 'LN_CD'
  | 'LN_CF'
  | 'LN_CG'
  | 'LO'
  | 'LO_LA'
  | 'LT'
  | 'LT_LT'
  | 'LU'
  | 'LUO'
  | 'LUO_KE'
  | 'LUY'
  | 'LUY_KE'
  | 'LU_CD'
  | 'LV'
  | 'LV_LV'
  | 'MAS'
  | 'MAS_KE'
  | 'MAS_TZ'
  | 'MER'
  | 'MER_KE'
  | 'MFE'
  | 'MFE_MU'
  | 'MG'
  | 'MGH'
  | 'MGH_MZ'
  | 'MGO'
  | 'MGO_CM'
  | 'MG_MG'
  | 'MH'
  | 'MH_MH'
  | 'MI'
  | 'MI_NZ'
  | 'MK'
  | 'MK_MK'
  | 'ML'
  | 'ML_IN'
  | 'MN'
  | 'MN_MN'
  | 'MOH'
  | 'MOH_CA'
  | 'MR'
  | 'MR_IN'
  | 'MS'
  | 'MS_BN'
  | 'MS_MY'
  | 'MS_SG'
  | 'MT'
  | 'MT_MT'
  | 'MUA'
  | 'MUA_CM'
  | 'MY'
  | 'MY_MM'
  | 'NAQ'
  | 'NAQ_NA'
  | 'NB'
  | 'NB_NO'
  | 'NB_SJ'
  | 'ND'
  | 'ND_SN'
  | 'ND_ZW'
  | 'NE'
  | 'NEN'
  | 'NEN_NC'
  | 'NE_IN'
  | 'NE_NP'
  | 'NL'
  | 'NL_AW'
  | 'NL_BE'
  | 'NL_BQ'
  | 'NL_CW'
  | 'NL_NL'
  | 'NL_SX'
  | 'NMG'
  | 'NMG_CM'
  | 'NN'
  | 'NNH'
  | 'NNH_CM'
  | 'NN_NO'
  | 'NO'
  | 'NO_NO'
  | 'NO_NO_NY'
  | 'NR'
  | 'NR_ZA'
  | 'NUS'
  | 'NUS_SD'
  | 'NV'
  | 'NV_US'
  | 'NY'
  | 'NYN'
  | 'NYN_UG'
  | 'NY_MW'
  | 'NY_ZM'
  | 'OC'
  | 'OC_FR'
  | 'OLO'
  | 'OLO_RU'
  | 'OM'
  | 'OM_ET'
  | 'OM_KE'
  | 'OR'
  | 'OR_IN'
  | 'OS'
  | 'OS_GE'
  | 'OS_RU'
  | 'PA'
  | 'PAP'
  | 'PAP_029'
  | 'PA_ARAB'
  | 'PA_ARAB_PK'
  | 'PA_GURU'
  | 'PA_GURU_IN'
  | 'PL'
  | 'PL_PL'
  | 'PRG'
  | 'PRG_001'
  | 'PS'
  | 'PS_AF'
  | 'PT'
  | 'PT_AO'
  | 'PT_BR'
  | 'PT_CH'
  | 'PT_CV'
  | 'PT_GQ'
  | 'PT_GW'
  | 'PT_LU'
  | 'PT_MO'
  | 'PT_MZ'
  | 'PT_PT'
  | 'PT_ST'
  | 'PT_TL'
  | 'QU'
  | 'QU_BO'
  | 'QU_EC'
  | 'QU_PE'
  | 'RM'
  | 'RM_CH'
  | 'RN'
  | 'RN_BI'
  | 'RO'
  | 'ROF'
  | 'ROF_TZ'
  | 'RO_MD'
  | 'RO_RO'
  | 'RU'
  | 'RU_BY'
  | 'RU_KG'
  | 'RU_KZ'
  | 'RU_MD'
  | 'RU_RU'
  | 'RU_UA'
  | 'RW'
  | 'RWK'
  | 'RWK_TZ'
  | 'RW_RW'
  | 'SAH'
  | 'SAH_RU'
  | 'SAQ'
  | 'SAQ_KE'
  | 'SBP'
  | 'SBP_TZ'
  | 'SD'
  | 'SD_ARAB'
  | 'SD_ARAB_PK'
  | 'SE'
  | 'SEH'
  | 'SEH_MZ'
  | 'SES'
  | 'SES_ML'
  | 'SE_FI'
  | 'SE_NO'
  | 'SE_SE'
  | 'SG'
  | 'SG_CF'
  | 'SHI'
  | 'SHI_LATN'
  | 'SHI_LATN_MA'
  | 'SHI_TFNG'
  | 'SHI_TFNG_MA'
  | 'SI'
  | 'SI_LK'
  | 'SK'
  | 'SK_SK'
  | 'SL'
  | 'SL_SI'
  | 'SMC'
  | 'SMC_IN'
  | 'SMN'
  | 'SMN_FI'
  | 'SN'
  | 'SN_ZW'
  | 'SO'
  | 'SO_DJ'
  | 'SO_ET'
  | 'SO_KE'
  | 'SO_SO'
  | 'SQ'
  | 'SQ_AL'
  | 'SQ_MK'
  | 'SQ_XK'
  | 'SR'
  | 'SRN'
  | 'SRN_SR'
  | 'SR_CYRL'
  | 'SR_CYRL_BA'
  | 'SR_CYRL_ME'
  | 'SR_CYRL_RS'
  | 'SR_LATN'
  | 'SR_LATN_BA'
  | 'SR_LATN_ME'
  | 'SR_LATN_RS'
  | 'SS'
  | 'SSB'
  | 'SSB_NO'
  | 'SS_SZ'
  | 'SS_ZA'
  | 'ST'
  | 'ST_LS'
  | 'ST_ZA'
  | 'SU'
  | 'SU_ID'
  | 'SV'
  | 'SV_AX'
  | 'SV_FI'
  | 'SV_SE'
  | 'SW'
  | 'SW_CD'
  | 'SW_KE'
  | 'SW_TZ'
  | 'SW_UG'
  | 'TA'
  | 'TA_IN'
  | 'TA_LK'
  | 'TA_MY'
  | 'TA_SG'
  | 'TCY'
  | 'TCY_IN'
  | 'TE'
  | 'TEA'
  | 'TEA_IN'
  | 'TEO'
  | 'TEO_KE'
  | 'TEO_UG'
  | 'TE_IN'
  | 'TG'
  | 'TG_CYRL'
  | 'TG_CYRL_TJ'
  | 'TH'
  | 'TH_TH'
  | 'TI'
  | 'TIG'
  | 'TIG_ER'
  | 'TI_ER'
  | 'TI_ET'
  | 'TK'
  | 'TK_TM'
  | 'TN'
  | 'TN_BW'
  | 'TN_ZA'
  | 'TO'
  | 'TO_TO'
  | 'TR'
  | 'TR_CY'
  | 'TR_TR'
  | 'TR_TR_CY'
  | 'TS'
  | 'TS_ZA'
  | 'TT'
  | 'TT_RU'
  | 'TWQ'
  | 'TWQ_NE'
  | 'TZM'
  | 'TZM_ARAB'
  | 'TZM_ARAB_MA'
  | 'TZM_LATN'
  | 'TZM_LATN_DZ'
  | 'TZM_TFNG'
  | 'TZM_TFNG_MA'
  | 'UG'
  | 'UG_CN'
  | 'UK'
  | 'UK_UA'
  | 'UR'
  | 'UR_IN'
  | 'UR_PK'
  | 'UZ'
  | 'UZ_AF'
  | 'UZ_ARAB'
  | 'UZ_ARAB_AF'
  | 'UZ_CYRL'
  | 'UZ_CYRL_UZ'
  | 'UZ_LATN'
  | 'UZ_LATN_UZ'
  | 'VAI'
  | 'VAI_LATN'
  | 'VAI_LATN_LR'
  | 'VAI_VAI'
  | 'VAI_VAI_LR'
  | 'VE'
  | 'VE_ZA'
  | 'VI'
  | 'VI_VN'
  | 'VO'
  | 'VO_001'
  | 'VUN'
  | 'VUN_TZ'
  | 'WAE'
  | 'WAE_CH'
  | 'WAL'
  | 'WAL_ET'
  | 'WO'
  | 'WO_SN'
  | 'XH'
  | 'XH_ZA'
  | 'XOG'
  | 'XOG_UG'
  | 'YAV'
  | 'YAV_CM'
  | 'YI'
  | 'YI_001'
  | 'YO'
  | 'YO_BJ'
  | 'YO_NG'
  | 'ZGH'
  | 'ZGH_TFNG'
  | 'ZGH_TFNG_MA'
  | 'ZH'
  | 'ZHI'
  | 'ZHI_CN'
  | 'ZH_CN'
  | 'ZH_HK'
  | 'ZH_MO'
  | 'ZH_SG'
  | 'ZH_TW'
  | 'ZU'
  | 'ZU_ZA';

export type LanguageDisplay = {
  __typename: 'LanguageDisplay';
  /** ISO 639 representation of the language name. */
  code: LanguageCode;
  /** Full name of the language. */
  language: Scalars['String']['output'];
};

export type LimitInfo = {
  __typename: 'LimitInfo';
  /** Defines the allowed maximum resource usage, null means unlimited. */
  allowedUsage: Limits;
  /** Defines the current resource usage. */
  currentUsage: Limits;
};

export type Limits = {
  __typename: 'Limits';
  channels?: Maybe<Scalars['Int']['output']>;
  orders?: Maybe<Scalars['Int']['output']>;
  productVariants?: Maybe<Scalars['Int']['output']>;
  staffUsers?: Maybe<Scalars['Int']['output']>;
  warehouses?: Maybe<Scalars['Int']['output']>;
};

export type Manifest = {
  __typename: 'Manifest';
  about: Scalars['String']['output'];
  appUrl: Scalars['String']['output'];
  /** The audience that will be included in all JWT tokens for the app. */
  audience: Scalars['String']['output'];
  dataPrivacyUrl: Scalars['String']['output'];
  extensions: Array<AppManifestExtension>;
  homepageUrl: Scalars['String']['output'];
  identifier: Scalars['String']['output'];
  name: Scalars['String']['output'];
  supportUrl: Scalars['String']['output'];
  tokenTargetUrl: Scalars['String']['output'];
  version: Scalars['String']['output'];
  webhooks: Array<AppManifestWebhook>;
};

export type ManifestMutationResult = BaseMutationResult & {
  __typename: 'ManifestMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Manifest;
};

export type MeasurementUnit =
  | 'ACRE_FT'
  | 'ACRE_IN'
  | 'CM'
  | 'CUBIC_CENTIMETER'
  | 'CUBIC_DECIMETER'
  | 'CUBIC_FOOT'
  | 'CUBIC_INCH'
  | 'CUBIC_METER'
  | 'CUBIC_MILLIMETER'
  | 'CUBIC_YARD'
  | 'FL_OZ'
  | 'FT'
  | 'G'
  | 'INCH'
  | 'KG'
  | 'KM'
  | 'LB'
  | 'LITER'
  | 'M'
  | 'OZ'
  | 'PINT'
  | 'QT'
  | 'SQ_CM'
  | 'SQ_FT'
  | 'SQ_INCH'
  | 'SQ_KM'
  | 'SQ_M'
  | 'SQ_YD'
  | 'TONNE'
  | 'YD';

export type MediaBase = {
  /** The media item the event relates to. */
  media: MediaItem;
};

export type MediaCreated = Event & MediaBase & {
  __typename: 'MediaCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The media item the event relates to. */
  media: MediaItem;
  /** The application receiving the webhook. */
  recipient: App;
};

export type MediaCreationInput = {
  alt: Scalars['String']['input'];
  description: Scalars['String']['input'];
  externalUrl?: InputMaybe<Scalars['String']['input']>;
  file?: InputMaybe<Scalars['Upload']['input']>;
  fileUrl?: InputMaybe<Scalars['String']['input']>;
  isPublished: Scalars['Boolean']['input'];
  publishedAt: Scalars['DateTime']['input'];
  title: Scalars['String']['input'];
  type: MediaType;
};

export type MediaDeleted = Event & MediaBase & {
  __typename: 'MediaDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The media item the event relates to. */
  media: MediaItem;
  /** The application receiving the webhook. */
  recipient: App;
};

export type MediaError = ErrorInterface & {
  __typename: 'MediaError';
  /** List of attributes IDs which causes the error. */
  attributes?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of attribute values IDs which causes the error. */
  values?: Maybe<Array<Scalars['ID']['output']>>;
};

export type MediaErrorCode =
  | 'ATTRIBUTE_ALREADY_ASSIGNED'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type MediaFilter = {
  AND?: InputMaybe<MediaFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<MediaFilter>;
  OR?: InputMaybe<MediaFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type MediaInput = {
  alt: Scalars['String']['input'];
  description: Scalars['String']['input'];
  externalUrl?: InputMaybe<Scalars['String']['input']>;
  file?: InputMaybe<Scalars['Upload']['input']>;
  fileUrl?: InputMaybe<Scalars['String']['input']>;
  isPublished: Scalars['Boolean']['input'];
  publishedAt: Scalars['DateTime']['input'];
  title: Scalars['String']['input'];
  type: MediaType;
};

/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type MediaItem = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'MediaItem';
  alt: Scalars['String']['output'];
  /** Default aspect ratio */
  aspectRatio?: Maybe<Scalars['Float']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  file: File;
  /** Default height in pixels */
  height?: Maybe<Scalars['Int']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isPublished: Scalars['Boolean']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  oembedData: Scalars['JSONString']['output'];
  pk: Scalars['String']['output'];
  placeholder?: Maybe<Scalars['String']['output']>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** The publication date. */
  publishedAt: Scalars['DateTime']['output'];
  size?: Maybe<Size>;
  title: Scalars['String']['output'];
  type: MediaType;
  /** The media upload date. */
  uploadedAt: Scalars['DateTime']['output'];
  /** Default width in pixels */
  width?: Maybe<Scalars['Int']['output']>;
};


/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type MediaItemFileArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
};


/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type MediaItemMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type MediaItemMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type MediaItemPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type MediaItemPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type MediaItemConnection = {
  __typename: 'MediaItemConnection';
  /** Contains the nodes in this connection */
  edges: Array<MediaItemEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MediaItemEdge = {
  __typename: 'MediaItemEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: MediaItem;
};

export type MediaItemMutationResult = BaseMutationResult & {
  __typename: 'MediaItemMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: MediaItem;
};

export type MediaOrdering =
  | 'PUBLISHED_AT'
  | 'TITLE'
  | 'UPLOADED_AT'
  | 'VISIBILITY';

export type MediaOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<MediaOrdering>;
};

/** Media type. */
export type MediaType =
  | 'IMAGE'
  | 'VIDEO';

export type MediaUpdated = Event & MediaBase & {
  __typename: 'MediaUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The media item the event relates to. */
  media: MediaItem;
  /** The application receiving the webhook. */
  recipient: App;
};

/** A menu: an object that is used to help navigate through the store. */
export type Menu = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Menu';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  items: Array<MenuItem>;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  slug: Scalars['String']['output'];
};


/** A menu: an object that is used to help navigate through the store. */
export type MenuMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A menu: an object that is used to help navigate through the store. */
export type MenuMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A menu: an object that is used to help navigate through the store. */
export type MenuPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A menu: an object that is used to help navigate through the store. */
export type MenuPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type MenuBase = {
  /** The menu the event relates to. */
  menu: Menu;
};


export type MenuBaseMenuArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type MenuConnection = {
  __typename: 'MenuConnection';
  /** Contains the nodes in this connection */
  edges: Array<MenuEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type MenuCreated = Event & MenuBase & {
  __typename: 'MenuCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The menu the event relates to. */
  menu: Menu;
  /** The application receiving the webhook. */
  recipient: App;
};


export type MenuCreatedMenuArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type MenuCreationInput = {
  items: Array<MenuItemInput>;
  name: Scalars['String']['input'];
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type MenuDeleted = Event & MenuBase & {
  __typename: 'MenuDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The menu the event relates to. */
  menu: Menu;
  /** The application receiving the webhook. */
  recipient: App;
};


export type MenuDeletedMenuArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** An edge in a connection. */
export type MenuEdge = {
  __typename: 'MenuEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Menu;
};

export type MenuErrorCode =
  | 'CANNOT_ASSIGN_NODE'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'INVALID_MENU_ITEM'
  | 'NOT_FOUND'
  | 'NO_MENU_ITEM_PROVIDED'
  | 'REQUIRED'
  | 'TOO_MANY_MENU_ITEMS'
  | 'UNIQUE';

export type MenuInput = {
  name: Scalars['String']['input'];
  slug?: InputMaybe<Scalars['String']['input']>;
};

/** A single item of the related menu. Can store categories, collection or pages. */
export type MenuItem = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'MenuItem';
  category?: Maybe<Category>;
  children?: Maybe<Array<MenuItem>>;
  /** A collection associated with this menu item. */
  collection?: Maybe<Collection>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  level: Scalars['Int']['output'];
  menu: Menu;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  page?: Maybe<Page>;
  parent?: Maybe<MenuItem>;
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  translation?: Maybe<MenuItemTranslation>;
  /** URL to the menu item. */
  url: Scalars['String']['output'];
};


/** A single item of the related menu. Can store categories, collection or pages. */
export type MenuItemMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A single item of the related menu. Can store categories, collection or pages. */
export type MenuItemMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A single item of the related menu. Can store categories, collection or pages. */
export type MenuItemPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A single item of the related menu. Can store categories, collection or pages. */
export type MenuItemPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A single item of the related menu. Can store categories, collection or pages. */
export type MenuItemTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

export type MenuItemBase = {
  menuItem: MenuItem;
};


export type MenuItemBaseMenuItemArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type MenuItemConnection = {
  __typename: 'MenuItemConnection';
  /** Contains the nodes in this connection */
  edges: Array<MenuItemEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type MenuItemCreated = Event & MenuItemBase & {
  __typename: 'MenuItemCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  menuItem: MenuItem;
  /** The application receiving the webhook. */
  recipient: App;
};


export type MenuItemCreatedMenuItemArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type MenuItemCreationInput = {
  category: Scalars['ID']['input'];
  collection: Scalars['ID']['input'];
  menu: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  page: Scalars['ID']['input'];
  parent: Scalars['ID']['input'];
  url: Scalars['String']['input'];
};

export type MenuItemDeleted = Event & MenuItemBase & {
  __typename: 'MenuItemDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  menuItem: MenuItem;
  /** The application receiving the webhook. */
  recipient: App;
};


export type MenuItemDeletedMenuItemArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** An edge in a connection. */
export type MenuItemEdge = {
  __typename: 'MenuItemEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: MenuItem;
};

/** A single item of the related menu. Can store categories, collection or pages. */
export type MenuItemFilter = {
  AND?: InputMaybe<MenuItemFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<MenuItemFilter>;
  OR?: InputMaybe<MenuItemFilter>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type MenuItemInput = {
  category: Scalars['ID']['input'];
  collection: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  page: Scalars['ID']['input'];
  url: Scalars['String']['input'];
};

export type MenuItemMoveInput = {
  itemId: Scalars['ID']['input'];
  parentId: Scalars['ID']['input'];
  sortOrder: Scalars['Int']['input'];
};

export type MenuItemMutationResult = BaseMutationResult & {
  __typename: 'MenuItemMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: MenuItem;
};

export type MenuItemOrdering =
  | 'NAME';

export type MenuItemOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<MenuItemOrdering>;
};

/** MenuItemTranslation(id, language_code, menu_item, name) */
export type MenuItemTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'MenuItemTranslation';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  menuItem: MenuItem;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
};

export type MenuItemUpdated = Event & MenuItemBase & {
  __typename: 'MenuItemUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  menuItem: MenuItem;
  /** The application receiving the webhook. */
  recipient: App;
};


export type MenuItemUpdatedMenuItemArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type MenuMutationResult = BaseMutationResult & {
  __typename: 'MenuMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Menu;
};

export type MenuOrdering =
  | 'ITEMS_COUNT'
  | 'NAME';

export type MenuOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<MenuOrdering>;
};

export type MenuUpdated = Event & MenuBase & {
  __typename: 'MenuUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The menu the event relates to. */
  menu: Menu;
  /** The application receiving the webhook. */
  recipient: App;
};


export type MenuUpdatedMenuArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type MetadataErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'NOT_UPDATED'
  | 'REQUIRED';

export type MetadataFilter = {
  key?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type MetadataInput = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type MetadataItem = {
  __typename: 'MetadataItem';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

/** Represents amount of money in specific currency. */
export type Money = {
  __typename: 'Money';
  /** Amount of money. */
  amount: Scalars['Float']['output'];
  /** Amount of money. */
  currency: Currency;
  localized: Scalars['String']['output'];
};

export type MoneyInput = {
  amount: Scalars['PositiveDecimal']['input'];
  currency: Scalars['String']['input'];
};

/** Represents a range of amounts of money. */
export type MoneyRange = {
  __typename: 'MoneyRange';
  /** Lower bound of a price range. */
  start: Money;
  /** Upper bound of a price range. */
  stop: Money;
};

export type MoveProductInput = {
  productId: Scalars['ID']['input'];
  sortOrder: Scalars['Int']['input'];
};

export type Mutation = {
  __typename: 'Mutation';
  /** Activate the app. */
  activateApp: AppMutationResult;
  /** Activate a channel. */
  activateChannel: ChannelMutationResult;
  /** Activate a gift card. */
  activateGiftCard: GiftCardMutationResult;
  /** Activate gift cards. */
  activateGiftCards: GiftCardBulkMutationResult;
  addAddress: AddressMutationResult;
  addCataloguesToSale: SaleMutationResult;
  addCataloguesToVoucher: VoucherMutationResult;
  /** Adds a checkout line to the existing checkout. If line was already in checkout, its quantity will be increased. */
  addCheckoutLines: CheckoutMutationResult;
  addDiscountToOrder: OrderMutationResult;
  /** Adds note to the gift card. */
  addNoteToGiftCard: Giftcardmutationresult;
  /** Adds note to the order. */
  addNoteToOrder: Ordermutationresult;
  /** Adds a point of contact to a checkout. */
  addPointsOfContactToCheckout: CheckoutMutationResult;
  /** Adds products to a collection. */
  addProductsToCollection: CollectionMutationResult;
  /** Adds a gift card or a voucher to a checkout. */
  addPromoCodeToCheckout: CheckoutMutationResult;
  /** Approve existing fulfillment. */
  approveFulfillment: OrderFulfillmentMutationResult;
  /** Assigns storefront's navigation menus. */
  assignNavigation: MenuMutationResult;
  /** Assign attributes to a given page type. */
  assignPageAttribute: PageKlassMutationResult;
  /** Assign attributes to a given product type. */
  assignProductAttribute: ProductAttributeAssignmentMutationResult;
  /** Assign an media to a product variant. */
  assignProductMedia: ProductMediaAssignmentMutationResult;
  assignWarehouseShippingZone: WarehouseShippingZoneAssignmentMutationResult;
  /** Sets the customer as the owner of the checkout. */
  attachCustomerToCheckout: CheckoutMutationResult;
  /** Cancels existing fulfillment and optionally restocks items. */
  cancelFulfillment: OrderFulfillmentMutationResult;
  /** Cancel an order. */
  cancelOrder: OrderMutationResult;
  cancelOrders: OrderBulkMutationResult;
  /** Capture an order. */
  captureOrder: OrderMutationResult;
  /** Captures the authorized payment amount. */
  capturePayment: PaymentMutationResult;
  /** Change the password of the logged in user. */
  changePassword: UserMutationResult;
  /** Check payment balance. */
  checkPaymentBalance: PaymentCheckBalanceMutationResult;
  /** Completes the checkout. As a result a new order is created and a payment charge is made. This action requires a successful payment before it can be performed. In case additional confirmation step as 3D secure is required confirmationNeeded flag will be set to True and no order created until payment is confirmed with second call of this mutation. */
  completeCheckout: CheckoutCompleteMutationResult;
  /** Completes creating an order. */
  completeOrderDraft: OrderMutationResult;
  /** Confirm user account with token sent by email during registration. */
  confirmAccount: UserMutationResult;
  /** Confirm the email change of the logged-in user. */
  confirmEmailChange: UserMutationResult;
  /** Confirms an unconfirmed order by changing status to unfulfilled. */
  confirmOrder: OrderMutationResult;
  /** Creates a new app. */
  createApp: AppMutationResult;
  /** Creates a new token. */
  createAppToken: AppTokenMutationResult;
  /** Creates an attribute. */
  createAttribute: AttributeMutationResult;
  /** Creates a new category. */
  createCategory: CategoryMutationResult;
  /** Creates new channel. */
  createChannel: ChannelMutationResult;
  /** Create a new checkout. */
  createCheckout: CheckoutMutationResult;
  /** Create a new payment for given checkout. */
  createCheckoutPayment: CheckoutPaymentMutationResult;
  /** Creates a new collection. */
  createCollection: CollectionMutationResult;
  createCustomer: UserMutationResult;
  /** Create new digital content. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec */
  createDigitalContent: DigitalContentMutationResult;
  /** Generate new URL to digital content. */
  createDigitalContentUrl: ProductMutationResult;
  /** Creates a new draft order. */
  createDraftOrder: OrderMutationResult;
  /** Creates a new gift card. */
  createGiftCard: GiftCardMutationResult;
  /** Create gift cards. */
  createGiftCards: GiftCardBulkMutationResult;
  /** Create new permission group. Apps are not allowed to perform this mutation. */
  createGroup: GroupMutationResult;
  /** Creates a ready to send invoice. */
  createInvoice: InvoiceMutationResult;
  /** Creates a new media item. */
  createMedia: MediaItemMutationResult;
  /** Creates a new Menu. */
  createMenu: MenuMutationResult;
  /** Creates a new menu item. */
  createMenuItem: MenuItemMutationResult;
  /** Create new order from existing checkout. */
  createOrderFromCheckout: OrderMutationResult;
  /** Create order lines for an order. */
  createOrderLines: OrderLinesMutationResult;
  /** Creates a new page. */
  createPage: PageMutationResult;
  /** Create a new page type. */
  createPageKlass: PageKlassMutationResult;
  /** Creates a new product. */
  createProduct: ProductMutationResult;
  /** Creates a new product type. */
  createProductKlass: ProductKlassMutationResult;
  /** Create a media object (image or video URL) associated with product. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec */
  createProductMediaItem: ProductMediaMutationResult;
  /** Creates stocks for product variant. */
  createProductStocks: ProductMutationResult;
  /** Creates a new variant for a product. */
  createProductVariant: ProductMutationResult;
  /** Creates product variants for a given product. */
  createProducts: ProductBulkMutationResult;
  /** Creates a new sale. */
  createSale: SaleMutationResult;
  /** Creates a new shipping price. */
  createShippingPrice: ShippingPriceMutationResult;
  /** Creates a new shipping zone. */
  createShippingZone: ShippingZoneMutationResult;
  /** Creates a new staff user. Apps are not allowed to perform this mutation. */
  createStaffMember: UserMutationResult;
  /** Creates a new staff notification recipient. */
  createStaffNotificationRecipient: StaffNotificationRecipientMutationResult;
  /** Create a tax class. */
  createTaxClass: TaxClassMutationResult;
  /** Create transaction for checkout or order. */
  createTransaction: TransactionItemMutationResult;
  createUser: UserCreationResult;
  /** Creates a value for an attribute. */
  createValue: AttributeMutationResult;
  /** Creates a new voucher. */
  createVoucher: VoucherMutationResult;
  /** Creates new warehouse. */
  createWarehouse: WarehouseMutationResult;
  /** Creates a new webhook subscription. */
  createWebhook: WebhookMutationResult;
  /** Deactivate all JWT tokens of the currently authenticated user. */
  deactivateAllUserTokens?: Maybe<Scalars['Void']['output']>;
  /** Deactivate the app. */
  deactivateApp: AppMutationResult;
  /** Deactivate a channel. */
  deactivateChannel: ChannelMutationResult;
  /** Deactivate a gift card. */
  deactivateGiftCard: GiftCardMutationResult;
  /** Deactivate gift cards. */
  deactivateGiftCards: GiftCardBulkMutationResult;
  /** Deactivates product variant preorder. It changes all preorder allocation into regular allocation. */
  deactivateProductPreorder: ProductPreorderDeactivationMutationResult;
  /** Delete a user account. */
  deleteAccount: UserMutationResult;
  /** Deletes an address. */
  deleteAddress: AddressMutationResult;
  /** Deletes an app. */
  deleteApp: AppMutationResult;
  /** Deletes an authentication token assigned to app. */
  deleteAppToken: AppTokenMutationResult;
  /** Deletes an attribute. */
  deleteAttribute: AttributeMutationResult;
  /** Deletes attributes. */
  deleteAttributes: IdListMutationResult;
  /** Deletes categories. */
  deleteCategories: IdListMutationResult;
  /** Deletes a category. */
  deleteCategory: CategoryMutationResult;
  /** Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed. */
  deleteChannel: ChannelMutationResult;
  deleteCheckoutLine: CheckoutOptionalMutationResult;
  /** Deletes checkout lines. */
  deleteCheckoutLines: CheckoutMutationResult;
  /** Deletes a collection. */
  deleteCollection: CollectionMutationResult;
  /** Deletes collections. */
  deleteCollections: IdListMutationResult;
  /** Deletes a customer. */
  deleteCustomer: UserMutationResult;
  /** Deletes customers. */
  deleteCustomers: IdListMutationResult;
  /** Remove digital content assigned to given variant. */
  deleteDigitalContent: ProductMutationResult;
  /** Delete failed installation. */
  deleteFailedInstallation: AppInstallationMutationResult;
  /** Delete gift card. */
  deleteGiftCard: GiftCardMutationResult;
  /** Delete gift cards. */
  deleteGiftCards: GiftCardBulkMutationResult;
  /** Delete permission group. Apps are not allowed to perform this mutation. */
  deleteGroup: GroupMutationResult;
  /** Deletes an invoice. */
  deleteInvoice: InvoiceMutationResult;
  /** Deletes a media. */
  deleteMediaItem: MediaItemMutationResult;
  /** Deletes media. */
  deleteMediaItems: IdListMutationResult;
  /** Deletes a menu. */
  deleteMenu: MenuMutationResult;
  /** Deletes a menu item. */
  deleteMenuItem: MenuItemMutationResult;
  /** Deletes menu items. */
  deleteMenuItems: IdListMutationResult;
  /** Deletes menus. */
  deleteMenus: IdListMutationResult;
  deleteMetadata: ObjectWithMetadataMutationResult;
  /** Remove discount from the order. */
  deleteOrderDiscount: OrderMutationResult;
  /** Deletes a draft order. */
  deleteOrderDraft: OrderMutationResult;
  /** Deletes draft orders. */
  deleteOrderDrafts: IdListMutationResult;
  /** Deletes an order line from an order. */
  deleteOrderLine: OrderLineMutationResult;
  /** Deletes a page. */
  deletePage: PageMutationResult;
  /** Delete a page type. */
  deletePageKlass: PageKlassMutationResult;
  /** Delete page types. */
  deletePageKlasses: IdListMutationResult;
  /** Deletes pages. */
  deletePages: IdListMutationResult;
  deletePrivateMetadata: ObjectWithMetadataMutationResult;
  /** Deletes a product. */
  deleteProduct: ProductMutationResult;
  /** Deletes a product type. */
  deleteProductKlass: ProductKlassMutationResult;
  /** Deletes product types. */
  deleteProductKlasses: IdListMutationResult;
  /** Deletes a product media. */
  deleteProductMediaItem: ProductMediaMutationResult;
  /** Deletes product media. */
  deleteProductMediaItems: IdListMutationResult;
  /** Delete stocks from product variant. */
  deleteProductStocks: ProductMutationResult;
  /** Deletes a product variant. */
  deleteProductVariant: ProductMutationResult;
  /** Deletes product variants. */
  deleteProductVariants: IdListMutationResult;
  /** Deletes products. */
  deleteProducts: IdListMutationResult;
  /** Deletes a sale. */
  deleteSale: SaleMutationResult;
  /** Deletes sales. */
  deleteSales: IdListMutationResult;
  /** Deletes a shipping price. */
  deleteShippingPrice: ShippingPriceMutationResult;
  /** Deletes shipping prices. */
  deleteShippingPrices: IdListMutationResult;
  /** Deletes a shipping zone. */
  deleteShippingZone: ShippingZoneMutationResult;
  /** Deletes shipping zones. */
  deleteShippingZones: IdListMutationResult;
  /** Deletes a staff user. Apps are not allowed to perform this mutation. */
  deleteStaffMember: UserMutationResult;
  /** Deletes staff users. Apps are not allowed to perform this mutation. */
  deleteStaffMembers: IdListMutationResult;
  /** Delete staff notification recipient. */
  deleteStaffNotificationRecipient: StaffNotificationRecipientMutationResult;
  /** Delete a tax class. After deleting the tax class any products, product types or shipping methods using it are updated to use the default tax class. */
  deleteTaxClass: TaxClassMutationResult;
  /** Remove all tax class rates for a specific country. */
  deleteTaxCountryConfiguration: TaxCountryConfigurationMutationResult;
  deleteUserAvatar: UserMutationResult;
  /** Deletes a value of an attribute. */
  deleteValue: AttributeMutationResult;
  /** Deletes values of attributes. */
  deleteValues: IdListMutationResult;
  /** Deletes a voucher. */
  deleteVoucher: VoucherMutationResult;
  /** Deletes vouchers. */
  deleteVouchers: IdListMutationResult;
  deleteWarehouse: WarehouseMutationResult;
  /** Deletes a webhook subscription. */
  deleteWebhook: WebhookMutationResult;
  /** Removes the user assigned as the owner of the checkout. */
  detachCustomerFromCheckout: CheckoutMutationResult;
  /** Exclude products from shipping price. */
  excludeProductsFromShippingPrice: ShippingMethodMutationResult;
  exportGiftCards: ExportFileMutationResult;
  exportProducts: ExportFileMutationResult;
  /** Prepare external authentication url for user by custom plugin. */
  externalAuthenticationUrl: AuthPluginMutationResult;
  /** Fetch and validate manifest. */
  fetchAppManifest: ManifestMutationResult;
  /** Creates new fulfillments for an order. */
  fulfillOrder: OrderFulfillmentMutationResult;
  /** Initializes payment process when it is required by gateway. */
  initializePayment: PaymentInitializeMutationResult;
  /** Install new app by using app manifest. Requires the following permissions: AUTHENTICATED_STAFF_USER and MANAGE_APPS. */
  installApp: AppMutationResult;
  /** Logout user by custom plugin. */
  logout: AuthPluginMutationResult;
  /** Exempt checkout or order from charging the taxes. When tax exemption is enabled, taxes won't be charged for the checkout or order. Taxes may still be calculated in cases when product prices are entered with the tax included and the net price needs to be known. */
  manageTaxExemption: TaxSourceObjectMutationResult;
  /** Mark order as manually paid. */
  markOrderAsPaid: OrderMutationResult;
  /** Moves items of menus. */
  moveMenuItem: MenuMutationResult;
  /** Authenticates a user and returns token and user data. */
  obtainToken: JwtMutationResult;
  /** Page from which attribute values are reordered. */
  page: Page;
  /** Product from which attribute values are reordered. */
  product: Product;
  /** Product type from which attributes are reordered. */
  productKlass: ProductKlass;
  publishMediaItems: IdListMutationResult;
  publishPages: PageBulkMutationResult;
  /** Refresh JWT token. Mutation tries to take refreshToken from the input. If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie. */
  refreshToken: JwtMutationResult;
  refundFulfilledProducts: OrderFulfillmentMutationResult;
  /** Refund an order. */
  refundOrder: OrderMutationResult;
  /** Refunds the captured payment amount. */
  refundPayment: PaymentMutationResult;
  removeCataloguesFromSale: SaleMutationResult;
  removeCataloguesFromVoucher: VoucherMutationResult;
  /** Remove discount applied to the order line. */
  removeOrderLineDiscount: OrderLineMutationResult;
  /** Remove product from excluded list for shipping price. */
  removeProductFromShippingPriceExclusionList: ShippingPriceRemoveProductFromExcludeMutationResult;
  /** Remove products from a collection. */
  removeProductsFromCollection: CollectionMutationResult;
  /** Remove a gift card or a voucher from a checkout. */
  removePromoCodeFromCheckout: CheckoutMutationResult;
  /** Reorder the warehouses of a channel. */
  reorderChannelWarehouses: ChannelReorderWarehousesMutationResult;
  /** Reorder the products of a collection. */
  reorderCollectionProducts: CollectionMutationResult;
  reorderPageKlassAttributes: PageKlassMutationResult;
  reorderPageValues: PageMutationResult;
  reorderProductKlassAttributes: ProductKlassMutationResult;
  /** Changes ordering of the product media. */
  reorderProductMedia: ProductMediaMutationResult;
  reorderProductValues: ProductMutationResult;
  /** Reorder the variants of a product. Mutation updates updated_at on product and triggers PRODUCT_UPDATED webhook. */
  reorderProductVariants: ProductMutationResult;
  /** Reorder the values of an attribute. */
  reorderValues: AttributeMutationResult;
  /** Sends email with account removal link for the logged-in user. */
  requestAccountDeletion: UserMutationResult;
  /** Request email change of the logged in user. */
  requestEmailChange: UserMutationResult;
  /** Request an invoice for the order using plugin. */
  requestInvoice: OrderInvoiceMutationResult;
  /** Requests deletion of an invoice. */
  requestInvoiceDeletion: InvoiceMutationResult;
  /** Sends an email with the account password modification link. */
  requestPasswordReset?: Maybe<Scalars['Void']['output']>;
  /** Request an action for payment transaction. */
  requestTransactionAction: TransactionItemMutationResult;
  /** Resend a gift card. */
  resendGiftCard: GiftCardMutationResult;
  /** Retry failed installation of new app. */
  retryAppInstallation: AppMutationResult;
  /** Retries event delivery. */
  retryEventDelivery: EventDeliveryMutationResult;
  returnFulfilledProducts: OrderFulfillmentMutationResult;
  /** Send an invoice notification to the customer. */
  sendInvoiceNotification: InvoiceMutationResult;
  setDefaultAddress: UserMutationResult;
  /** Set default variant for a product. Mutation triggers PRODUCT_UPDATED webhook. */
  setDefaultVariant: ProductMutationResult;
  /** Sets the user's password from the token sent by email using the RequestPasswordReset mutation. */
  setPassword: JwtMutationResult;
  setUsersActive: UserBulkMutationResult;
  /** An updated shipping method instance. */
  shippingMethod: ShippingMethod;
  /** Creates/updates translations for an attribute. */
  translateAttribute: AttributeMutationResult;
  /** Creates/updates translations for a category. */
  translateCategory: CategoryMutationResult;
  /** Creates/updates translations for a collection. */
  translateCollection: CollectionMutationResult;
  /** Creates/updates translations for a menu item. */
  translateMenuItem: MenuItemMutationResult;
  /** Creates/updates translations for a page. */
  translatePage: PageMutationResult;
  /** Creates/updates translations for a product. */
  translateProduct: ProductMutationResult;
  /** Creates/updates translations for a product variant. */
  translateProductVariant: ProductMutationResult;
  /** Creates/updates translations for a sale. */
  translateSale: SaleMutationResult;
  /** Creates/updates translations for a shipping method. */
  translateShippingPrice: ShippingMethodMutationResult;
  /** Creates/updates translations for shop settings. */
  translateShopSettings: SiteTranslationMutationResult;
  /** Creates/updates translations for an attribute value. */
  translateValue: ValueMutationResult;
  /** Creates/updates translations for a voucher. */
  translateVoucher: VoucherMutationResult;
  /** Trigger sending a notification with the notify plugin method. Serializes nodes provided as ids parameter and includes this data in the notification payload. */
  triggerExternalNotification: ExternalNotificationTriggerMutationResult;
  /** Unassign attributes from a given page type. */
  unassignPageAttribute: PageKlassMutationResult;
  /** Un-assign attributes from a given product type. */
  unassignProductAttribute: ProductKlassMutationResult;
  /** Unassign an media from a product variant. */
  unassignProductMedia: ProductMediaUnassignmentMutationResult;
  unassignWarehouseShippingZone: WarehouseShippingZoneUnassignmentMutationResult;
  /** Updates an address. */
  updateAddress: AddressMutationResult;
  /** Updates an existing app. */
  updateApp: AppMutationResult;
  /** Updates attribute. */
  updateAttribute: AttributeMutationResult;
  /** Updates a category. */
  updateCategory: CategoryMutationResult;
  /** Update a channel. */
  updateChannel: ChannelMutationResult;
  /** Update billing address in the existing checkout. */
  updateCheckoutBillingAddress: CheckoutMutationResult;
  /** Updates email address in the existing checkout object. */
  updateCheckoutContactInfo: CheckoutMutationResult;
  /** Updates the delivery method (shipping method or pick up point) of the checkout. */
  updateCheckoutFulfillmentMethod: CheckoutMutationResult;
  /** Update language code in the existing checkout. */
  updateCheckoutLanguageCode: CheckoutMutationResult;
  /** Updates checkout line in the existing checkout. */
  updateCheckoutLines: CheckoutMutationResult;
  /** Update shipping address in the existing checkout. */
  updateCheckoutShippingAddress: CheckoutMutationResult;
  /** Updates the shipping method of the checkout. */
  updateCheckoutShippingMethod: CheckoutMutationResult;
  /** Updates a collection. */
  updateCollection: CollectionMutationResult;
  /** Manage collection's availability in channels. */
  updateCollectionChannelListing: CollectionChannelListingMutationResult;
  /** Update digital content. */
  updateDigitalContent: DigitalContentMutationResult;
  /** Updates a draft order. */
  updateDraftOrder: OrderMutationResult;
  /** Updates a fulfillment for an order. */
  updateFulfillmentTracking: OrderFulfillmentMutationResult;
  /** Update a gift card. */
  updateGiftCard: GiftCardMutationResult;
  /** Update gift card settings. */
  updateGiftCardSettings: GiftCardSettingsMutationResult;
  /** Update permission group. Apps are not allowed to perform this mutation. */
  updateGroup: GroupMutationResult;
  /** Updates an invoice. */
  updateInvoice: InvoiceMutationResult;
  /** Updates an existing media. */
  updateMedia: MediaItemMutationResult;
  /** Updates a menu. */
  updateMenu: MenuMutationResult;
  /** Updates a menu item. */
  updateMenuItem: MenuItemMutationResult;
  updateMetadata: ObjectWithMetadataMutationResult;
  /** Updates an order. */
  updateOrder: OrderMutationResult;
  /** Update discount for the order. */
  updateOrderDiscount: OrderMutationResult;
  /** Updates an order line of an order. */
  updateOrderLine: OrderLineMutationResult;
  /** Update discount for the order line. */
  updateOrderLineDiscount: OrderLineMutationResult;
  /** Update shop order settings. */
  updateOrderSettings: OrderSettingsMutationResult;
  updateOrderShipping: OrderMutationResult;
  /** Updates an existing page. */
  updatePage: PageMutationResult;
  /** Update page type. */
  updatePageKlass: PageKlassMutationResult;
  /** Update plugin configuration. */
  updatePlugin: PluginMutationResult;
  /** Updates private metadata of an object. To use it, you need to be an authenticated staff user or an app and have access to the modified object. */
  updatePrivateMetadata: ObjectWithMetadataMutationResult;
  /** Updates an existing product. */
  updateProduct: ProductMutationResult;
  /** Update attributes assigned to product variant for given product type. */
  updateProductAttributeAssignment: ProductKlassMutationResult;
  /** Manage product variant prices in channels. */
  updateProductChannelListing: ProductMutationResult;
  /** Updates an existing product type. */
  updateProductKlass: ProductKlassMutationResult;
  /** Updates a product media. */
  updateProductMedia: ProductMediaMutationResult;
  /** Update stocks for product variant. */
  updateProductStocks: ProductMutationResult;
  /** Updates an existing variant for product. */
  updateProductVariant: ProductMutationResult;
  /** Updates a sale. */
  updateSale: SaleMutationResult;
  /** Manage sale's availability in channels. */
  updateSaleChannelListing: SaleMutationResult;
  /** Manage shipping method's availability in channels. */
  updateShippingMethodChannelListing: ShippingMethodChannelListingMutationResult;
  /** Updates a new shipping price. */
  updateShippingPrice: ShippingPriceMutationResult;
  /** Updates a new shipping zone. */
  updateShippingZone: ShippingZoneMutationResult;
  /** Update the shop's address. If the `null` value is passed, the currently selected address will be deleted. */
  updateShopAddress: SiteMutationResult;
  /** Updates site domain of the shop. */
  updateShopDomain: SiteMutationResult;
  /** Updates shop settings. */
  updateShopSettings: SiteMutationResult;
  /** Updates an existing staff user. Apps are not allowed to perform this mutation. */
  updateStaffMember: UserMutationResult;
  /** Updates a staff notification recipient. */
  updateStaffNotificationRecipient: StaffNotificationRecipientMutationResult;
  /** Update a tax class. */
  updateTaxClass: TaxClassMutationResult;
  /** Update tax configuration for a channel. */
  updateTaxConfiguration: TaxConfigurationMutationResult;
  /** Update tax class rates for a specific country. */
  updateTaxCountryConfiguration: TaxCountryConfigurationMutationResult;
  /** Create transaction for checkout or order. */
  updateTransaction: TransactionItemMutationResult;
  updateUser: UserMutationResult;
  updateUserAvatar: UserMutationResult;
  /** Updates value of an attribute. */
  updateValue: AttributeMutationResult;
  /** Updates a voucher. */
  updateVoucher: VoucherMutationResult;
  /** Manage voucher's availability in channels. */
  updateVoucherChannelListing: VoucherMutationResult;
  updateWarehouse: WarehouseMutationResult;
  /** Updates a webhook subscription. */
  updateWebhook: WebhookMutationResult;
  /** Upload a file. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec */
  uploadFile: FileMutationResult;
  /** Verify provided app token. */
  verifyAppToken: BoolMutationResult;
  /** Verify JWT token and return user data. */
  verifyToken: TokenVerificationMutationResult;
  /** Void an order. */
  voidOrder: OrderMutationResult;
  /** Voids the authorized payment. */
  voidPayment: PaymentMutationResult;
};


export type MutationActivateAppArgs = {
  id: Scalars['ID']['input'];
};


export type MutationActivateChannelArgs = {
  id: Scalars['ID']['input'];
};


export type MutationActivateGiftCardArgs = {
  id: Scalars['ID']['input'];
};


export type MutationActivateGiftCardsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationAddAddressArgs = {
  data: AddressUpdateInput;
  type?: InputMaybe<AddressType>;
  userId?: InputMaybe<Scalars['ID']['input']>;
};


export type MutationAddCataloguesToSaleArgs = {
  data: CatalogueInput;
  id: Scalars['ID']['input'];
};


export type MutationAddCataloguesToVoucherArgs = {
  data: CatalogueInput;
  id: Scalars['ID']['input'];
};


export type MutationAddCheckoutLinesArgs = {
  id: Scalars['ID']['input'];
  lines: Array<CheckoutLineInput>;
};


export type MutationAddDiscountToOrderArgs = {
  data: OrderDiscountCommonInput;
  orderId: Scalars['ID']['input'];
};


export type MutationAddNoteToGiftCardArgs = {
  data: GiftCardAddNoteInput;
  id: Scalars['ID']['input'];
};


export type MutationAddNoteToOrderArgs = {
  data: OrderAddNoteInput;
  id: Scalars['ID']['input'];
};


export type MutationAddPointsOfContactToCheckoutArgs = {
  id: Scalars['ID']['input'];
  pointsOfContact: Array<CheckoutPointOfContactInput>;
};


export type MutationAddProductsToCollectionArgs = {
  collectionId: Scalars['ID']['input'];
  products: Array<Scalars['ID']['input']>;
};


export type MutationAddPromoCodeToCheckoutArgs = {
  id: Scalars['ID']['input'];
  promoCode: Scalars['String']['input'];
};


export type MutationApproveFulfillmentArgs = {
  allowStockToBeExceeded?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  notifyCustomer: Scalars['Boolean']['input'];
};


export type MutationAssignNavigationArgs = {
  menu: Scalars['ID']['input'];
  navigationType: NavigationType;
};


export type MutationAssignPageAttributeArgs = {
  attributeIds: Array<Scalars['ID']['input']>;
  pageKlassId: Scalars['ID']['input'];
};


export type MutationAssignProductAttributeArgs = {
  klassId: Scalars['ID']['input'];
  operations: Array<ProductAttributeAssignInput>;
};


export type MutationAssignProductMediaArgs = {
  mediaItemId: Scalars['ID']['input'];
  productId: Scalars['ID']['input'];
};


export type MutationAssignWarehouseShippingZoneArgs = {
  id: Scalars['ID']['input'];
  shippingZoneIds: Array<Scalars['ID']['input']>;
};


export type MutationAttachCustomerToCheckoutArgs = {
  customerId?: InputMaybe<Scalars['ID']['input']>;
  id: Scalars['ID']['input'];
};


export type MutationCancelFulfillmentArgs = {
  data?: InputMaybe<FulfillmentCancelInput>;
  id: Scalars['ID']['input'];
};


export type MutationCancelOrderArgs = {
  id: Scalars['ID']['input'];
};


export type MutationCancelOrdersArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationCaptureOrderArgs = {
  amount: Scalars['PositiveDecimal']['input'];
  id: Scalars['ID']['input'];
};


export type MutationCapturePaymentArgs = {
  amount: Scalars['PositiveDecimal']['input'];
  paymentId: Scalars['ID']['input'];
};


export type MutationChangePasswordArgs = {
  newPassword: Scalars['String']['input'];
  oldPassword: Scalars['String']['input'];
};


export type MutationCheckPaymentBalanceArgs = {
  data: PaymentCheckBalanceInput;
};


export type MutationCompleteCheckoutArgs = {
  id: Scalars['ID']['input'];
  metadata?: InputMaybe<Array<MetadataInput>>;
  paymentData?: InputMaybe<Scalars['JSONString']['input']>;
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
};


export type MutationCompleteOrderDraftArgs = {
  id: Scalars['ID']['input'];
};


export type MutationConfirmAccountArgs = {
  email: Scalars['String']['input'];
  token: Scalars['String']['input'];
};


export type MutationConfirmEmailChangeArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  token: Scalars['String']['input'];
};


export type MutationConfirmOrderArgs = {
  id: Scalars['ID']['input'];
};


export type MutationCreateAppArgs = {
  data: AppInput;
};


export type MutationCreateAppTokenArgs = {
  data: AppTokenInput;
};


export type MutationCreateAttributeArgs = {
  data: AttributeCreationInput;
};


export type MutationCreateCategoryArgs = {
  data: CategoryInput;
  parentId?: InputMaybe<Scalars['ID']['input']>;
};


export type MutationCreateChannelArgs = {
  data: ChannelCreationInput;
};


export type MutationCreateCheckoutArgs = {
  data: CheckoutCreationInput;
};


export type MutationCreateCheckoutPaymentArgs = {
  data: PaymentInput;
  id: Scalars['ID']['input'];
};


export type MutationCreateCollectionArgs = {
  data: CollectionCreationInput;
};


export type MutationCreateCustomerArgs = {
  data: Usercreationinput;
};


export type MutationCreateDigitalContentArgs = {
  data: DigitalContentUploadInput;
  productId: Scalars['ID']['input'];
};


export type MutationCreateDigitalContentUrlArgs = {
  data: DigitalContentUrlCreationInput;
};


export type MutationCreateDraftOrderArgs = {
  data: DraftOrderCreationInput;
};


export type MutationCreateGiftCardArgs = {
  data: GiftCardCreationInput;
};


export type MutationCreateGiftCardsArgs = {
  data: GiftCardBulkCreationInput;
};


export type MutationCreateGroupArgs = {
  data: GroupCreationInput;
};


export type MutationCreateInvoiceArgs = {
  data: InvoiceCreationInput;
  orderId: Scalars['ID']['input'];
};


export type MutationCreateMediaArgs = {
  data: MediaCreationInput;
};


export type MutationCreateMenuArgs = {
  data: MenuCreationInput;
};


export type MutationCreateMenuItemArgs = {
  data: MenuItemCreationInput;
};


export type MutationCreateOrderFromCheckoutArgs = {
  id: Scalars['ID']['input'];
  metadata?: InputMaybe<Array<MetadataInput>>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
};


export type MutationCreateOrderLinesArgs = {
  data: Array<OrderLineCreationInput>;
  id: Scalars['ID']['input'];
};


export type MutationCreatePageArgs = {
  data: PageCreationInput;
};


export type MutationCreatePageKlassArgs = {
  data: PageKlassCreationInput;
};


export type MutationCreateProductArgs = {
  data: ProductCreationInput;
};


export type MutationCreateProductKlassArgs = {
  data: ProductKlassInput;
};


export type MutationCreateProductMediaItemArgs = {
  data: ProductMediaCreationInput;
};


export type MutationCreateProductStocksArgs = {
  productId: Scalars['ID']['input'];
  stocks: Array<StockInput>;
};


export type MutationCreateProductVariantArgs = {
  data: ProductCreationInput;
};


export type MutationCreateProductsArgs = {
  productId: Scalars['ID']['input'];
  variants: Array<ProductBulkCreationInput>;
};


export type MutationCreateSaleArgs = {
  data: SaleInput;
};


export type MutationCreateShippingPriceArgs = {
  data: ShippingPriceInput;
};


export type MutationCreateShippingZoneArgs = {
  data: ShippingZoneCreationInput;
};


export type MutationCreateStaffMemberArgs = {
  data: StaffCreationInput;
};


export type MutationCreateStaffNotificationRecipientArgs = {
  data: StaffNotificationRecipientInput;
};


export type MutationCreateTaxClassArgs = {
  data: TaxClassCreationInput;
};


export type MutationCreateTransactionArgs = {
  id: Scalars['ID']['input'];
  transaction: TransactionCreationInput;
  transactionEvent?: InputMaybe<TransactionEventInput>;
};


export type MutationCreateUserArgs = {
  data: UserCreationInput;
};


export type MutationCreateValueArgs = {
  attributeId: Scalars['ID']['input'];
  data: ValueCreationInput;
};


export type MutationCreateVoucherArgs = {
  data: VoucherInput;
};


export type MutationCreateWarehouseArgs = {
  data: WarehouseCreationInput;
};


export type MutationCreateWebhookArgs = {
  data: WebhookCreationInput;
};


export type MutationDeactivateAppArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeactivateChannelArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeactivateGiftCardArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeactivateGiftCardsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeactivateProductPreorderArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteAccountArgs = {
  token: Scalars['String']['input'];
};


export type MutationDeleteAddressArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteAppArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteAppTokenArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteAttributeArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteAttributesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteCategoriesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteCategoryArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteChannelArgs = {
  data?: InputMaybe<ChannelDeleteInput>;
  id: Scalars['ID']['input'];
};


export type MutationDeleteCheckoutLineArgs = {
  id: Scalars['ID']['input'];
  lineId: Scalars['ID']['input'];
};


export type MutationDeleteCheckoutLinesArgs = {
  id: Scalars['ID']['input'];
  linesIds: Array<Scalars['ID']['input']>;
};


export type MutationDeleteCollectionArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteCollectionsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteCustomerArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteCustomersArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteFailedInstallationArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteGiftCardArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteGiftCardsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteGroupArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteInvoiceArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteMediaItemArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteMediaItemsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteMenuArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteMenuItemArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteMenuItemsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteMenusArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteMetadataArgs = {
  id: Scalars['ID']['input'];
  keys: Array<Scalars['String']['input']>;
};


export type MutationDeleteOrderDiscountArgs = {
  discountId: Scalars['ID']['input'];
};


export type MutationDeleteOrderDraftArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteOrderDraftsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteOrderLineArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeletePageArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeletePageKlassArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeletePageKlassesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeletePagesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeletePrivateMetadataArgs = {
  id: Scalars['ID']['input'];
  keys: Array<Scalars['String']['input']>;
};


export type MutationDeleteProductArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteProductKlassArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteProductKlassesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteProductMediaItemArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteProductMediaItemsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteProductStocksArgs = {
  productId?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  warehouseIds: Array<Scalars['ID']['input']>;
};


export type MutationDeleteProductVariantArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};


export type MutationDeleteProductVariantsArgs = {
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  skus?: InputMaybe<Array<Scalars['String']['input']>>;
};


export type MutationDeleteProductsArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteSaleArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteSalesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteShippingPriceArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteShippingPricesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteShippingZoneArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteShippingZonesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteStaffMemberArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteStaffMembersArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteStaffNotificationRecipientArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteTaxClassArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteTaxCountryConfigurationArgs = {
  countryCode: CountryCode;
};


export type MutationDeleteValueArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteValuesArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteVoucherArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteVouchersArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type MutationDeleteWarehouseArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDeleteWebhookArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDetachCustomerFromCheckoutArgs = {
  id: Scalars['ID']['input'];
};


export type MutationExcludeProductsFromShippingPriceArgs = {
  data: ShippingPriceExcludeProductsInput;
  id: Scalars['ID']['input'];
};


export type MutationExportGiftCardsArgs = {
  data: ExportGiftCardsInput;
};


export type MutationExportProductsArgs = {
  data: ExportProductsInput;
};


export type MutationExternalAuthenticationUrlArgs = {
  pluginInput: AuthPluginInput;
};


export type MutationFetchAppManifestArgs = {
  manifestUrl: Scalars['String']['input'];
};


export type MutationFulfillOrderArgs = {
  data: OrderFulfillInput;
  order: Scalars['ID']['input'];
};


export type MutationInitializePaymentArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  gateway: Scalars['String']['input'];
  paymentData?: InputMaybe<Scalars['JSONString']['input']>;
};


export type MutationInstallAppArgs = {
  data: AppInstallInput;
};


export type MutationLogoutArgs = {
  pluginInput?: InputMaybe<AuthPluginInput>;
};


export type MutationManageTaxExemptionArgs = {
  id: Scalars['ID']['input'];
  taxExemption: Scalars['Boolean']['input'];
};


export type MutationMarkOrderAsPaidArgs = {
  id: Scalars['ID']['input'];
  transactionReference?: InputMaybe<Scalars['String']['input']>;
};


export type MutationMoveMenuItemArgs = {
  menuId: Scalars['ID']['input'];
  moves: Array<MenuItemMoveInput>;
};


export type MutationObtainTokenArgs = {
  audience?: InputMaybe<Scalars['String']['input']>;
  authInput?: InputMaybe<AuthInput>;
  pluginInput?: InputMaybe<AuthPluginInput>;
};


export type MutationPublishMediaItemsArgs = {
  ids: Array<Scalars['ID']['input']>;
  isPublished: Scalars['Boolean']['input'];
};


export type MutationPublishPagesArgs = {
  ids: Array<Scalars['ID']['input']>;
  isPublished: Scalars['Boolean']['input'];
};


export type MutationRefreshTokenArgs = {
  csrfToken?: InputMaybe<Scalars['String']['input']>;
  pluginInput?: InputMaybe<AuthPluginInput>;
  refreshToken?: InputMaybe<Scalars['String']['input']>;
};


export type MutationRefundFulfilledProductsArgs = {
  data: OrderRefundProductsInput;
  order: Scalars['ID']['input'];
};


export type MutationRefundOrderArgs = {
  amount: Scalars['PositiveDecimal']['input'];
  id: Scalars['ID']['input'];
};


export type MutationRefundPaymentArgs = {
  amount: Scalars['PositiveDecimal']['input'];
  paymentId: Scalars['ID']['input'];
};


export type MutationRemoveCataloguesFromSaleArgs = {
  data: CatalogueInput;
  id: Scalars['ID']['input'];
};


export type MutationRemoveCataloguesFromVoucherArgs = {
  data: CatalogueInput;
  id: Scalars['ID']['input'];
};


export type MutationRemoveOrderLineDiscountArgs = {
  orderLineId: Scalars['ID']['input'];
};


export type MutationRemoveProductFromShippingPriceExclusionListArgs = {
  id: Scalars['ID']['input'];
  products: Array<Scalars['ID']['input']>;
};


export type MutationRemoveProductsFromCollectionArgs = {
  collectionId: Scalars['ID']['input'];
  products: Array<Scalars['ID']['input']>;
};


export type MutationRemovePromoCodeFromCheckoutArgs = {
  id: Scalars['ID']['input'];
  promoCode?: InputMaybe<Scalars['String']['input']>;
  promoCodeId?: InputMaybe<Scalars['ID']['input']>;
};


export type MutationReorderChannelWarehousesArgs = {
  channelId: Scalars['ID']['input'];
  moves: Array<ReorderInput>;
};


export type MutationReorderCollectionProductsArgs = {
  collectionId: Scalars['ID']['input'];
  moves: Array<MoveProductInput>;
};


export type MutationReorderPageKlassAttributesArgs = {
  moves: Array<ReorderInput>;
  pageKlassId: Scalars['ID']['input'];
};


export type MutationReorderPageValuesArgs = {
  attributeId: Scalars['ID']['input'];
  moves: Array<ReorderInput>;
  pageId: Scalars['ID']['input'];
};


export type MutationReorderProductKlassAttributesArgs = {
  klassId: Scalars['ID']['input'];
  moves: Array<ReorderInput>;
  type: ProductAttributeType;
};


export type MutationReorderProductMediaArgs = {
  mediaItemIds: Array<Scalars['ID']['input']>;
  productId: Scalars['ID']['input'];
};


export type MutationReorderProductValuesArgs = {
  attributeId: Scalars['ID']['input'];
  moves: Array<ReorderInput>;
  productId: Scalars['ID']['input'];
};


export type MutationReorderProductVariantsArgs = {
  moves: Array<ReorderInput>;
  productId: Scalars['ID']['input'];
};


export type MutationReorderValuesArgs = {
  attributeId: Scalars['ID']['input'];
  moves: Array<ReorderInput>;
};


export type MutationRequestAccountDeletionArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type MutationRequestEmailChangeArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  newEmail: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationRequestInvoiceArgs = {
  number?: InputMaybe<Scalars['String']['input']>;
  orderId: Scalars['ID']['input'];
};


export type MutationRequestInvoiceDeletionArgs = {
  id: Scalars['ID']['input'];
};


export type MutationRequestPasswordResetArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
};


export type MutationRequestTransactionActionArgs = {
  actionType: TransactionActionType;
  amount: Scalars['PositiveDecimal']['input'];
  id: Scalars['ID']['input'];
};


export type MutationResendGiftCardArgs = {
  data: GiftCardResendInput;
};


export type MutationRetryAppInstallationArgs = {
  activateAfterInstallation?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
};


export type MutationRetryEventDeliveryArgs = {
  id: Scalars['ID']['input'];
};


export type MutationReturnFulfilledProductsArgs = {
  data: OrderReturnProductsInput;
  order: Scalars['ID']['input'];
};


export type MutationSendInvoiceNotificationArgs = {
  id: Scalars['ID']['input'];
};


export type MutationSetDefaultAddressArgs = {
  addressId: Scalars['ID']['input'];
  type: AddressType;
  userId?: InputMaybe<Scalars['ID']['input']>;
};


export type MutationSetDefaultVariantArgs = {
  productId: Scalars['ID']['input'];
  variantId: Scalars['ID']['input'];
};


export type MutationSetPasswordArgs = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
  token: Scalars['String']['input'];
};


export type MutationSetUsersActiveArgs = {
  ids: Array<Scalars['ID']['input']>;
  isActive: Scalars['Boolean']['input'];
};


export type MutationTranslateAttributeArgs = {
  data: NameTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateCategoryArgs = {
  data: TranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateCollectionArgs = {
  data: TranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateMenuItemArgs = {
  data: NameTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslatePageArgs = {
  data: PageTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateProductArgs = {
  data: TranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateProductVariantArgs = {
  data: NameTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateSaleArgs = {
  data: NameTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateShippingPriceArgs = {
  data: ShippingPriceTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateShopSettingsArgs = {
  data: SiteTranslationInput;
  languageCode?: InputMaybe<LanguageCode>;
};


export type MutationTranslateValueArgs = {
  data: ValueTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTranslateVoucherArgs = {
  data: NameTranslationInput;
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationTriggerExternalNotificationArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  data: ExternalNotificationTriggerInput;
  pluginId: Scalars['String']['input'];
};


export type MutationUnassignPageAttributeArgs = {
  attributeIds: Array<Scalars['ID']['input']>;
  pageKlassId: Scalars['ID']['input'];
};


export type MutationUnassignProductAttributeArgs = {
  attributeIds: Array<Scalars['ID']['input']>;
  klassId: Scalars['ID']['input'];
};


export type MutationUnassignProductMediaArgs = {
  mediaItemId: Scalars['ID']['input'];
  productId: Scalars['ID']['input'];
};


export type MutationUnassignWarehouseShippingZoneArgs = {
  id: Scalars['ID']['input'];
  shippingZoneIds: Array<Scalars['ID']['input']>;
};


export type MutationUpdateAddressArgs = {
  data: AddressUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateAppArgs = {
  data: AppInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateAttributeArgs = {
  data: AttributeUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateCategoryArgs = {
  data: CategoryInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateChannelArgs = {
  data: ChannelUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateCheckoutBillingAddressArgs = {
  data: AddressUpdateInput;
  id: Scalars['ID']['input'];
  validationRules?: InputMaybe<CheckoutAddressValidationRules>;
};


export type MutationUpdateCheckoutContactInfoArgs = {
  data: CheckoutContactInfoUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateCheckoutFulfillmentMethodArgs = {
  fulfillmentDeadline?: InputMaybe<Scalars['DateTime']['input']>;
  fulfillmentMethodId: Scalars['ID']['input'];
  id: Scalars['ID']['input'];
};


export type MutationUpdateCheckoutLanguageCodeArgs = {
  id: Scalars['ID']['input'];
  languageCode: LanguageCode;
};


export type MutationUpdateCheckoutLinesArgs = {
  id: Scalars['ID']['input'];
  lines: Array<CheckoutLineUpdateInput>;
};


export type MutationUpdateCheckoutShippingAddressArgs = {
  data: AddressUpdateInput;
  id: Scalars['ID']['input'];
  validationRules?: InputMaybe<CheckoutAddressValidationRules>;
};


export type MutationUpdateCheckoutShippingMethodArgs = {
  id: Scalars['ID']['input'];
  shippingMethodId: Scalars['ID']['input'];
};


export type MutationUpdateCollectionArgs = {
  data: CollectionInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateCollectionChannelListingArgs = {
  data: CollectionChannelListingUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateDigitalContentArgs = {
  data: DigitalContentInput;
  productId: Scalars['ID']['input'];
};


export type MutationUpdateDraftOrderArgs = {
  data: DraftOrderInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateFulfillmentTrackingArgs = {
  data: FulfillmentUpdateTrackingInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateGiftCardArgs = {
  data: GiftCardUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateGiftCardSettingsArgs = {
  data: GiftCardSettingsUpdateInput;
};


export type MutationUpdateGroupArgs = {
  data: GroupUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateInvoiceArgs = {
  data: UpdateInvoiceInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateMediaArgs = {
  data: MediaInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateMenuArgs = {
  data: MenuInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateMenuItemArgs = {
  data: MenuItemInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateMetadataArgs = {
  data: Array<MetadataInput>;
  id: Scalars['ID']['input'];
};


export type MutationUpdateOrderArgs = {
  data: OrderUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateOrderDiscountArgs = {
  data: OrderDiscountCommonInput;
  discountId: Scalars['ID']['input'];
};


export type MutationUpdateOrderLineArgs = {
  data: OrderLineInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateOrderLineDiscountArgs = {
  data: OrderDiscountCommonInput;
  orderLineId: Scalars['ID']['input'];
};


export type MutationUpdateOrderSettingsArgs = {
  data: OrderSettingsUpdateInput;
};


export type MutationUpdateOrderShippingArgs = {
  data: OrderUpdateShippingInput;
  orderId: Scalars['ID']['input'];
};


export type MutationUpdatePageArgs = {
  data: PageInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdatePageKlassArgs = {
  data: PageKlassUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdatePluginArgs = {
  channelId?: InputMaybe<Scalars['ID']['input']>;
  data: PluginUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdatePrivateMetadataArgs = {
  data: Array<MetadataInput>;
  id: Scalars['ID']['input'];
};


export type MutationUpdateProductArgs = {
  data: ProductInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateProductAttributeAssignmentArgs = {
  klassId: Scalars['ID']['input'];
  operations: Array<ProductAttributeAssignmentUpdateInput>;
};


export type MutationUpdateProductChannelListingArgs = {
  data?: InputMaybe<Array<ProductChannelListingAddInput>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateProductKlassArgs = {
  data: ProductKlassInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateProductMediaArgs = {
  data: ProductMediaUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateProductStocksArgs = {
  productId?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stocks: Array<StockInput>;
};


export type MutationUpdateProductVariantArgs = {
  data: ProductInput;
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateSaleArgs = {
  data: SaleInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateSaleChannelListingArgs = {
  data: SaleChannelListingInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateShippingMethodChannelListingArgs = {
  data: ShippingMethodChannelListingInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateShippingPriceArgs = {
  data: ShippingPriceInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateShippingZoneArgs = {
  data: ShippingZoneUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateShopAddressArgs = {
  data: AddressUpdateInput;
};


export type MutationUpdateShopDomainArgs = {
  data: SiteDomainInput;
};


export type MutationUpdateShopSettingsArgs = {
  data: ShopSettingsUpdateInput;
};


export type MutationUpdateStaffMemberArgs = {
  data: StaffUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateStaffNotificationRecipientArgs = {
  data: StaffNotificationRecipientInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateTaxClassArgs = {
  data: TaxClassUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateTaxConfigurationArgs = {
  data: TaxConfigurationUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateTaxCountryConfigurationArgs = {
  countryCode: CountryCode;
  updateTaxClassRates: Array<TaxClassRateInput>;
};


export type MutationUpdateTransactionArgs = {
  id: Scalars['ID']['input'];
  transaction: TransactionUpdateInput;
  transactionEvent?: InputMaybe<TransactionEventInput>;
};


export type MutationUpdateUserArgs = {
  data: UserUpdateInput;
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type MutationUpdateUserAvatarArgs = {
  image: Scalars['Upload']['input'];
};


export type MutationUpdateValueArgs = {
  data: ValueUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateVoucherArgs = {
  data: VoucherInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateVoucherChannelListingArgs = {
  data: VoucherChannelListingInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateWarehouseArgs = {
  data: WarehouseUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUpdateWebhookArgs = {
  data: WebhookUpdateInput;
  id: Scalars['ID']['input'];
};


export type MutationUploadFileArgs = {
  file: Scalars['Upload']['input'];
};


export type MutationVerifyAppTokenArgs = {
  token: Scalars['String']['input'];
};


export type MutationVerifyTokenArgs = {
  pluginInput?: InputMaybe<AuthPluginInput>;
  token: Scalars['String']['input'];
};


export type MutationVoidOrderArgs = {
  id: Scalars['ID']['input'];
};


export type MutationVoidPaymentArgs = {
  paymentId: Scalars['ID']['input'];
};

export type NameTranslationInput = {
  name: Scalars['String']['input'];
};

export type NavigationType =
  | 'MAIN'
  | 'SECONDARY';

/** An object with a Globally Unique ID */
export type Node = {
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
};

export type ObjectWithMetadata = {
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
};


export type ObjectWithMetadataMetafieldArgs = {
  key: Scalars['String']['input'];
};


export type ObjectWithMetadataMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


export type ObjectWithMetadataPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


export type ObjectWithMetadataPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type ObjectWithMetadataMutationResult = BaseMutationResult & {
  __typename: 'ObjectWithMetadataMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: ObjectWithMetadata;
};

/** An order in the shop. */
export type Order = AbstractOrder & Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Order';
  /** List of actions that can be performed in the current state of an order. */
  actions: Array<OrderAction>;
  /** The authorize status of the order. */
  authorizeStatus: OrderAuthorizeStatus;
  /** Collection points that can be used for this order. */
  availableCollectionPoints: Array<Warehouse>;
  /**
   * Shipping methods that can be used with this order.
   * @deprecated Use `shippingMethods`, this field will be removed in 4.0
   */
  availableShippingMethods?: Maybe<Array<ShippingMethod>>;
  billingAddress?: Maybe<Address>;
  /** Informs whether a draft order can be finalized (turned into a regular order). */
  canFinalize: Scalars['Boolean']['output'];
  channel: Channel;
  /** The charge status of the order. */
  chargeStatus: OrderChargeStatus;
  collectionPointName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  /** Email of a customer. */
  customerEmail?: Maybe<Scalars['String']['output']>;
  customerFirstName?: Maybe<Scalars['String']['output']>;
  customerLastName?: Maybe<Scalars['String']['output']>;
  customerNote: Scalars['String']['output'];
  /** Phone number of a customer. */
  customerPhone?: Maybe<Scalars['String']['output']>;
  discount?: Maybe<Money>;
  discountName: Scalars['String']['output'];
  /** List of all discounts assigned to the order. */
  discounts: Array<OrderDiscount>;
  /** Determines whether checkout prices should include taxes when displayed in a storefront. */
  displayGrossPrices: Scalars['Boolean']['output'];
  /** List of errors that occurred during order validation. */
  errors: Array<OrderError>;
  /** List of events associated with the order. */
  events: Array<OrderEvent>;
  /** The date and time when fulfillment of the order must be completed. */
  fulfillmentDeadline?: Maybe<Scalars['DateTime']['output']>;
  /** The delivery method selected for this checkout. */
  fulfillmentMethod?: Maybe<FulfillmentMethod>;
  fulfillmentMethodType?: Maybe<FulfillmentMethodType>;
  /** List of shipments for the order. */
  fulfillments: Array<Fulfillment>;
  giftCards: Array<GiftCard>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** List of order invoices. Can be fetched for orders created in Tempo 3.2 and later, for other orders requires one of the following permissions: MANAGE_ORDERS, OWNER. */
  invoices: Array<Invoice>;
  /** Informs if an order is fully paid. */
  isPaid: Scalars['Boolean']['output'];
  isShippingRequired: Scalars['Boolean']['output'];
  /** Order language code. */
  languageCode: LanguageCode;
  /** List of order lines. */
  lines: Array<OrderLine>;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  note: Scalars['String']['output'];
  number: Scalars['String']['output'];
  /** The order origin. */
  origin: OrderOrigin;
  /** The ID of the order that was the base for this order. */
  original: Scalars['ID']['output'];
  paymentStatus: ChargeStatus;
  paymentStatusDisplay: Scalars['String']['output'];
  payments: Array<Payment>;
  pk: Scalars['String']['output'];
  /** List of points of contact for order fulfillment. */
  pointsOfContact: Array<PointOfContact>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  redirectUrl: Scalars['String']['output'];
  shippingAddress?: Maybe<Address>;
  shippingMethod?: Maybe<ShippingMethod>;
  shippingMethodName: Scalars['String']['output'];
  /** Shipping methods related to this order. */
  shippingMethods: Array<ShippingMethod>;
  /** Total price of shipping. */
  shippingPrice: TaxedMoney;
  /** Denormalized tax class assigned to the shipping method. */
  shippingTaxClass?: Maybe<TaxClass>;
  /** Denormalized public metadata of the shipping method's tax class. */
  shippingTaxClassMetadata: Array<MetadataItem>;
  /** Denormalized name of the tax class assigned to the shipping method. */
  shippingTaxClassName?: Maybe<Scalars['String']['output']>;
  /** Denormalized private metadata of the shipping method's tax class. Requires staff permissions to access. */
  shippingTaxClassPrivateMetadata: Array<MetadataItem>;
  /** The shipping tax rate value. */
  shippingTaxRate: Scalars['Float']['output'];
  status: OrderStatus;
  statusDisplay: Scalars['String']['output'];
  /** The sum of line prices not including shipping. */
  subtotal: TaxedMoney;
  /** Returns True if order has to be exempt from taxes. */
  taxExemption: Scalars['Boolean']['output'];
  /** Total amount of the order. */
  total: TaxedMoney;
  /** Amount authorized for the order. */
  totalAuthorized: Money;
  /** The difference between the paid and the order total amount. */
  totalBalance: Money;
  /** Amount captured by payment. */
  totalCaptured: Money;
  trackingClientId: Scalars['String']['output'];
  /** List of transactions for the order. */
  transactions: Array<TransactionItem>;
  translatedDiscountName?: Maybe<Scalars['String']['output']>;
  /** Undiscounted total amount of the order. */
  undiscountedTotal: TaxedMoney;
  updatedAt: Scalars['DateTime']['output'];
  user?: Maybe<User>;
  userEmail?: Maybe<Scalars['String']['output']>;
  voucher?: Maybe<Voucher>;
  weight?: Maybe<Scalars['Weight']['output']>;
};


/** An order in the shop. */
export type OrderMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** An order in the shop. */
export type OrderMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** An order in the shop. */
export type OrderPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** An order in the shop. */
export type OrderPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type OrderAction =
  | 'CAPTURE'
  | 'MARK_AS_PAID'
  | 'REFUND'
  | 'VOID';

export type OrderAddNoteInput = {
  message: Scalars['String']['input'];
};

export type OrderAuthorizeStatus =
  | 'FULL'
  | 'NONE'
  | 'PARTIAL';

export type OrderBase = {
  /** The order the event relates to. */
  order: Order;
};

export type OrderBulkMutationResult = BaseMutationResult & {
  __typename: 'OrderBulkMutationResult';
  /** Returns how many objects were mutated. */
  count: Scalars['Int']['output'];
  errors?: Maybe<Array<ErrorInterface>>;
  objects: Array<Order>;
};

export type OrderCancelled = Event & OrderBase & {
  __typename: 'OrderCancelled';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type OrderChargeStatus =
  | 'FULL'
  | 'NONE'
  | 'OVERCHARGED'
  | 'PARTIAL';

export type OrderConfirmed = Event & OrderBase & {
  __typename: 'OrderConfirmed';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type OrderConnection = {
  __typename: 'OrderConnection';
  /** Contains the nodes in this connection */
  edges: Array<OrderEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Contains all details related to the applied discount to the order. */
export type OrderDiscount = Node & TempoNode & {
  __typename: 'OrderDiscount';
  amount: Money;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Explanation for the applied discount. */
  reason?: Maybe<Scalars['String']['output']>;
  translatedName: Scalars['String']['output'];
  type: OrderDiscountType;
  /** Value of the discount. Can store fixed value or percent value */
  value: Scalars['PositiveDecimal']['output'];
  /** Type of the discount: fixed or percent */
  valueType: DiscountValueType;
};

export type OrderDiscountCommonInput = {
  reason?: InputMaybe<Scalars['String']['input']>;
  value: Scalars['PositiveDecimal']['input'];
  valueType: DiscountValueType;
};

export type OrderDiscountType =
  | 'MANUAL'
  | 'VOUCHER';

/** An order in the shop. */
export type OrderDraftFilter = {
  AND?: InputMaybe<OrderDraftFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<OrderDraftFilter>;
  OR?: InputMaybe<OrderDraftFilter>;
  channels?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdAt?: InputMaybe<DateRangeInput>;
  customer?: InputMaybe<Scalars['String']['input']>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
};

/** An edge in a connection. */
export type OrderEdge = {
  __typename: 'OrderEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Order;
};

export type OrderError = ErrorInterface & {
  __typename: 'OrderError';
  /** A type of address that causes the error. */
  addressType?: Maybe<AddressType>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of order line IDs that cause the error. */
  orderLines?: Maybe<Array<Scalars['ID']['output']>>;
  /** List of product variants that are associated with the error */
  variants?: Maybe<Array<Scalars['ID']['output']>>;
  warehouse?: Maybe<Scalars['ID']['output']>;
};

export type OrderErrorCode =
  | 'BILLING_ADDRESS_NOT_SET'
  | 'CANNOT_CANCEL_FULFILLMENT'
  | 'CANNOT_CANCEL_ORDER'
  | 'CANNOT_DELETE'
  | 'CANNOT_DISCOUNT'
  | 'CANNOT_FULFILL_UNPAID_ORDER'
  | 'CANNOT_REFUND'
  | 'CAPTURE_INACTIVE_PAYMENT'
  | 'CHANNEL_INACTIVE'
  | 'DUPLICATED_INPUT_ITEM'
  | 'FULFILL_ORDER_LINE'
  | 'GIFT_CARD_LINE'
  | 'GRAPHQL_ERROR'
  | 'INSUFFICIENT_STOCK'
  | 'INVALID'
  | 'INVALID_QUANTITY'
  | 'MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK'
  | 'NOT_AVAILABLE_IN_CHANNEL'
  | 'NOT_EDITABLE'
  | 'NOT_FOUND'
  | 'ORDER_NO_SHIPPING_ADDRESS'
  | 'PAYMENT_ERROR'
  | 'PAYMENT_MISSING'
  | 'PRODUCT_NOT_PUBLISHED'
  | 'PRODUCT_UNAVAILABLE_FOR_PURCHASE'
  | 'REQUIRED'
  | 'SHIPPING_METHOD_NOT_APPLICABLE'
  | 'SHIPPING_METHOD_REQUIRED'
  | 'TAX_ERROR'
  | 'UNIQUE'
  | 'VOID_INACTIVE_PAYMENT'
  | 'ZERO_QUANTITY';

/**
 * Model used to store events that happened during the order lifecycle.
 *
 * Args:
 * ----
 *     parameters: Values needed to display the event on the storefront
 *     type: Type of an order
 */
export type OrderEvent = Node & TempoNode & {
  __typename: 'OrderEvent';
  /** Amount of money. */
  amount: Scalars['Float']['output'];
  /** App that performed the action. Requires of of the following permissions: MANAGE_APPS, MANAGE_ORDERS, OWNER. */
  app: App;
  /** Composed ID of the Fulfillment. */
  composedId: Scalars['String']['output'];
  /** Date when event happened at in ISO 8601 format. */
  date: Scalars['DateTime']['output'];
  /** The discount applied to the order. */
  discount: OrderDiscount;
  /** Email of the customer. */
  email: Scalars['String']['output'];
  /** Type of an email sent to the customer. */
  emailType: OrderEventEmailType;
  /** The lines fulfilled. */
  fulfilledItems: Array<FulfillmentLine>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Number of an invoice related to the order. */
  invoiceNumber: Scalars['String']['output'];
  lines: Array<OrderEventOrderLineObject>;
  /** Content of the event. */
  message: Scalars['String']['output'];
  /** User-friendly number of an order. */
  orderNumber: Scalars['String']['output'];
  /** List of oversold lines names. */
  oversoldItems: Array<Scalars['String']['output']>;
  /** The payment gateway of the payment. */
  paymentGateway: Scalars['String']['output'];
  /** The payment reference from the payment provider. */
  paymentId: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Number of items. */
  quantity: Scalars['Int']['output'];
  /** The reference of payment's transaction. */
  reference: Scalars['String']['output'];
  /** The order which is related to this order. */
  relatedOrder: Order;
  /** Define if shipping costs were included to the refund. */
  shippingCostsIncluded: Scalars['Boolean']['output'];
  /** The status of payment's transaction. */
  status: TransactionStatus;
  /** The transaction reference of captured payment. */
  transactionReference: Scalars['String']['output'];
  /** Order event type. */
  type: OrderEventType;
  /** User who performed the action. */
  user: User;
  /** The warehouse were items were restocked. */
  warehouse: Warehouse;
};

export type OrderEventConnection = {
  __typename: 'OrderEventConnection';
  /** Contains the nodes in this connection */
  edges: Array<OrderEventEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type OrderEventEdge = {
  __typename: 'OrderEventEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: OrderEvent;
};

export type OrderEventEmailType =
  | 'CONFIRMED'
  | 'DIGITAL_LINKS'
  | 'FULFILLMENT'
  | 'ORDER_CANCEL'
  | 'ORDER_CONFIRMATION'
  | 'ORDER_REFUND'
  | 'PAYMENT'
  | 'SHIPPING'
  | 'TRACKING_UPDATED';

export type OrderEventOrderLineObject = {
  __typename: 'OrderEventOrderLineObject';
  /** The discount applied to the order line. */
  discount: OrderDiscount;
  /** The variant name. */
  itemName: Scalars['String']['output'];
  /** The order line. */
  orderLine: OrderLine;
  /** The variant quantity. */
  quantity: Scalars['Int']['output'];
};

export type OrderEventType =
  | 'ADDED_PRODUCTS'
  | 'CANCELED'
  | 'CONFIRMED'
  | 'DRAFT_CREATED'
  | 'DRAFT_CREATED_FROM_REPLACE'
  | 'EMAIL_SENT'
  | 'EXTERNAL_SERVICE_NOTIFICATION'
  | 'FULFILLMENT_AWAITS_APPROVAL'
  | 'FULFILLMENT_CANCELED'
  | 'FULFILLMENT_FULFILLED_ITEMS'
  | 'FULFILLMENT_REFUNDED'
  | 'FULFILLMENT_REPLACED'
  | 'FULFILLMENT_RESTOCKED_ITEMS'
  | 'FULFILLMENT_RETURNED'
  | 'INVOICE_GENERATED'
  | 'INVOICE_REQUESTED'
  | 'INVOICE_SENT'
  | 'INVOICE_UPDATED'
  | 'NOTE_ADDED'
  | 'ORDER_DISCOUNT_ADDED'
  | 'ORDER_DISCOUNT_AUTOMATICALLY_UPDATED'
  | 'ORDER_DISCOUNT_DELETED'
  | 'ORDER_DISCOUNT_UPDATED'
  | 'ORDER_FULLY_PAID'
  | 'ORDER_LINE_DISCOUNT_REMOVED'
  | 'ORDER_LINE_DISCOUNT_UPDATED'
  | 'ORDER_LINE_PRODUCT_DELETED'
  | 'ORDER_LINE_VARIANT_DELETED'
  | 'ORDER_MARKED_AS_PAID'
  | 'ORDER_REPLACEMENT_CREATED'
  | 'OTHER'
  | 'OVERSOLD_ITEMS'
  | 'PAYMENT_AUTHORIZED'
  | 'PAYMENT_CAPTURED'
  | 'PAYMENT_FAILED'
  | 'PAYMENT_REFUNDED'
  | 'PAYMENT_VOIDED'
  | 'PLACED'
  | 'PLACED_FROM_DRAFT'
  | 'REMOVED_PRODUCTS'
  | 'TRACKING_UPDATED'
  | 'TRANSACTION_CAPTURE_REQUESTED'
  | 'TRANSACTION_EVENT'
  | 'TRANSACTION_REFUND_REQUESTED'
  | 'TRANSACTION_VOID_REQUESTED'
  | 'UPDATED_ADDRESS';

/** An order in the shop. */
export type OrderFilter = {
  AND?: InputMaybe<OrderFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<OrderFilter>;
  OR?: InputMaybe<OrderFilter>;
  authorizeStatus?: InputMaybe<Array<OrderAuthorizeStatus>>;
  channels?: InputMaybe<Array<Scalars['ID']['input']>>;
  chargeStatus?: InputMaybe<Array<OrderChargeStatus>>;
  created?: InputMaybe<DateRangeInput>;
  createdAt?: InputMaybe<DateRangeInput>;
  customer?: InputMaybe<Scalars['String']['input']>;
  giftCardBought?: InputMaybe<Scalars['Boolean']['input']>;
  giftCardUsed?: InputMaybe<Scalars['Boolean']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  isClickAndCollect?: InputMaybe<Scalars['Boolean']['input']>;
  isPreorder?: InputMaybe<Scalars['Boolean']['input']>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  numbers?: InputMaybe<Array<Scalars['String']['input']>>;
  paymentStatus?: InputMaybe<Array<ChargeStatus>>;
  search?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Array<OrderStatusFilter>>;
  updatedAt?: InputMaybe<DateTimeRangeInput>;
};

export type OrderFilterShippingMethods = Event & OrderBase & {
  __typename: 'OrderFilterShippingMethods';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
  /** Shipping methods that can be used with this checkout. */
  shippingMethods: Array<ShippingMethod>;
};

export type OrderFulfillInput = {
  allowStockToBeExceeded?: InputMaybe<Scalars['Boolean']['input']>;
  lines: Array<OrderFulfillmentLineInput>;
  notifyCustomer: Scalars['Boolean']['input'];
  trackingNumber?: InputMaybe<Scalars['String']['input']>;
};

export type OrderFulfillStockInput = {
  quantity: Scalars['Int']['input'];
  warehouse: Scalars['ID']['input'];
};

export type OrderFulfilled = Event & OrderBase & {
  __typename: 'OrderFulfilled';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type OrderFulfillment = {
  __typename: 'OrderFulfillment';
  /** A refunded fulfillment. */
  fulfillment: Fulfillment;
  /** Order which fulfillment was refunded. */
  order: Order;
};

export type OrderFulfillmentLineInput = {
  orderLineId: Scalars['ID']['input'];
  stocks: Array<OrderFulfillStockInput>;
};

export type OrderFulfillmentMutationResult = BaseMutationResult & {
  __typename: 'OrderFulfillmentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: OrderFulfillment;
};

export type OrderFullyPaid = Event & OrderBase & {
  __typename: 'OrderFullyPaid';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type OrderInvoiceMutationResult = BaseMutationResult & {
  __typename: 'OrderInvoiceMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  invoice: Invoice;
  order: Order;
};

/** A line of a particular order. */
export type OrderLine = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'OrderLine';
  /** List of allocations across warehouses. */
  allocations: Array<Allocation>;
  digitalContentUrl: DigitalContentUrl;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isShippingRequired: Scalars['Boolean']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** A purchased product variant. Note: this field may be null if the variant has been removed from stock at all. */
  product?: Maybe<ConcreteProduct>;
  productName: Scalars['String']['output'];
  productSku: Scalars['String']['output'];
  quantity: Scalars['Int']['output'];
  quantityFulfilled: Scalars['Int']['output'];
  /** A quantity of items remaining to be fulfilled. */
  quantityToFulfill: Scalars['Int']['output'];
  /** Denormalized tax class of the product in this order line. */
  taxClass?: Maybe<TaxClass>;
  /** Denormalized public metadata of the tax class. */
  taxClassMetadata: Array<MetadataItem>;
  /** Denormalized name of the tax class. */
  taxClassName?: Maybe<Scalars['String']['output']>;
  /** Denormalized private metadata of the tax class. Requires staff permissions to access. */
  taxClassPrivateMetadata: Array<MetadataItem>;
  taxRate: Scalars['Float']['output'];
  thumbnail?: Maybe<Image>;
  /** Price of the order line. */
  totalPrice: TaxedMoney;
  translatedProductName?: Maybe<Scalars['String']['output']>;
  undiscountedTotalPrice: TaxedMoney;
  /** Price of the single item in the order line without applied an order line discount. */
  undiscountedUnitPrice: TaxedMoney;
  /** The discount applied to the single order line. */
  unitDiscount: Money;
  unitDiscountReason: Scalars['String']['output'];
  /** Type of the discount: fixed or percent */
  unitDiscountType: DiscountValueType;
  /** Value of the discount. Can store fixed value or percent value */
  unitDiscountValue: Scalars['PositiveDecimal']['output'];
  /** Price of the single item in the order line. */
  unitPrice: TaxedMoney;
};


/** A line of a particular order. */
export type OrderLineMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A line of a particular order. */
export type OrderLineMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A line of a particular order. */
export type OrderLinePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A line of a particular order. */
export type OrderLinePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A line of a particular order. */
export type OrderLineThumbnailArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type OrderLineCreationInput = {
  forceNewLine?: InputMaybe<Scalars['Boolean']['input']>;
  productId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
};

export type OrderLineInput = {
  quantity: Scalars['Int']['input'];
};

export type OrderLineMutationResult = BaseMutationResult & {
  __typename: 'OrderLineMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** A related order. */
  order: Order;
  /** An order line that was deleted. */
  orderLine: OrderLine;
};

export type OrderLinesMutationResult = BaseMutationResult & {
  __typename: 'OrderLinesMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** Related order. */
  order: Order;
  orderLines: Array<OrderLine>;
};

export type OrderMetadataUpdated = Event & OrderBase & {
  __typename: 'OrderMetadataUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type OrderMutationResult = BaseMutationResult & {
  __typename: 'OrderMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Order;
};

export type OrderNodeConnection = {
  __typename: 'OrderNodeConnection';
  /** Contains the nodes in this connection */
  edges: Array<OrderNodeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type OrderNodeEdge = {
  __typename: 'OrderNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Order;
};

export type OrderOrdering =
  | 'CREATED_AT'
  | 'CUSTOMER'
  | 'FULFILLMENT_STATUS'
  | 'LAST_MODIFIED_AT'
  | 'NUMBER'
  | 'PAYMENT'
  | 'RANK';

export type OrderOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<OrderOrdering>;
};

export type OrderOrigin =
  | 'CHECKOUT'
  | 'DRAFT'
  | 'REISSUE';

export type OrderRefundFulfillmentLineInput = {
  fulfillmentLineId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
};

export type OrderRefundLineInput = {
  orderLineId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
};

export type OrderRefundProductsInput = {
  amountToRefund?: InputMaybe<Scalars['PositiveDecimal']['input']>;
  fulfillmentLines: Array<OrderRefundFulfillmentLineInput>;
  includeShippingCosts?: InputMaybe<Scalars['Boolean']['input']>;
  orderLines: Array<OrderRefundLineInput>;
};

export type OrderReturnFulfillmentLineInput = {
  fulfillmentLineId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
  replace?: Scalars['Boolean']['input'];
};

export type OrderReturnLineInput = {
  orderLineId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
  replace?: Scalars['Boolean']['input'];
};

export type OrderReturnProductsInput = {
  amountToRefund?: InputMaybe<Scalars['PositiveDecimal']['input']>;
  fulfillmentLines: Array<OrderReturnFulfillmentLineInput>;
  includeShippingCosts?: InputMaybe<Scalars['Boolean']['input']>;
  orderLines: Array<OrderReturnLineInput>;
  refund?: Scalars['Boolean']['input'];
};

/** Order-related settings from site settings. */
export type OrderSettings = {
  __typename: 'OrderSettings';
  /** Automatically accept all new orders */
  autoConfirmAllNewOrders: Scalars['Boolean']['output'];
  autoFulfillNonShippableGiftCard: Scalars['Boolean']['output'];
};

export type OrderSettingsErrorCode =
  | 'INVALID';

export type OrderSettingsMutationResult = BaseMutationResult & {
  __typename: 'OrderSettingsMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: OrderSettings;
};

export type OrderSettingsUpdateInput = {
  autoConfirmAllNewOrders?: InputMaybe<Scalars['Boolean']['input']>;
  autoFulfillNonShippableGiftCard?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrderStatus =
  | 'ACCEPTED'
  | 'CANCELED'
  | 'DRAFT'
  | 'FULFILLED'
  | 'IN_PROGRESS'
  | 'PARTIALLY_FULFILLED'
  | 'PARTIALLY_RETURNED'
  | 'PENDING_ACCEPTANCE'
  | 'RETURNED';

export type OrderStatusFilter =
  | 'CANCELED'
  | 'FULFILLED'
  | 'PARTIALLY_FULFILLED'
  | 'READY_TO_CAPTURE'
  | 'READY_TO_FULFILL'
  | 'UNCONFIRMED'
  | 'UNFULFILLED';

export type OrderUpdateInput = {
  billingAddress: AddressUpdateInput;
  shippingAddress: AddressUpdateInput;
  userEmail: Scalars['String']['input'];
};

export type OrderUpdateShippingInput = {
  shippingMethod: Scalars['ID']['input'];
};

export type OrderUpdated = Event & OrderBase & {
  __typename: 'OrderUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The order the event relates to. */
  order: Order;
  /** The application receiving the webhook. */
  recipient: App;
};

export type OrderingDirection =
  | 'ASC'
  | 'DESC';

export type Ordermutationresult = BaseMutationResult & {
  __typename: 'Ordermutationresult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** Order note created. */
  event: OrderEvent;
  /** Order with the note added. */
  order: Order;
};

/** Page(id, is_published, published_at, created_at, updated_at, private_metadata, metadata, seo_title, seo_description, slug, title, page_klass, content) */
export type Page = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Page';
  /** List of attributes assigned to this product. */
  attributes: Array<Attribute>;
  /** Content of the page. */
  content: Scalars['JSONString']['output'];
  createdAt: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isPublished: Scalars['Boolean']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  pageKlass: PageKlass;
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** The page publication date. */
  publishedAt: Scalars['DateTime']['output'];
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  title: Scalars['String']['output'];
  translation?: Maybe<PageTranslation>;
};


/** Page(id, is_published, published_at, created_at, updated_at, private_metadata, metadata, seo_title, seo_description, slug, title, page_klass, content) */
export type PageMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Page(id, is_published, published_at, created_at, updated_at, private_metadata, metadata, seo_title, seo_description, slug, title, page_klass, content) */
export type PageMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Page(id, is_published, published_at, created_at, updated_at, private_metadata, metadata, seo_title, seo_description, slug, title, page_klass, content) */
export type PagePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Page(id, is_published, published_at, created_at, updated_at, private_metadata, metadata, seo_title, seo_description, slug, title, page_klass, content) */
export type PagePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Page(id, is_published, published_at, created_at, updated_at, private_metadata, metadata, seo_title, seo_description, slug, title, page_klass, content) */
export type PageTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

export type PageBase = {
  /** The page the event relates to. */
  page: Page;
};

export type PageBulkMutationResult = BaseMutationResult & {
  __typename: 'PageBulkMutationResult';
  /** Returns how many objects were mutated. */
  count: Scalars['Int']['output'];
  errors?: Maybe<Array<ErrorInterface>>;
  objects: Array<Page>;
};

export type PageConnection = {
  __typename: 'PageConnection';
  /** Contains the nodes in this connection */
  edges: Array<PageEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PageCreated = Event & PageBase & {
  __typename: 'PageCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The page the event relates to. */
  page: Page;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PageCreationInput = {
  attributes: Array<ValueInput>;
  content: Scalars['JSONString']['input'];
  isPublished: Scalars['Boolean']['input'];
  pageKlass: Scalars['ID']['input'];
  publishedAt: Scalars['DateTime']['input'];
  seo: SeoInput;
  slug: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type PageDeleted = Event & PageBase & {
  __typename: 'PageDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The page the event relates to. */
  page: Page;
  /** The application receiving the webhook. */
  recipient: App;
};

/** An edge in a connection. */
export type PageEdge = {
  __typename: 'PageEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Page;
};

export type PageError = ErrorInterface & {
  __typename: 'PageError';
  /** List of attributes IDs which causes the error. */
  attributes?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of attribute values IDs which causes the error. */
  values?: Maybe<Array<Scalars['ID']['output']>>;
};

export type PageErrorCode =
  | 'ATTRIBUTE_ALREADY_ASSIGNED'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/** Page(id, is_published, published_at, created_at, updated_at, private_metadata, metadata, seo_title, seo_description, slug, title, page_klass, content) */
export type PageFilter = {
  AND?: InputMaybe<PageFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<PageFilter>;
  OR?: InputMaybe<PageFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  pageKlasses?: InputMaybe<Array<Scalars['ID']['input']>>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** Information to aid in pagination. */
export type PageInfo = {
  __typename: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['String']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['String']['output']>;
};

export type PageInput = {
  attributes: Array<ValueInput>;
  content: Scalars['JSONString']['input'];
  isPublished: Scalars['Boolean']['input'];
  publishedAt: Scalars['DateTime']['input'];
  seo: SeoInput;
  slug: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

/** PageKlass(id, private_metadata, metadata, name, slug) */
export type PageKlass = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'PageKlass';
  /** Page attributes of that page type. */
  attributes: Array<Attribute>;
  /** List of attributes which can be assigned to this product type. */
  availableAttributes: AttributeConnection;
  /** Whether page type has pages assigned. */
  hasPages: Scalars['Boolean']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  slug: Scalars['String']['output'];
};


/** PageKlass(id, private_metadata, metadata, name, slug) */
export type PageKlassAvailableAttributesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AttributeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/** PageKlass(id, private_metadata, metadata, name, slug) */
export type PageKlassMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** PageKlass(id, private_metadata, metadata, name, slug) */
export type PageKlassMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** PageKlass(id, private_metadata, metadata, name, slug) */
export type PageKlassPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** PageKlass(id, private_metadata, metadata, name, slug) */
export type PageKlassPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type PageKlassBase = {
  /** The page type the event relates to. */
  pageKlass: PageKlass;
};

export type PageKlassConnection = {
  __typename: 'PageKlassConnection';
  /** Contains the nodes in this connection */
  edges: Array<PageKlassEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PageKlassCreated = Event & PageKlassBase & {
  __typename: 'PageKlassCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The page type the event relates to. */
  pageKlass: PageKlass;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PageKlassCreationInput = {
  addAttributes: Array<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
  slug: Scalars['String']['input'];
};

export type PageKlassDeleted = Event & PageKlassBase & {
  __typename: 'PageKlassDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The page type the event relates to. */
  pageKlass: PageKlass;
  /** The application receiving the webhook. */
  recipient: App;
};

/** An edge in a connection. */
export type PageKlassEdge = {
  __typename: 'PageKlassEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: PageKlass;
};

/** PageKlass(id, private_metadata, metadata, name, slug) */
export type PageKlassFilter = {
  AND?: InputMaybe<PageKlassFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<PageKlassFilter>;
  OR?: InputMaybe<PageKlassFilter>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type PageKlassMutationResult = BaseMutationResult & {
  __typename: 'PageKlassMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: PageKlass;
};

export type PageKlassOrdering =
  | 'NAME'
  | 'SLUG';

export type PageKlassOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<PageKlassOrdering>;
};

export type PageKlassUpdateInput = {
  addAttributes: Array<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
  removeAttributes: Array<Scalars['ID']['input']>;
  slug: Scalars['String']['input'];
};

export type PageKlassUpdated = Event & PageKlassBase & {
  __typename: 'PageKlassUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The page type the event relates to. */
  pageKlass: PageKlass;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PageMutationResult = BaseMutationResult & {
  __typename: 'PageMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Page;
};

export type PageOrdering =
  | 'CREATED_AT'
  | 'PUBLISHED_AT'
  | 'SLUG'
  | 'TITLE'
  | 'VISIBILITY';

export type PageOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<PageOrdering>;
};

/** PageTranslation(id, language_code, seo_title, seo_description, page, title, content) */
export type PageTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'PageTranslation';
  /** Translated content of the page. */
  content: Scalars['JSONString']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  page: Page;
  pk: Scalars['String']['output'];
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  title: Scalars['String']['output'];
};

export type PageTranslationInput = {
  content: Scalars['JSONString']['input'];
  seoDescription: Scalars['String']['input'];
  seoTitle: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type PageUpdated = Event & PageBase & {
  __typename: 'PageUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The page the event relates to. */
  page: Page;
  /** The application receiving the webhook. */
  recipient: App;
};

/** Represents a payment of a given type. */
export type Payment = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Payment';
  /** List of actions that can be performed in the current state of a payment. */
  actions: Array<OrderAction>;
  /** Total amount captured for this payment. */
  amountCaptured: Money;
  /** Maximum amount of money that can be captured. */
  availableCaptureAmount: Money;
  /** Maximum amount of money that can be refunded. */
  availableRefundAmount: Money;
  chargeStatus: ChargeStatus;
  checkout: Checkout;
  createdAt: Scalars['DateTime']['output'];
  /** The details of the card used for this payment. */
  creditCard: CreditCard;
  /** IP address of the user who created the payment. */
  customerIpAddress: Scalars['String']['output'];
  gateway: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isActive: Scalars['Boolean']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  modified: Scalars['DateTime']['output'];
  order: Order;
  paymentMethodType: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  token: Scalars['String']['output'];
  /** Total amount of the payment. */
  total: Money;
  /** List of all transactions within this payment. */
  transactions: Array<Transaction>;
};


/** Represents a payment of a given type. */
export type PaymentMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Represents a payment of a given type. */
export type PaymentMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Represents a payment of a given type. */
export type PaymentPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Represents a payment of a given type. */
export type PaymentPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type PaymentAuthorize = Event & PaymentBase & {
  __typename: 'PaymentAuthorize';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** Look up a payment. */
  payment: Payment;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PaymentBase = {
  /** Look up a payment. */
  payment: Payment;
};

export type PaymentCaptureEvent = Event & PaymentBase & {
  __typename: 'PaymentCaptureEvent';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** Look up a payment. */
  payment: Payment;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PaymentCheckBalanceInput = {
  card: CardInput;
  channel?: InputMaybe<Scalars['String']['input']>;
  gatewayId: Scalars['String']['input'];
  method: Scalars['String']['input'];
};

export type PaymentCheckBalanceMutationResult = BaseMutationResult & {
  __typename: 'PaymentCheckBalanceMutationResult';
  /** Response from the gateway. */
  data: Scalars['JSONString']['output'];
  errors?: Maybe<Array<ErrorInterface>>;
};

export type PaymentConfirmEvent = Event & PaymentBase & {
  __typename: 'PaymentConfirmEvent';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** Look up a payment. */
  payment: Payment;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PaymentConnection = {
  __typename: 'PaymentConnection';
  /** Contains the nodes in this connection */
  edges: Array<PaymentEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type PaymentEdge = {
  __typename: 'PaymentEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Payment;
};

export type PaymentError = ErrorInterface & {
  __typename: 'PaymentError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of variant IDs which causes the error. */
  variants?: Maybe<Array<Scalars['ID']['output']>>;
};

export type PaymentErrorCode =
  | 'BALANCE_CHECK_ERROR'
  | 'BILLING_ADDRESS_NOT_SET'
  | 'CHANNEL_INACTIVE'
  | 'CHECKOUT_EMAIL_NOT_SET'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'INVALID_SHIPPING_METHOD'
  | 'NOT_FOUND'
  | 'NOT_SUPPORTED_GATEWAY'
  | 'NO_CHECKOUT_LINES'
  | 'PARTIAL_PAYMENT_NOT_ALLOWED'
  | 'PAYMENT_ERROR'
  | 'REQUIRED'
  | 'SHIPPING_ADDRESS_NOT_SET'
  | 'SHIPPING_METHOD_NOT_SET'
  | 'UNAVAILABLE_VARIANT_IN_CHANNEL'
  | 'UNIQUE';

/**
 * A model that represents a single payment.
 *
 * This might be a transactable payment information such as credit card
 * details, gift card information or a customer's authorization to charge
 * their PayPal account.
 *
 * All payment process related pieces of information are stored
 * at the gateway level, we are operating on the reusable token
 * which is a unique identifier of the customer for given gateway.
 *
 * Several payment methods can be used within a single order. Each payment
 * method may consist of multiple transactions.
 */
export type PaymentFilter = {
  AND?: InputMaybe<PaymentFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<PaymentFilter>;
  OR?: InputMaybe<PaymentFilter>;
  checkoutIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
};

/** Available payment gateway backend with configuration necessary to setup client. */
export type PaymentGateway = {
  __typename: 'PaymentGateway';
  /** Payment gateway client configuration. */
  config: Array<GatewayConfigLine>;
  /** Payment gateway supported currencies. */
  currencies: Array<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type PaymentInitializeMutationResult = BaseMutationResult & {
  __typename: 'PaymentInitializeMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  initializedPayment?: Maybe<PaymentInitialized>;
};

/** Server-side data generated by a payment gateway. Optional step when the payment provider requires an additional action to initialize payment session. */
export type PaymentInitialized = {
  __typename: 'PaymentInitialized';
  /** ID of a payment gateway. */
  gateway: Scalars['String']['output'];
  /** Payment gateway name. */
  name: Scalars['String']['output'];
};

export type PaymentInput = {
  amount?: InputMaybe<Scalars['PositiveDecimal']['input']>;
  gateway: Scalars['String']['input'];
  metadata?: InputMaybe<MetadataInput>;
  returnUrl?: InputMaybe<Scalars['String']['input']>;
  storePaymentMethod?: InputMaybe<StorePaymentMethod>;
  token?: InputMaybe<Scalars['String']['input']>;
};

export type PaymentListGateways = CheckoutBase & Event & {
  __typename: 'PaymentListGateways';
  /** The checkout the event relates to. */
  checkout: Checkout;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PaymentMutationResult = BaseMutationResult & {
  __typename: 'PaymentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** Updated payment. */
  payment: Payment;
};

export type PaymentProcessEvent = Event & PaymentBase & {
  __typename: 'PaymentProcessEvent';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** Look up a payment. */
  payment: Payment;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PaymentRefundEvent = Event & PaymentBase & {
  __typename: 'PaymentRefundEvent';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** Look up a payment. */
  payment: Payment;
  /** The application receiving the webhook. */
  recipient: App;
};

export type PaymentSource = {
  __typename: 'PaymentSource';
  /** Stored credit card details if available. */
  creditCardInfo: CreditCard;
  gateway: Scalars['String']['output'];
  /**
   * List of public metadata items.
   *
   * Can be accessed without permissions.
   */
  metadata: Array<MetadataItem>;
  paymentMethodId: Scalars['String']['output'];
};

export type PaymentVoidEvent = Event & PaymentBase & {
  __typename: 'PaymentVoidEvent';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** Look up a payment. */
  payment: Payment;
  /** The application receiving the webhook. */
  recipient: App;
};

export type Permission = {
  __typename: 'Permission';
  /** Internal code for permission. */
  code: PermissionCode;
  /** Describe action(s) allowed to do by permission. */
  name: Scalars['String']['output'];
};

export type PermissionCode =
  | 'HANDLE_CHECKOUTS'
  | 'HANDLE_PAYMENTS'
  | 'HANDLE_TAXES'
  | 'IMPERSONATE_USER'
  | 'MANAGE_APPS'
  | 'MANAGE_CHANNELS'
  | 'MANAGE_CHECKOUTS'
  | 'MANAGE_DISCOUNTS'
  | 'MANAGE_GIFT_CARD'
  | 'MANAGE_MEDIA'
  | 'MANAGE_MENUS'
  | 'MANAGE_OBSERVABILITY'
  | 'MANAGE_ORDERS'
  | 'MANAGE_PAGES'
  | 'MANAGE_PAGE_TYPES_AND_ATTRIBUTES'
  | 'MANAGE_PLUGINS'
  | 'MANAGE_PRODUCTS'
  | 'MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES'
  | 'MANAGE_SETTINGS'
  | 'MANAGE_SHIPPING'
  | 'MANAGE_STAFF'
  | 'MANAGE_TAXES'
  | 'MANAGE_TRANSLATIONS'
  | 'MANAGE_USERS';

export type Plugin = {
  __typename: 'Plugin';
  channelConfigurations: Array<PluginConfiguration>;
  /** Description of the plugin. */
  description: Scalars['String']['output'];
  /** Global configuration of the plugin (not channel-specific). */
  globalConfiguration: PluginConfiguration;
  /** Identifier of the plugin. */
  id: Scalars['ID']['output'];
  /** Name of the plugin. */
  name: Scalars['String']['output'];
};

export type PluginConfiguration = {
  __typename: 'PluginConfiguration';
  /** Determines if plugin is active or not. */
  active: Scalars['Boolean']['output'];
  /** The channel to which the plugin configuration is assigned to. */
  channel: Channel;
  /** Configuration of the plugin. */
  configuration: Array<ConfigurationItem>;
};

export type PluginConfigurationType =
  | 'GLOBAL'
  | 'PER_CHANNEL';

export type PluginConnection = {
  __typename: 'PluginConnection';
  /** Contains the nodes in this connection */
  edges: Array<PluginEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type PluginEdge = {
  __typename: 'PluginEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Plugin;
};

export type PluginFilter = {
  search?: InputMaybe<Scalars['String']['input']>;
  statusInChannels?: InputMaybe<PluginStatusInChannelsInput>;
  type?: InputMaybe<PluginConfigurationType>;
};

export type PluginMutationResult = BaseMutationResult & {
  __typename: 'PluginMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Plugin;
};

export type PluginOrdering =
  | 'IS_ACTIVE'
  | 'NAME';

export type PluginOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<PluginOrdering>;
};

export type PluginStatusInChannelsInput = {
  active: Scalars['Boolean']['input'];
  channels: Array<Scalars['ID']['input']>;
};

export type PluginUpdateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  configuration?: InputMaybe<Array<ConfigurationItemInput>>;
};

/** A specification of a point of contact for an order. */
export type PointOfContact = Node & TempoNode & {
  __typename: 'PointOfContact';
  email?: Maybe<Scalars['String']['output']>;
  firstName: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  lastName: Scalars['String']['output'];
  notes?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  pk: Scalars['String']['output'];
};

export type PostalCodeRuleInclusionType =
  | 'EXCLUDE'
  | 'INCLUDE';

/** Represents preorder settings for product variant. */
export type PreorderData = {
  __typename: 'PreorderData';
  /** Preorder end date. */
  endDate?: Maybe<Scalars['DateTime']['output']>;
  /** Total number of sold product variant during preorder. */
  globalSoldUnits: Scalars['Int']['output'];
  /** The global preorder threshold for product variant. */
  globalThreshold?: Maybe<Scalars['Int']['output']>;
};

export type PreorderSettingsInput = {
  endDate: Scalars['DateTime']['input'];
  globalThreshold: Scalars['Int']['input'];
};

export type PreorderThreshold = {
  __typename: 'PreorderThreshold';
  /** Preorder threshold for product variant in this channel. */
  quantity?: Maybe<Scalars['Int']['output']>;
  /** Number of sold product variant in this channel. */
  soldUnits: Scalars['Int']['output'];
};

export type PriceInput = {
  amount: Scalars['PositiveDecimal']['input'];
  currency: Scalars['String']['input'];
};

export type PriceRangeInput = {
  gte?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
};

/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type Product = {
  ancestors: Array<AbstractProduct>;
  /** Get a single attribute attached to product by attribute slug. */
  attribute: Attribute;
  /** List of attributes assigned to this variant. */
  attributes: Array<Attribute>;
  /** Date when product is available for purchase. */
  availableForPurchaseAt: Scalars['DateTime']['output'];
  category?: Maybe<Category>;
  /** Channel given to retrieve this product variant. Also used by federation gateway to resolve this object in a federated query. */
  channel: Scalars['String']['output'];
  /** List of availability and price info in channels for the product. */
  channelListings: Array<ProductChannelListing>;
  /** List of collections for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS. */
  collections: Array<Collection>;
  createdAt: Scalars['DateTime']['output'];
  defaultVariant: Product;
  description?: Maybe<Scalars['JSONString']['output']>;
  /** Digital content for the product variant. */
  digitalContent: DigitalContent;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  imageById: ProductImage;
  images: Array<ProductImage>;
  /** Whether the product is in stock and visible or not. */
  isAvailable: Scalars['Boolean']['output'];
  /** Whether the product is available for purchase. */
  isAvailableForPurchase: Scalars['Boolean']['output'];
  /** List of media for the product variant. */
  media: Array<ProductMediaItem>;
  /** Get a single product media by ID. */
  mediaById: ProductMediaItem;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  parent: AbstractProduct;
  parentId?: Maybe<Scalars['ID']['output']>;
  pk: Scalars['String']['output'];
  /** Preorder data for product variant. */
  preorder?: Maybe<PreorderData>;
  /** Lists the storefront variant's pricing, the current price and discounts, only meant for displaying. */
  pricing?: Maybe<ProductPricingInfo>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  productKlass: ProductKlass;
  /** Quantity of a product available for sale in one checkout. Field value will be `null` when no `maxItemCountPerCheckout` in global settings has been set, and `productVariant` stocks are not tracked. */
  quantityAvailable?: Maybe<Scalars['Int']['output']>;
  /** Total quantity ordered. */
  quantityOrdered: Scalars['Int']['output'];
  rating: Scalars['Float']['output'];
  /** Total revenue generated by a variant in given period of time. Note: this field should be queried using `reportProductSales` query as it uses optimizations suitable for such calculations. */
  revenue: TaxedMoney;
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  /** Stocks for the product variant. */
  stocks: Array<Stock>;
  /** Tax class assigned to this product type. All products of this product type use this tax class, unless it's overridden in the `Product` type. */
  taxClass?: Maybe<TaxClass>;
  thumbnail?: Maybe<Image>;
  translation?: Maybe<ProductTranslation>;
  updatedAt: Scalars['DateTime']['output'];
  /** Get a single variant by SKU or ID. */
  variant: Product;
  /** List of variants for the product. Requires the following permissions to include the unpublished items: MANAGE_ORDERS, MANAGE_DISCOUNTS, MANAGE_PRODUCTS. */
  variants: Array<Product>;
  weight: Scalars['Weight']['output'];
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductAncestorsArgs = {
  includeSelf?: Scalars['Boolean']['input'];
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductAttributeArgs = {
  slug: Scalars['String']['input'];
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductAttributesArgs = {
  variantSelection?: InputMaybe<ProductAttributeScope>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductImageByIdArgs = {
  id: Scalars['String']['input'];
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductIsAvailableArgs = {
  address: AddressUpdateInput;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductIsAvailableForPurchaseArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductMediaByIdArgs = {
  id: Scalars['ID']['input'];
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductPricingArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  channelSlug?: InputMaybe<Scalars['String']['input']>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductQuantityAvailableArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductRevenueArgs = {
  period: ReportingPeriod;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductStocksArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductThumbnailArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};


/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductVariantArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type ProductAttributeAssignInput = {
  id: Scalars['ID']['input'];
  type: ProductAttributeType;
  variantSelection?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Attribute assigned to variant with variant selection attached. */
export type ProductAttributeAssignment = {
  __typename: 'ProductAttributeAssignment';
  attribute: Attribute;
  /** Determines whether assigned attribute is allowed for variant selection.  */
  variantSelection: Scalars['Boolean']['output'];
};

export type ProductAttributeAssignmentMutationResult = BaseMutationResult & {
  __typename: 'ProductAttributeAssignmentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** The updated product type. */
  productKlass: ProductKlass;
};

export type ProductAttributeAssignmentUpdateInput = {
  id: Scalars['ID']['input'];
  variantSelection: Scalars['Boolean']['input'];
};

export type ProductAttributeScope =
  | 'ALL'
  | 'NOT_VARIANT_SELECTION'
  | 'VARIANT_SELECTION';

export type ProductAttributeType =
  | 'PRODUCT'
  | 'VARIANT';

/** Event sent when product variant is back in stock. */
export type ProductBackInStock = Event & ProductBase & {
  __typename: 'ProductBackInStock';
  /** The category of the product. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The product the event relates to. */
  product: Product;
  productVariant: Product;
  /** The application receiving the webhook. */
  recipient: App;
  /** Look up a warehouse. */
  warehouse: Warehouse;
};


/** Event sent when product variant is back in stock. */
export type ProductBackInStockProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


/** Event sent when product variant is back in stock. */
export type ProductBackInStockProductVariantArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ProductBase = {
  /** The category of the product. */
  category: Category;
  /** The product the event relates to. */
  product: Product;
};


export type ProductBaseProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ProductBulkCreationInput = {
  attributes: Array<BulkValueInput>;
  category?: InputMaybe<Scalars['ID']['input']>;
  channelListings?: InputMaybe<Array<ProductChannelListingAddInput>>;
  collections?: InputMaybe<Array<Scalars['ID']['input']>>;
  description?: InputMaybe<Scalars['JSONString']['input']>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  name: Scalars['String']['input'];
  preorder?: InputMaybe<PreorderSettingsInput>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  quantityLimitPerCustomer?: InputMaybe<Scalars['Int']['input']>;
  rating?: InputMaybe<Scalars['Float']['input']>;
  seo?: InputMaybe<SeoInput>;
  sku: Scalars['String']['input'];
  slug?: InputMaybe<Scalars['String']['input']>;
  stocks?: InputMaybe<Array<StockInput>>;
  taxClass?: InputMaybe<Scalars['ID']['input']>;
  trackInventory?: InputMaybe<Scalars['Boolean']['input']>;
  weight?: InputMaybe<Scalars['Weight']['input']>;
};

export type ProductBulkMutationResult = BaseMutationResult & {
  __typename: 'ProductBulkMutationResult';
  /** Returns how many objects were mutated. */
  count: Scalars['Int']['output'];
  errors?: Maybe<Array<ErrorInterface>>;
  objects: Array<Product>;
};

/** ProductChannelListing(id, is_published, published_at, channel, product, currency, price, cost_price, preorder_quantity_threshold, visible_in_listings, available_for_purchase_at, discounted_price) */
export type ProductChannelListing = Node & TempoNode & {
  __typename: 'ProductChannelListing';
  /** The product available for purchase date time. */
  availableForPurchaseAt: Scalars['DateTime']['output'];
  channel: Channel;
  /** Cost price of the variant. */
  costPrice: Money;
  /** The price of the cheapest variant (including discounts). */
  discountedPrice: Money;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Whether the product is available for purchase. */
  isAvailableForPurchase: Scalars['Boolean']['output'];
  isPublished: Scalars['Boolean']['output'];
  /** Gross margin percentage value. */
  margin: Scalars['Int']['output'];
  pk: Scalars['String']['output'];
  preorderThreshold?: Maybe<PreorderThreshold>;
  price: Money;
  /** Lists the storefront product's pricing, the current price and discounts, only meant for displaying. */
  pricing?: Maybe<ProductPricingInfo>;
  /** The publication date. */
  publishedAt: Scalars['DateTime']['output'];
  /** Purchase cost of product. */
  purchaseCost?: Maybe<MoneyRange>;
  visibleInListings: Scalars['Boolean']['output'];
};


/** ProductChannelListing(id, is_published, published_at, channel, product, currency, price, cost_price, preorder_quantity_threshold, visible_in_listings, available_for_purchase_at, discounted_price) */
export type ProductChannelListingPricingArgs = {
  address?: InputMaybe<AddressUpdateInput>;
};

export type ProductChannelListingAddInput = {
  addProducts?: InputMaybe<Array<Scalars['ID']['input']>>;
  availableForPurchaseAt: Scalars['DateTime']['input'];
  channelId: Scalars['ID']['input'];
  costPrice: Scalars['PositiveDecimal']['input'];
  isAvailableForPurchase: Scalars['Boolean']['input'];
  isPublished: Scalars['Boolean']['input'];
  preorderThreshold: Scalars['Int']['input'];
  price: Scalars['PositiveDecimal']['input'];
  publishedAt: Scalars['DateTime']['input'];
  removeVariants?: InputMaybe<Array<Scalars['ID']['input']>>;
  visibleInListings: Scalars['Boolean']['input'];
};

export type ProductChannelListingError = ErrorInterface & {
  __typename: 'ProductChannelListingError';
  /** List of attributes IDs which causes the error. */
  attributes?: Maybe<Array<Scalars['ID']['output']>>;
  /** List of channels IDs which causes the error. */
  channels?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of attribute values IDs which causes the error. */
  values?: Maybe<Array<Scalars['ID']['output']>>;
  /** List of variants IDs which causes the error. */
  variants?: Maybe<Array<Scalars['ID']['output']>>;
};

export type ProductConnection = {
  __typename: 'ProductConnection';
  /** Contains the nodes in this connection */
  edges: Array<ProductEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ProductCreated = Event & ProductBase & {
  __typename: 'ProductCreated';
  /** The category of the product. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The product the event relates to. */
  product: Product;
  /** The application receiving the webhook. */
  recipient: App;
};


export type ProductCreatedProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ProductCreationInput = {
  attributes?: InputMaybe<Array<ValueInput>>;
  category?: InputMaybe<Scalars['ID']['input']>;
  collections?: InputMaybe<Array<Scalars['ID']['input']>>;
  description?: InputMaybe<Scalars['JSONString']['input']>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  name: Scalars['String']['input'];
  parent?: InputMaybe<Scalars['ID']['input']>;
  preorder?: InputMaybe<PreorderSettingsInput>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  productKlass: Scalars['ID']['input'];
  quantityLimitPerCustomer?: InputMaybe<Scalars['Int']['input']>;
  rating?: InputMaybe<Scalars['Float']['input']>;
  seo?: InputMaybe<SeoInput>;
  sku?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  stocks?: InputMaybe<Array<StockInput>>;
  taxClass?: InputMaybe<Scalars['ID']['input']>;
  trackInventory?: InputMaybe<Scalars['Boolean']['input']>;
  weight?: InputMaybe<Scalars['Weight']['input']>;
};

export type ProductDeleted = Event & ProductBase & {
  __typename: 'ProductDeleted';
  /** The category of the product. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The product the event relates to. */
  product: Product;
  /** The application receiving the webhook. */
  recipient: App;
};


export type ProductDeletedProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** An edge in a connection. */
export type ProductEdge = {
  __typename: 'ProductEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Product;
};

export type ProductError = ErrorInterface & {
  __typename: 'ProductError';
  /** List of attributes IDs which causes the error. */
  attributes?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of attribute values IDs which causes the error. */
  values?: Maybe<Array<Scalars['ID']['output']>>;
};

export type ProductErrorCode =
  | 'ALREADY_EXISTS'
  | 'ATTRIBUTE_ALREADY_ASSIGNED'
  | 'ATTRIBUTE_CANNOT_BE_ASSIGNED'
  | 'ATTRIBUTE_VARIANTS_DISABLED'
  | 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'MEDIA_ALREADY_ASSIGNED'
  | 'NOT_FOUND'
  | 'NOT_PRODUCTS_IMAGE'
  | 'NOT_PRODUCTS_VARIANT'
  | 'PREORDER_VARIANT_CANNOT_BE_DEACTIVATED'
  | 'PRODUCT_NOT_ASSIGNED_TO_CHANNEL'
  | 'PRODUCT_WITHOUT_CATEGORY'
  | 'REQUIRED'
  | 'UNIQUE'
  | 'UNSUPPORTED_MEDIA_PROVIDER'
  | 'VARIANT_NO_DIGITAL_CONTENT';

export type ProductField =
  | 'CATEGORY'
  | 'CHARGE_TAXES'
  | 'COLLECTIONS'
  | 'DESCRIPTION'
  | 'NAME'
  | 'PRODUCT_MEDIA'
  | 'PRODUCT_TYPE'
  | 'PRODUCT_WEIGHT'
  | 'VARIANT_ID'
  | 'VARIANT_MEDIA'
  | 'VARIANT_SKU'
  | 'VARIANT_WEIGHT';

/**
 * A product, i.e., an item for sale in the storefront.
 *
 * Products have a product type (e.g., book) and can have
 * multiple variants (e.g., hardcover, paperback, etc.).
 */
export type ProductFilter = {
  AND?: InputMaybe<ProductFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<ProductFilter>;
  OR?: InputMaybe<ProductFilter>;
  attributes?: InputMaybe<Array<AttributeInput>>;
  availableFrom?: InputMaybe<Scalars['DateTime']['input']>;
  categories?: InputMaybe<Array<Scalars['ID']['input']>>;
  collections?: InputMaybe<Array<Scalars['ID']['input']>>;
  hasCategory?: InputMaybe<Scalars['Boolean']['input']>;
  hasPreorderedVariants?: InputMaybe<Scalars['Boolean']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  isAvailable?: InputMaybe<Scalars['Boolean']['input']>;
  isGiftCard?: InputMaybe<Scalars['Boolean']['input']>;
  isPublished?: InputMaybe<Scalars['Boolean']['input']>;
  isVisibleInListing?: InputMaybe<Scalars['Boolean']['input']>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  minimalPrice?: InputMaybe<PriceRangeInput>;
  price?: InputMaybe<PriceRangeInput>;
  productKlasses?: InputMaybe<Array<Scalars['ID']['input']>>;
  publishedFrom?: InputMaybe<Scalars['DateTime']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
  stockAvailability?: InputMaybe<StockAvailability>;
  stocks?: InputMaybe<ProductStockFilter>;
  updatedAt?: InputMaybe<DateTimeRangeInput>;
};

/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type ProductImage = Node & TempoNode & {
  __typename: 'ProductImage';
  alt: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
  /** The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged. */
  sortOrder?: Maybe<Scalars['Int']['output']>;
  url?: Maybe<Image>;
};


/**
 * A media item such as a picture or video.
 *
 * Media that can be manually added by a shop operator through the dashboard.
 */
export type ProductImageUrlArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
};

export type ProductInput = {
  attributes?: InputMaybe<Array<ValueInput>>;
  category?: InputMaybe<Scalars['ID']['input']>;
  collections?: InputMaybe<Array<Scalars['ID']['input']>>;
  description?: InputMaybe<Scalars['JSONString']['input']>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  name: Scalars['String']['input'];
  preorder?: InputMaybe<PreorderSettingsInput>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  quantityLimitPerCustomer?: InputMaybe<Scalars['Int']['input']>;
  rating?: InputMaybe<Scalars['Float']['input']>;
  seo?: InputMaybe<SeoInput>;
  sku?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  taxClass?: InputMaybe<Scalars['ID']['input']>;
  trackInventory?: InputMaybe<Scalars['Boolean']['input']>;
  weight?: InputMaybe<Scalars['Weight']['input']>;
};

/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlass = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'ProductKlass';
  /** List of attributes which can be assigned to this product type. */
  availableAttributes: AttributeNodeConnection;
  hasVariants: Scalars['Boolean']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isDigital: Scalars['Boolean']['output'];
  isShippingRequired: Scalars['Boolean']['output'];
  kind: ProductKlassKind;
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** Product attributes of that product type. */
  productAttributes: Array<Attribute>;
  /** Variant attributes of that product type with attached variant selection. */
  productVariantAttributeAssignments: Array<ProductAttributeAssignment>;
  products: ProductNodeConnection;
  slug: Scalars['String']['output'];
  taxClass?: Maybe<TaxClass>;
  variantAttributes: Array<Attribute>;
  weight: Scalars['Weight']['output'];
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassAvailableAttributesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AttributeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassProductVariantAttributeAssignmentsArgs = {
  variantSelection?: InputMaybe<ProductAttributeScope>;
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassVariantAttributesArgs = {
  variantSelection?: InputMaybe<Scalars['String']['input']>;
};

export type ProductKlassConfigurable =
  | 'CONFIGURABLE'
  | 'SIMPLE';

export type ProductKlassConnection = {
  __typename: 'ProductKlassConnection';
  /** Contains the nodes in this connection */
  edges: Array<ProductKlassEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type ProductKlassEdge = {
  __typename: 'ProductKlassEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: ProductKlass;
};

/**
 * A type of product, e.g., book, t-shirt, sweater, mug, etc.
 *
 * Product types specify the attributes that products and product variants have.
 */
export type ProductKlassFilter = {
  AND?: InputMaybe<ProductKlassFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<ProductKlassFilter>;
  OR?: InputMaybe<ProductKlassFilter>;
  configurable?: InputMaybe<ProductKlassConfigurable>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  kind?: InputMaybe<ProductKlassKind>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type ProductKlassInput = {
  hasVariants: Scalars['Boolean']['input'];
  isDigital?: InputMaybe<Scalars['Boolean']['input']>;
  isShippingRequired: Scalars['Boolean']['input'];
  kind: ProductKlassKind;
  name: Scalars['String']['input'];
  productAttributes: Array<Scalars['ID']['input']>;
  slug: Scalars['String']['input'];
  taxClass?: InputMaybe<Scalars['ID']['input']>;
  variantAttributes: Array<Scalars['ID']['input']>;
  weight: Scalars['Weight']['input'];
};

export type ProductKlassKind =
  | 'GIFT_CARD'
  | 'NORMAL';

export type ProductKlassMutationResult = BaseMutationResult & {
  __typename: 'ProductKlassMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: ProductKlass;
};

export type ProductKlassNodeConnection = {
  __typename: 'ProductKlassNodeConnection';
  /** Contains the nodes in this connection */
  edges: Array<ProductKlassNodeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type ProductKlassNodeEdge = {
  __typename: 'ProductKlassNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: ProductKlass;
};

export type ProductKlassOrdering =
  | 'DIGITAL'
  | 'NAME'
  | 'SHIPPING_REQUIRED';

export type ProductKlassOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<ProductKlassOrdering>;
};

export type ProductMediaAssignmentMutationResult = BaseMutationResult & {
  __typename: 'ProductMediaAssignmentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  mediaItem: ProductMediaItem;
  product: Product;
};

export type ProductMediaCreationInput = {
  alt: Scalars['String']['input'];
  image?: InputMaybe<Scalars['Upload']['input']>;
  mediaUrl?: InputMaybe<Scalars['String']['input']>;
  product: Scalars['ID']['input'];
};

/** ProductMediaItem(id, sort_order, product, media_item) */
export type ProductMediaItem = Node & TempoNode & {
  __typename: 'ProductMediaItem';
  alt: Scalars['String']['output'];
  description?: Maybe<Scalars['String']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  mediaItem: MediaItem;
  oembedData: Scalars['JSONString']['output'];
  pk: Scalars['String']['output'];
  sortOrder: Scalars['Int']['output'];
  title: Scalars['String']['output'];
  type: MediaType;
  url: Scalars['String']['output'];
};


/** ProductMediaItem(id, sort_order, product, media_item) */
export type ProductMediaItemUrlArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type ProductMediaMutationResult = BaseMutationResult & {
  __typename: 'ProductMediaMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  media: ProductMediaItem;
  product: Product;
};

export type ProductMediaUnassignmentMutationResult = BaseMutationResult & {
  __typename: 'ProductMediaUnassignmentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  mediaItem: ProductMediaItem;
  product: Product;
};

export type ProductMediaUpdateInput = {
  alt: Scalars['String']['input'];
};

export type ProductMetadataUpdated = Event & ProductBase & {
  __typename: 'ProductMetadataUpdated';
  /** The category of the product. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The product the event relates to. */
  product: Product;
  /** The application receiving the webhook. */
  recipient: App;
};


export type ProductMetadataUpdatedProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ProductMutationResult = BaseMutationResult & {
  __typename: 'ProductMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Product;
};

export type ProductNodeConnection = {
  __typename: 'ProductNodeConnection';
  /** Contains the nodes in this connection */
  edges: Array<ProductNodeEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type ProductNodeEdge = {
  __typename: 'ProductNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Product;
};

export type ProductOrdering =
  | 'COLLECTION'
  | 'CREATED_AT'
  | 'LAST_MODIFIED_AT'
  | 'MINIMAL_PRICE'
  | 'NAME'
  | 'PRICE'
  | 'PUBLISHED'
  | 'PUBLISHED_AT'
  | 'RANK'
  | 'RATING'
  | 'TYPE';

export type ProductOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<ProductOrdering>;
};

/** Event sent when product variant is out of stock. */
export type ProductOutOfStock = Event & ProductBase & {
  __typename: 'ProductOutOfStock';
  /** The category of the product. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The product the event relates to. */
  product: Product;
  productVariant: Product;
  /** The application receiving the webhook. */
  recipient: App;
  /** Look up a warehouse. */
  warehouse: Warehouse;
};


/** Event sent when product variant is out of stock. */
export type ProductOutOfStockProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


/** Event sent when product variant is out of stock. */
export type ProductOutOfStockProductVariantArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ProductPreorderDeactivationMutationResult = BaseMutationResult & {
  __typename: 'ProductPreorderDeactivationMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** Product variant with ended preorder. */
  productVariant: Product;
};

/** Represents availability of a product in the storefront. */
export type ProductPricingInfo = BasePricingInfo & {
  __typename: 'ProductPricingInfo';
  /** The discount amount if in sale (null otherwise). */
  discount: TaxedMoney;
  /** The discount amount in the local currency. */
  discountLocalCurrency: TaxedMoney;
  /** Determines whether this product's price displayed in a storefront should include taxes. */
  displayGrossPrices: Scalars['Boolean']['output'];
  /** Whether it is in sale or not. */
  onSale: Scalars['Boolean']['output'];
  /** The price, with any discount subtracted. */
  price: TaxedMoney;
  /** The discounted price in the local currency. */
  priceLocalCurrency: TaxedMoney;
  /** The discounted price range of the product variants. */
  priceRange: TaxedMoneyRange;
  /** The discounted price range of the product variants in the local currency. */
  priceRangeLocalCurrency: TaxedMoneyRange;
  /** The undiscounted price range of the product variants. */
  priceRangeUndiscounted: TaxedMoneyRange;
  /** The price without any discount. */
  priceUndiscounted: TaxedMoney;
};

export type ProductStockFilter = {
  quantity?: InputMaybe<IntRangeInput>;
  warehouseIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

/** ProductTranslation(id, language_code, seo_title, seo_description, product, name, description) */
export type ProductTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'ProductTranslation';
  /** Translated description of the product. */
  description?: Maybe<Scalars['JSONString']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  product: Product;
  seoDescription: Scalars['String']['output'];
  seoTitle: Scalars['String']['output'];
  /** List of product variant attribute values that can be translated. */
  values: Array<ValueTranslation>;
};

export type ProductTranslationCollectionTranslationCategoryTranslationAttributeTranslationValueTranslationPageTranslationShippingMethodTranslationSaleTranslationVoucherTranslationMenuItemTranslation = AttributeTranslation | CategoryTranslation | CollectionTranslation | MenuItemTranslation | PageTranslation | ProductTranslation | SaleTranslation | ShippingMethodTranslation | ValueTranslation | VoucherTranslation;

export type ProductUpdated = Event & ProductBase & {
  __typename: 'ProductUpdated';
  /** The category of the product. */
  category: Category;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The product the event relates to. */
  product: Product;
  /** The application receiving the webhook. */
  recipient: App;
};


export type ProductUpdatedProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ProductWithoutVariantError = ErrorInterface & {
  __typename: 'ProductWithoutVariantError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  products: Array<Scalars['ID']['output']>;
};

export type PublishableChannelListingInput = {
  channelId: Scalars['ID']['input'];
  isPublished: Scalars['Boolean']['input'];
  publishedAt: Scalars['DateTime']['input'];
};

export type Query = {
  __typename: 'Query';
  /** Look up an address by ID. */
  address: Address;
  /** Returns address validation rules. */
  addressValidationRules: AddressValidationData;
  /**
   * Look up an app by ID. If ID is not provided, return the currently authenticated app.
   *
   * Requires one of the following permissions: AUTHENTICATED_STAFF_USER AUTHENTICATED_APP. The authenticated app has access to its resources. Fetching different apps requires MANAGE_APPS permission.
   */
  app: App;
  /** Look up an app extension by ID. */
  appExtension: AppExtension;
  /** List of all app extensions. */
  appExtensions: AppExtensionConnection;
  /** List of the apps. */
  apps: AppConnection;
  /** List of all apps installations */
  appsInstallations: Array<AppInstallation>;
  /** Look up an attribute by ID. */
  attribute: Attribute;
  /** List of the shop's attributes. */
  attributes: AttributeConnection;
  /** List of the shop's categories. */
  categories: CategoryConnection;
  /** Look up a category by ID or slug. */
  category: Category;
  /** Look up a channel by ID or slug. */
  channel?: Maybe<Channel>;
  /** List of all channels. */
  channels: Array<Channel>;
  checkout: Checkout;
  /** List of checkout lines. */
  checkoutLines: CheckoutLineConnection;
  /** List of checkouts. */
  checkouts: CheckoutConnection;
  /** Look up a collection by ID. */
  collection: Collection;
  /** List of the shop's collections. */
  collections: CollectionConnection;
  /** List of the shop's customers. */
  customers: UserConnection;
  /** Look up digital content by ID. */
  digitalContent: DigitalContent;
  /** List of digital content. */
  digitalContents: DigitalContentConnection;
  /** Look up a export file by ID. */
  exportFile?: Maybe<ExportFile>;
  /** List of export files. */
  exportFiles: ExportFileConnection;
  /** Look up a gift card by ID. */
  giftCard: GiftCard;
  /** List of gift card currencies. */
  giftCardCurrencies: Array<Scalars['String']['output']>;
  /** Gift card related settings from site settings. */
  giftCardSettings: GiftCardSettings;
  /** List of gift card tags. */
  giftCardTags: GiftCardTagConnection;
  /** List of gift cards. */
  giftCards: GiftCardConnection;
  /** Look up permission group by ID. */
  group: Group;
  /** List of permission groups. */
  groups: GroupConnection;
  /** List of activity events to display on homepage (at the moment it only contains order-events). */
  homepageEvents: OrderEventConnection;
  /** Return the currently authenticated user. */
  me: User;
  /** List of the shop's media. */
  media: MediaItemConnection;
  /** Look up a media by ID or slug. */
  mediaItem: MediaItem;
  /** Look up a menu by ID, name, or slug. */
  menu: Menu;
  /** Look up a menu item by ID. */
  menuItem: MenuItem;
  /** List of the storefronts's menu items. */
  menuItems: MenuItemConnection;
  /** List of the storefront's menus. */
  menus: MenuConnection;
  /** Look up an order by ID. */
  order: Order;
  /** List of draft orders. */
  orderDrafts: OrderConnection;
  /** Order related settings from site settings. */
  orderSettings: OrderSettings;
  /** List of orders. */
  orders: OrderConnection;
  /** Return the total sales amount from a specific period. */
  ordersTotal: TaxedMoney;
  /** Look up a page by ID or slug. */
  page: Page;
  /** Look up a page type by ID. */
  pageKlass: PageKlass;
  /** List of the shop's page types. */
  pageKlasses: PageKlassConnection;
  /** List of the shop's pages. */
  pages: PageConnection;
  /** Look up a payment by ID. */
  payment: Payment;
  /** List of payments. */
  payments: PaymentConnection;
  /** Look up a plugin by ID. */
  plugin: Plugin;
  /** List of plugins. */
  plugins: PluginConnection;
  /** Look up a product by ID. */
  product: Product;
  /** Look up a product type by ID. */
  productKlass: ProductKlass;
  /** List of the shop's product types. */
  productKlasses: ProductKlassConnection;
  /** Look up a product variant by ID or SKU. */
  productVariant: Product;
  /** List of product variants. */
  productVariants: ProductConnection;
  /** List of the shop's products. */
  products: ProductConnection;
  /** List of top selling products. */
  reportProductSales: ProductConnection;
  /** Look up a sale by ID. */
  sale: Sale;
  /** List of the shop's sales. */
  sales: SaleConnection;
  /** Look up a shipping zone by ID. */
  shippingZone: ShippingZone;
  /** List of the shop's shipping zones. */
  shippingZones: ShippingZoneConnection;
  /** Return information about the shop. */
  shop: Site;
  /** List of the shop's staff users. */
  staffUsers: UserConnection;
  /** Look up a stock by ID */
  stock: Stock;
  /** List of stocks. */
  stocks: StockConnection;
  /** Look up a tax class. */
  taxClass: TaxClass;
  /** List of tax classes. */
  taxClasses: TaxClassConnection;
  /** Look up a tax configuration. */
  taxConfiguration: TaxConfiguration;
  /** List of tax configurations. */
  taxConfigurations: TaxConfigurationConnection;
  /** Tax class rates grouped by country. */
  taxCountryConfiguration: TaxCountryConfiguration;
  taxCountryConfigurations: Array<TaxCountryConfiguration>;
  /** List of all tax rates available from tax gateway. */
  taxTypes: Array<TaxType>;
  /** Look up a transaction by ID. */
  transaction: TransactionItem;
  /** Look up a translatable item by ID. */
  translation: TranslatableItem;
  /** Returns a list of all translatable items of a given kind. */
  translations: TranslatableItemConnection;
  /** Look up a user by ID or email address. */
  user: User;
  /** Look up a voucher by ID. */
  voucher: Voucher;
  /** List of the shop's vouchers. */
  vouchers: VoucherConnection;
  /** Look up a warehouse by ID. */
  warehouse: Warehouse;
  /** List of warehouses. */
  warehouses: WarehouseConnection;
  /** Look up a webhook by ID. */
  webhook: Webhook;
  /** Retrieve a sample payload for a given webhook event based on real data. Useful for some integrations where sample payload is required. */
  webhookSamplePayload: Scalars['JSONString']['output'];
};


export type QueryAddressArgs = {
  id: Scalars['ID']['input'];
};


export type QueryAddressValidationRulesArgs = {
  city?: InputMaybe<Scalars['String']['input']>;
  cityArea?: InputMaybe<Scalars['String']['input']>;
  countryArea?: InputMaybe<Scalars['String']['input']>;
  countryCode: CountryCode;
};


export type QueryAppArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type QueryAppExtensionArgs = {
  id: Scalars['ID']['input'];
};


export type QueryAppExtensionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AppExtensionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryAppsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AppFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<AppOrdering>;
};


export type QueryAttributeArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryAttributesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AttributeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<AttributeOrderingInput>;
};


export type QueryCategoriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<CategoryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<CategoryOrderingInput>;
};


export type QueryCategoryArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryChannelArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryCheckoutArgs = {
  id: Scalars['ID']['input'];
  languageCode?: InputMaybe<LanguageCode>;
};


export type QueryCheckoutLinesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryCheckoutsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<CheckoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<CheckoutOrderingInput>;
};


export type QueryCollectionArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryCollectionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<CollectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<CollectionOrderingInput>;
};


export type QueryCustomersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<CustomerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<UserOrderingInput>;
};


export type QueryDigitalContentArgs = {
  id: Scalars['ID']['input'];
};


export type QueryDigitalContentsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryExportFileArgs = {
  id: Scalars['ID']['input'];
};


export type QueryExportFilesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ExportFileFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<ExportFileOrderingInput>;
};


export type QueryGiftCardArgs = {
  id: Scalars['ID']['input'];
};


export type QueryGiftCardTagsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<GiftCardTagFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryGiftCardsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<GiftCardFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<GiftCardOrderingInput>;
};


export type QueryGroupArgs = {
  id: Scalars['ID']['input'];
};


export type QueryGroupsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<GroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<GroupOrderingInput>;
};


export type QueryHomepageEventsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryMediaArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<MediaFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<MediaOrderingInput>;
};


export type QueryMediaItemArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryMenuArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryMenuItemArgs = {
  channel: Scalars['String']['input'];
  id: Scalars['ID']['input'];
};


export type QueryMenuItemsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<MenuItemFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<MenuItemOrderingInput>;
};


export type QueryMenusArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<MenuOrderingInput>;
};


export type QueryOrderArgs = {
  id: Scalars['ID']['input'];
};


export type QueryOrderDraftsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<OrderDraftFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<OrderOrderingInput>;
};


export type QueryOrdersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<OrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<OrderOrderingInput>;
};


export type QueryOrdersTotalArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  period: ReportingPeriod;
};


export type QueryPageArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPageKlassArgs = {
  id: Scalars['ID']['input'];
};


export type QueryPageKlassesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<PageKlassFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<PageKlassOrderingInput>;
};


export type QueryPagesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<PageFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<PageOrderingInput>;
};


export type QueryPaymentArgs = {
  id: Scalars['ID']['input'];
};


export type QueryPaymentsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters: PaymentFilter;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryPluginArgs = {
  id: Scalars['ID']['input'];
};


export type QueryPluginsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<PluginFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<PluginOrderingInput>;
};


export type QueryProductArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};


export type QueryProductKlassArgs = {
  id: Scalars['ID']['input'];
};


export type QueryProductKlassesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ProductKlassFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<ProductKlassOrderingInput>;
};


export type QueryProductVariantArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};


export type QueryProductVariantsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<ProductOrdering>;
};


export type QueryProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<ProductOrderingInput>;
};


export type QueryReportProductSalesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  period: ReportingPeriod;
};


export type QuerySaleArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};


export type QuerySalesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<SaleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<SaleOrderingInput>;
};


export type QueryShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};


export type QueryShippingZonesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<ShippingZoneFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryStaffUsersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<StaffUserFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<UserOrderingInput>;
};


export type QueryStockArgs = {
  id: Scalars['ID']['input'];
};


export type QueryStocksArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter: StockFilter;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryTaxClassArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTaxClassesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<TaxClassFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<TaxClassOrderingInput>;
};


export type QueryTaxConfigurationArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTaxConfigurationsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<TaxConfigurationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryTaxCountryConfigurationArgs = {
  countryCode: CountryCode;
};


export type QueryTransactionArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTranslationArgs = {
  id: Scalars['ID']['input'];
  kind: TranslatableKinds;
};


export type QueryTranslationsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  kind: TranslatableKinds;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryUserArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type QueryVoucherArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};


export type QueryVouchersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<VoucherFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<VoucherOrderingInput>;
};


export type QueryWarehouseArgs = {
  id: Scalars['ID']['input'];
};


export type QueryWarehousesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<WarehouseFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<WarehouseOrderingInput>;
};


export type QueryWebhookArgs = {
  id: Scalars['ID']['input'];
};


export type QueryWebhookSamplePayloadArgs = {
  eventType: WebhookSampleEventType;
};

export type ReducedRate = {
  __typename: 'ReducedRate';
  /** Reduced VAT rate in percent. */
  rate: Scalars['Float']['output'];
  rateType: Scalars['String']['output'];
};

export type ReorderInput = {
  id: Scalars['ID']['input'];
  sortOrder: Scalars['Int']['input'];
};

export type ReportingPeriod =
  | 'THIS_MONTH'
  | 'TODAY';

/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type Sale = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Sale';
  /** List of categories this sale applies to. */
  categories: CategoryNodeConnection;
  /** List of channels available for the sale. */
  channelListings: Array<SaleChannelListing>;
  /** List of collections this sale applies to. */
  collections: CollectionConnection;
  createdAt: Scalars['DateTime']['output'];
  currency?: Maybe<Scalars['String']['output']>;
  /** Sale value. */
  discountValue: Scalars['Float']['output'];
  endDate: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** List of products this sale applies to. */
  products: ProductNodeConnection;
  startDate: Scalars['DateTime']['output'];
  translation?: Maybe<SaleTranslation>;
  type: SaleType;
  updatedAt: Scalars['DateTime']['output'];
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SaleCategoriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SaleCollectionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SaleMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SaleMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SalePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SalePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SaleProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SaleTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

export type SaleBase = {
  /** The sale the event relates to. */
  sale: Sale;
};


export type SaleBaseSaleArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** SaleChannelListing(id, channel, sale, discount_value) */
export type SaleChannelListing = Node & TempoNode & {
  __typename: 'SaleChannelListing';
  channel: Channel;
  currency: Scalars['String']['output'];
  discountValue: Scalars['Float']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
};

export type SaleChannelListingAddInput = {
  channelId: Scalars['ID']['input'];
  discountValue: Scalars['PositiveDecimal']['input'];
};

export type SaleChannelListingInput = {
  addChannels?: InputMaybe<Array<SaleChannelListingAddInput>>;
  removeChannels?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type SaleConnection = {
  __typename: 'SaleConnection';
  /** Contains the nodes in this connection */
  edges: Array<SaleEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SaleCreated = Event & SaleBase & {
  __typename: 'SaleCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The sale the event relates to. */
  sale: Sale;
};


export type SaleCreatedSaleArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type SaleDeleted = Event & SaleBase & {
  __typename: 'SaleDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The sale the event relates to. */
  sale: Sale;
};


export type SaleDeletedSaleArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** An edge in a connection. */
export type SaleEdge = {
  __typename: 'SaleEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Sale;
};

/**
 * Sales allow creating discounts for categories, collections or products
 * and are visible to all the customers.".
 */
export type SaleFilter = {
  AND?: InputMaybe<SaleFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<SaleFilter>;
  OR?: InputMaybe<SaleFilter>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  saleType?: InputMaybe<DiscountValueType>;
  search?: InputMaybe<Scalars['String']['input']>;
  started?: InputMaybe<DateTimeRangeInput>;
  status?: InputMaybe<Array<DiscountStatus>>;
  updatedAt?: InputMaybe<DateTimeRangeInput>;
};

export type SaleInput = {
  categories: Array<Scalars['ID']['input']>;
  collections: Array<Scalars['ID']['input']>;
  endDate: Scalars['DateTime']['input'];
  name: Scalars['String']['input'];
  products: Array<Scalars['ID']['input']>;
  startDate: Scalars['DateTime']['input'];
  type: DiscountValueType;
  value: Scalars['PositiveDecimal']['input'];
  variants: Array<Scalars['ID']['input']>;
};

export type SaleMutationResult = BaseMutationResult & {
  __typename: 'SaleMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Sale;
};

export type SaleOrdering =
  | 'CREATED_AT'
  | 'END_DATE'
  | 'LAST_MODIFIED_AT'
  | 'NAME'
  | 'START_DATE'
  | 'TYPE'
  | 'VALUE';

export type SaleOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<SaleOrdering>;
};

export type SaleToggle = Event & SaleBase & {
  __typename: 'SaleToggle';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The sale the event relates to. */
  sale: Sale;
};


export type SaleToggleSaleArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** SaleTranslation(id, language_code, name, sale) */
export type SaleTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'SaleTranslation';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  sale: Sale;
};

export type SaleType =
  | 'FIXED'
  | 'PERCENTAGE';

export type SaleUpdated = Event & SaleBase & {
  __typename: 'SaleUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The sale the event relates to. */
  sale: Sale;
};


export type SaleUpdatedSaleArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type SeoInput = {
  description: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type ShippingError = ErrorInterface & {
  __typename: 'ShippingError';
  /** List of channels IDs which causes the error. */
  channels?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of warehouse IDs which causes the error. */
  warehouses?: Maybe<Array<Scalars['ID']['output']>>;
};

export type ShippingErrorCode =
  | 'ALREADY_EXISTS'
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'MAX_LESS_THAN_MIN'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

export type ShippingListMethodsForCheckout = CheckoutBase & Event & {
  __typename: 'ShippingListMethodsForCheckout';
  /** The checkout the event relates to. */
  checkout: Checkout;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** Shipping methods that can be used with this checkout. */
  shippingMethods: Array<ShippingMethod>;
};

/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethod = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'ShippingMethod';
  active: Scalars['Boolean']['output'];
  /** List of channels available for the method. */
  channelListings: Array<ShippingMethodChannelListing>;
  description?: Maybe<Scalars['JSONString']['output']>;
  excludedProducts: ProductConnection;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Maximum number of days for delivery. */
  maximumDeliveryDays?: Maybe<Scalars['Int']['output']>;
  /** The price of the cheapest variant (including discounts). */
  maximumOrderPrice: Money;
  maximumOrderWeight?: Maybe<Scalars['Weight']['output']>;
  message: Scalars['String']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  /** Minimal number of days for delivery. */
  minimumDeliveryDays?: Maybe<Scalars['Int']['output']>;
  minimumOrderPrice: Money;
  /** Minimum order weight to use this shipping method. */
  minimumOrderWeight: Scalars['Weight']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Postal code ranges rule of exclusion or inclusion of the shipping method. */
  postalCodeRules: Array<ShippingMethodPostalCodeRule>;
  price: Money;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  taxClass?: Maybe<TaxClass>;
  translation?: Maybe<ShippingMethodTranslation>;
};


/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethodExcludedProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethodMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethodMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethodPriceArgs = {
  channelId?: InputMaybe<Scalars['Int']['input']>;
};


/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethodPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethodPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** A shipping method that can be used for orders and checkouts. */
export type ShippingMethodTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

/** ShippingMethodChannelListing(id, channel, object, currency, minimum_order_price, maximum_order_price, minimum_order_weight, maximum_order_weight, price) */
export type ShippingMethodChannelListing = Node & TempoNode & {
  __typename: 'ShippingMethodChannelListing';
  channel: Channel;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  maximumOrderPrice: Money;
  minimumOrderPrice: Money;
  pk: Scalars['String']['output'];
  price: Money;
};

export type ShippingMethodChannelListingAddInput = {
  channelId: Scalars['ID']['input'];
  maximumOrderPrice: Scalars['PositiveDecimal']['input'];
  minimumOrderPrice: Scalars['PositiveDecimal']['input'];
  price: Scalars['PositiveDecimal']['input'];
};

export type ShippingMethodChannelListingInput = {
  addChannels?: InputMaybe<Array<ShippingMethodChannelListingAddInput>>;
  removeChannels?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ShippingMethodChannelListingMutationResult = BaseMutationResult & {
  __typename: 'ShippingMethodChannelListingMutationResult';
  channelListing: ShippingMethodChannelListing;
  errors?: Maybe<Array<ErrorInterface>>;
  shippingMethod: ShippingMethod;
};

export type ShippingMethodMutationResult = BaseMutationResult & {
  __typename: 'ShippingMethodMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: ShippingMethod;
};

/** Shipping method postal code rule. */
export type ShippingMethodPostalCodeRule = Node & TempoNode & {
  __typename: 'ShippingMethodPostalCodeRule';
  /** End address range. */
  end: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Inclusion type of the postal code rule. */
  inclusionType: PostalCodeRuleInclusionType;
  pk: Scalars['String']['output'];
  /** Start address range. */
  start: Scalars['String']['output'];
};

/** ShippingMethodTranslation(id, language_code, name, shipping_method, description) */
export type ShippingMethodTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'ShippingMethodTranslation';
  /** Translated description of the shipping method. */
  description?: Maybe<Scalars['JSONString']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  shippingMethod: ShippingMethod;
};

export type ShippingPostalCodeRulesCreationInputRange = {
  end?: InputMaybe<Scalars['String']['input']>;
  start: Scalars['String']['input'];
};

export type ShippingPrice = {
  __typename: 'ShippingPrice';
  /** A shipping method to create. */
  shippingMethod: ShippingMethod;
  /** A shipping zone to which the shipping method belongs. */
  shippingZone: ShippingZone;
};

export type ShippingPriceBase = {
  /** The shipping method the event relates to. */
  shippingMethod: ShippingMethod;
  /** The shipping zone the shipping method belongs to. */
  shippingZone: ShippingZone;
};


export type ShippingPriceBaseShippingMethodArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


export type ShippingPriceBaseShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ShippingPriceCreated = Event & ShippingPriceBase & {
  __typename: 'ShippingPriceCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The shipping method the event relates to. */
  shippingMethod: ShippingMethod;
  /** The shipping zone the shipping method belongs to. */
  shippingZone: ShippingZone;
};


export type ShippingPriceCreatedShippingMethodArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


export type ShippingPriceCreatedShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ShippingPriceDeleted = Event & ShippingPriceBase & {
  __typename: 'ShippingPriceDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The shipping method the event relates to. */
  shippingMethod: ShippingMethod;
  /** The shipping zone the shipping method belongs to. */
  shippingZone: ShippingZone;
};


export type ShippingPriceDeletedShippingMethodArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


export type ShippingPriceDeletedShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ShippingPriceExcludeProductsInput = {
  products: Array<Scalars['ID']['input']>;
};

export type ShippingPriceInput = {
  addPostalCodeRules: Array<ShippingPostalCodeRulesCreationInputRange>;
  deletePostalCodeRules: Array<Scalars['ID']['input']>;
  description?: InputMaybe<Scalars['JSONString']['input']>;
  inclusionType: PostalCodeRuleInclusionType;
  maximumDeliveryDays?: InputMaybe<Scalars['Int']['input']>;
  maximumOrderWeight: Scalars['Weight']['input'];
  minimumDeliveryDays?: InputMaybe<Scalars['Int']['input']>;
  minimumOrderWeight: Scalars['Weight']['input'];
  name: Scalars['String']['input'];
  shippingZone: Scalars['ID']['input'];
  taxClass?: InputMaybe<Scalars['ID']['input']>;
};

export type ShippingPriceMutationResult = BaseMutationResult & {
  __typename: 'ShippingPriceMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: ShippingPrice;
};

export type ShippingPriceRemoveProductFromExcludeMutationResult = BaseMutationResult & {
  __typename: 'ShippingPriceRemoveProductFromExcludeMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** A shipping method with new list of excluded products. */
  shippingMethod: ShippingMethod;
};

export type ShippingPriceTranslationInput = {
  description?: InputMaybe<Scalars['JSONString']['input']>;
  name: Scalars['String']['input'];
};

export type ShippingPriceUpdated = Event & ShippingPriceBase & {
  __typename: 'ShippingPriceUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The shipping method the event relates to. */
  shippingMethod: ShippingMethod;
  /** The shipping zone the shipping method belongs to. */
  shippingZone: ShippingZone;
};


export type ShippingPriceUpdatedShippingMethodArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};


export type ShippingPriceUpdatedShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/**
 * A shipping zone defined by the shop.
 *
 * Zones are used only for grouping shipping methods in the dashboard
 * and are never exposed to customers directly.
 */
export type ShippingZone = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'ShippingZone';
  channels: Array<Channel>;
  /** List of countries available for the method. */
  countries: Array<Country>;
  default: Scalars['Boolean']['output'];
  description: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Lowest and highest prices for the shipping. */
  priceRange?: Maybe<MoneyRange>;
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  shippingMethods: Array<ShippingMethod>;
  /** List of warehouses for shipping zone. */
  warehouses: Array<Warehouse>;
};


/**
 * A shipping zone defined by the shop.
 *
 * Zones are used only for grouping shipping methods in the dashboard
 * and are never exposed to customers directly.
 */
export type ShippingZoneMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A shipping zone defined by the shop.
 *
 * Zones are used only for grouping shipping methods in the dashboard
 * and are never exposed to customers directly.
 */
export type ShippingZoneMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A shipping zone defined by the shop.
 *
 * Zones are used only for grouping shipping methods in the dashboard
 * and are never exposed to customers directly.
 */
export type ShippingZonePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A shipping zone defined by the shop.
 *
 * Zones are used only for grouping shipping methods in the dashboard
 * and are never exposed to customers directly.
 */
export type ShippingZonePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type ShippingZoneBase = {
  /** The shipping zone the event relates to. */
  shippingZone: ShippingZone;
};


export type ShippingZoneBaseShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ShippingZoneConnection = {
  __typename: 'ShippingZoneConnection';
  /** Contains the nodes in this connection */
  edges: Array<ShippingZoneEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ShippingZoneCreated = Event & ShippingZoneBase & {
  __typename: 'ShippingZoneCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The shipping zone the event relates to. */
  shippingZone: ShippingZone;
};


export type ShippingZoneCreatedShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ShippingZoneCreationInput = {
  addChannels: Array<Scalars['ID']['input']>;
  addWarehouses: Array<Scalars['ID']['input']>;
  countries: Array<Scalars['String']['input']>;
  default: Scalars['Boolean']['input'];
  description: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type ShippingZoneDeleted = Event & ShippingZoneBase & {
  __typename: 'ShippingZoneDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The shipping zone the event relates to. */
  shippingZone: ShippingZone;
};


export type ShippingZoneDeletedShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

/** An edge in a connection. */
export type ShippingZoneEdge = {
  __typename: 'ShippingZoneEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: ShippingZone;
};

/**
 * A shipping zone defined by the shop.
 *
 * Zones are used only for grouping shipping methods in the dashboard
 * and are never exposed to customers directly.
 */
export type ShippingZoneFilter = {
  AND?: InputMaybe<ShippingZoneFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<ShippingZoneFilter>;
  OR?: InputMaybe<ShippingZoneFilter>;
  channels?: InputMaybe<Array<Scalars['ID']['input']>>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type ShippingZoneMetadataUpdated = Event & ShippingZoneBase & {
  __typename: 'ShippingZoneMetadataUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The shipping zone the event relates to. */
  shippingZone: ShippingZone;
};


export type ShippingZoneMetadataUpdatedShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ShippingZoneMutationResult = BaseMutationResult & {
  __typename: 'ShippingZoneMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: ShippingZone;
};

export type ShippingZoneUpdateInput = {
  addChannels: Array<Scalars['ID']['input']>;
  addWarehouses: Array<Scalars['ID']['input']>;
  countries: Array<Scalars['String']['input']>;
  default: Scalars['Boolean']['input'];
  description: Scalars['String']['input'];
  name: Scalars['String']['input'];
  removeChannels: Array<Scalars['ID']['input']>;
  removeWarehouses: Array<Scalars['ID']['input']>;
};

export type ShippingZoneUpdated = Event & ShippingZoneBase & {
  __typename: 'ShippingZoneUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The shipping zone the event relates to. */
  shippingZone: ShippingZone;
};


export type ShippingZoneUpdatedShippingZoneArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type ShopErrorCode =
  | 'ALREADY_EXISTS'
  | 'CANNOT_FETCH_TAX_RATES'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/** Site(id, domain, name, site_ptr, company_address, default_channel, description, logo, top_menu, bottom_menu, track_inventory_by_default, default_weight_unit, auto_confirm_all_new_orders, auto_approve_fulfillment, fulfillment_allow_unpaid, fulfill_before_payment, auto_fulfill_digital_products, default_digital_max_downloads, default_digital_url_valid_days, default_mail_sender_name, default_mail_sender_address, customer_set_password_url, reserve_stock_duration_anonymous_user, reserve_stock_duration_authenticated_user, enable_unauthenticated_checkout, max_item_count_per_checkout, gift_card_expiry_type, gift_card_expiry_period_type, gift_card_expiry_period, auto_fulfill_non_shippable_gift_card, allowed_states) */
export type ShopSettingsUpdateInput = {
  autoApproveFulfillment?: InputMaybe<Scalars['Boolean']['input']>;
  autoFulfillDigitalProducts?: InputMaybe<Scalars['Boolean']['input']>;
  /** URL of a view where customers can set their password. */
  customerSetPasswordUrl?: InputMaybe<Scalars['String']['input']>;
  defaultDigitalMaxDownloads?: InputMaybe<Scalars['Int']['input']>;
  defaultDigitalUrlValidDays?: InputMaybe<Scalars['Int']['input']>;
  defaultMailSenderAddress?: InputMaybe<Scalars['String']['input']>;
  defaultMailSenderName?: InputMaybe<Scalars['String']['input']>;
  defaultWeightUnit?: InputMaybe<WeightUnit>;
  description?: InputMaybe<Scalars['String']['input']>;
  /** Allow orders to be fulfilled before payment is received */
  fulfillmentAllowUnpaid?: InputMaybe<Scalars['Boolean']['input']>;
  /** Default number of maximum line quantity in single checkout. Minimum possible value is 1. Default value is 50. */
  maxItemCountPerCheckout?: InputMaybe<Scalars['Int']['input']>;
  /** Duration in minutes */
  reserveStockDurationAnonymousUser?: InputMaybe<Scalars['Int']['input']>;
  /** Duration in minutes */
  reserveStockDurationAuthenticatedUser?: InputMaybe<Scalars['Int']['input']>;
  trackInventoryByDefault?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Site(id, domain, name, site_ptr, company_address, default_channel, description, logo, top_menu, bottom_menu, track_inventory_by_default, default_weight_unit, auto_confirm_all_new_orders, auto_approve_fulfillment, fulfillment_allow_unpaid, fulfill_before_payment, auto_fulfill_digital_products, default_digital_max_downloads, default_digital_url_valid_days, default_mail_sender_name, default_mail_sender_address, customer_set_password_url, reserve_stock_duration_anonymous_user, reserve_stock_duration_authenticated_user, enable_unauthenticated_checkout, max_item_count_per_checkout, gift_card_expiry_type, gift_card_expiry_period_type, gift_card_expiry_period, auto_fulfill_non_shippable_gift_card, allowed_states) */
export type Site = Node & TempoNode & {
  __typename: 'Site';
  /** US states in which business is permitted */
  allowedStates: Array<StateCode>;
  /** Automatically approve all new fulfillments. */
  autoApproveFulfillment: Scalars['Boolean']['output'];
  /** Enable automatic fulfillment for all digital products. */
  autoFulfillDigitalProducts: Scalars['Boolean']['output'];
  /** List of available external authentications. */
  availableExternalAuthentications: Array<ExternalAuthentication>;
  /** List of available payment gateways. */
  availablePaymentGateways: Array<PaymentGateway>;
  /** Shipping methods that are available for the shop. */
  availableShippingMethods?: Maybe<Array<ShippingMethod>>;
  /** List of all currencies supported by site's channels. */
  channelCurrencies: Array<Scalars['String']['output']>;
  companyAddress?: Maybe<Address>;
  /** List of countries available in the shop. */
  countries: Array<Country>;
  customerSetPasswordUrl?: Maybe<Scalars['String']['output']>;
  defaultCountry: Country;
  /** Default number of max downloads per digital content URL. */
  defaultDigitalMaxDownloads?: Maybe<Scalars['Int']['output']>;
  /** Default number of days which digital content URL will be valid. */
  defaultDigitalUrlValidDays?: Maybe<Scalars['Int']['output']>;
  /** Default shop's email sender's address. */
  defaultMailSenderAddress: Scalars['String']['output'];
  /** Default shop's email sender's name. */
  defaultMailSenderName: Scalars['String']['output'];
  /** Default weight unit. */
  defaultWeightUnit: WeightUnit;
  /** Shop's description. */
  description: Scalars['String']['output'];
  /** Shop's domain. */
  domain: Scalars['String']['output'];
  /** Allow unauthenticated users to checkout. */
  enableUnauthenticatedCheckout: Scalars['Boolean']['output'];
  /** Allow to approve fulfillments which are unpaid. */
  fulfillmentAllowUnpaid: Scalars['Boolean']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** List of the shops's supported languages. */
  languages: Array<LanguageDisplay>;
  /** Resource limitations and current usage if any set for a shop */
  limits: LimitInfo;
  /** Shop's logo. */
  logo?: Maybe<Image>;
  /** Default number of maximum line quantity in single checkout (per single checkout line). */
  maxItemCountPerCheckout?: Maybe<Scalars['Int']['output']>;
  /** Shop's name. */
  name: Scalars['String']['output'];
  /** List of available permissions. */
  permissions: Array<Permission>;
  /** List of possible phone prefixes. */
  phonePrefixes: Array<Scalars['String']['output']>;
  pk: Scalars['String']['output'];
  /** Default number of minutes stock will be reserved for anonymous checkout or null when stock reservation is disabled. */
  reserveStockDurationAnonymousUser?: Maybe<Scalars['Int']['output']>;
  /** Default number of minutes stock will be reserved for authenticated checkout or null when stock reservation is disabled. */
  reserveStockDurationAuthenticatedUser?: Maybe<Scalars['Int']['output']>;
  /** List of staff notification recipients. */
  staffNotificationRecipients?: Maybe<Array<StaffNotificationRecipient>>;
  /** Enable inventory tracking. */
  trackInventoryByDefault: Scalars['Boolean']['output'];
  translation?: Maybe<SiteTranslation>;
  /** Tempo API version. */
  version?: Maybe<Scalars['String']['output']>;
};


/** Site(id, domain, name, site_ptr, company_address, default_channel, description, logo, top_menu, bottom_menu, track_inventory_by_default, default_weight_unit, auto_confirm_all_new_orders, auto_approve_fulfillment, fulfillment_allow_unpaid, fulfill_before_payment, auto_fulfill_digital_products, default_digital_max_downloads, default_digital_url_valid_days, default_mail_sender_name, default_mail_sender_address, customer_set_password_url, reserve_stock_duration_anonymous_user, reserve_stock_duration_authenticated_user, enable_unauthenticated_checkout, max_item_count_per_checkout, gift_card_expiry_type, gift_card_expiry_period_type, gift_card_expiry_period, auto_fulfill_non_shippable_gift_card, allowed_states) */
export type SiteAvailablePaymentGatewaysArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
};


/** Site(id, domain, name, site_ptr, company_address, default_channel, description, logo, top_menu, bottom_menu, track_inventory_by_default, default_weight_unit, auto_confirm_all_new_orders, auto_approve_fulfillment, fulfillment_allow_unpaid, fulfill_before_payment, auto_fulfill_digital_products, default_digital_max_downloads, default_digital_url_valid_days, default_mail_sender_name, default_mail_sender_address, customer_set_password_url, reserve_stock_duration_anonymous_user, reserve_stock_duration_authenticated_user, enable_unauthenticated_checkout, max_item_count_per_checkout, gift_card_expiry_type, gift_card_expiry_period_type, gift_card_expiry_period, auto_fulfill_non_shippable_gift_card, allowed_states) */
export type SiteAvailableShippingMethodsArgs = {
  address?: InputMaybe<AddressUpdateInput>;
  channelSlug?: InputMaybe<Scalars['String']['input']>;
};


/** Site(id, domain, name, site_ptr, company_address, default_channel, description, logo, top_menu, bottom_menu, track_inventory_by_default, default_weight_unit, auto_confirm_all_new_orders, auto_approve_fulfillment, fulfillment_allow_unpaid, fulfill_before_payment, auto_fulfill_digital_products, default_digital_max_downloads, default_digital_url_valid_days, default_mail_sender_name, default_mail_sender_address, customer_set_password_url, reserve_stock_duration_anonymous_user, reserve_stock_duration_authenticated_user, enable_unauthenticated_checkout, max_item_count_per_checkout, gift_card_expiry_type, gift_card_expiry_period_type, gift_card_expiry_period, auto_fulfill_non_shippable_gift_card, allowed_states) */
export type SiteCountriesArgs = {
  filters?: InputMaybe<CountryFilter>;
  languageCode?: InputMaybe<LanguageCode>;
};


/** Site(id, domain, name, site_ptr, company_address, default_channel, description, logo, top_menu, bottom_menu, track_inventory_by_default, default_weight_unit, auto_confirm_all_new_orders, auto_approve_fulfillment, fulfillment_allow_unpaid, fulfill_before_payment, auto_fulfill_digital_products, default_digital_max_downloads, default_digital_url_valid_days, default_mail_sender_name, default_mail_sender_address, customer_set_password_url, reserve_stock_duration_anonymous_user, reserve_stock_duration_authenticated_user, enable_unauthenticated_checkout, max_item_count_per_checkout, gift_card_expiry_type, gift_card_expiry_period_type, gift_card_expiry_period, auto_fulfill_non_shippable_gift_card, allowed_states) */
export type SiteLogoArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
};


/** Site(id, domain, name, site_ptr, company_address, default_channel, description, logo, top_menu, bottom_menu, track_inventory_by_default, default_weight_unit, auto_confirm_all_new_orders, auto_approve_fulfillment, fulfillment_allow_unpaid, fulfill_before_payment, auto_fulfill_digital_products, default_digital_max_downloads, default_digital_url_valid_days, default_mail_sender_name, default_mail_sender_address, customer_set_password_url, reserve_stock_duration_anonymous_user, reserve_stock_duration_authenticated_user, enable_unauthenticated_checkout, max_item_count_per_checkout, gift_card_expiry_type, gift_card_expiry_period_type, gift_card_expiry_period, auto_fulfill_non_shippable_gift_card, allowed_states) */
export type SiteTranslationArgs = {
  languageCode: LanguageCode;
};

export type SiteDomainInput = {
  domain: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type SiteMutationResult = BaseMutationResult & {
  __typename: 'SiteMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Site;
};

/** SiteTranslation(id, language_code, site, description) */
export type SiteTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'SiteTranslation';
  description: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  pk: Scalars['String']['output'];
};

export type SiteTranslationInput = {
  description: Scalars['String']['input'];
};

export type SiteTranslationMutationResult = BaseMutationResult & {
  __typename: 'SiteTranslationMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  shop: Site;
};

/** Width and height in pixels */
export type Size = {
  __typename: 'Size';
  height: Scalars['Int']['output'];
  width: Scalars['Int']['output'];
};

export type StaffCreated = Event & UserBase & {
  __typename: 'StaffCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The user the event relates to. */
  user: User;
};

export type StaffCreationInput = {
  addGroups?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** Email address */
  email: Scalars['String']['input'];
  /** Given name */
  firstName?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  languageCode?: InputMaybe<LanguageCode>;
  /** Family name */
  lastName?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  redirectUrl: Scalars['String']['input'];
};

export type StaffDeleted = Event & UserBase & {
  __typename: 'StaffDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The user the event relates to. */
  user: User;
};

export type StaffError = ErrorInterface & {
  __typename: 'StaffError';
  /** A type of address that causes the error. */
  addressType?: Maybe<AddressType>;
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** List of permission group IDs which cause the error. */
  groups?: Maybe<Array<Scalars['ID']['output']>>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of permissions which causes the error. */
  permissions?: Maybe<Array<PermissionCode>>;
  /** List of user IDs which causes the error. */
  users?: Maybe<Array<Scalars['ID']['output']>>;
};

export type StaffMemberStatus =
  | 'ACTIVE'
  | 'DEACTIVATED';

/**
 * A recipient of email notifications, such as notifications about new orders.
 * Notifications can be assigned to staff users or arbitrary email addresses.".
 */
export type StaffNotificationRecipient = Node & TempoNode & {
  __typename: 'StaffNotificationRecipient';
  /** Determines whether the notification is active. */
  active: Scalars['Boolean']['output'];
  /** Returns email address of a user subscribed to email notifications. */
  email?: Maybe<Scalars['String']['output']>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
  user?: Maybe<User>;
};

export type StaffNotificationRecipientInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<Scalars['ID']['input']>;
};

export type StaffNotificationRecipientMutationResult = BaseMutationResult & {
  __typename: 'StaffNotificationRecipientMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: StaffNotificationRecipient;
};

export type StaffUpdateInput = {
  addGroups?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** Email address */
  email: Scalars['String']['input'];
  /** Given name */
  firstName?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  languageCode?: InputMaybe<LanguageCode>;
  /** Family name */
  lastName?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  removeGroups?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StaffUpdated = Event & UserBase & {
  __typename: 'StaffUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The user the event relates to. */
  user: User;
};

/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type StaffUserFilter = {
  AND?: InputMaybe<StaffUserFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<StaffUserFilter>;
  OR?: InputMaybe<StaffUserFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  search?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<StaffMemberStatus>;
};

export type StateCode =
  | 'AK'
  | 'AL'
  | 'AR'
  | 'AS'
  | 'AZ'
  | 'CA'
  | 'CO'
  | 'CT'
  | 'DC'
  | 'DE'
  | 'FL'
  | 'GA'
  | 'GU'
  | 'HI'
  | 'IA'
  | 'ID'
  | 'IL'
  | 'IN'
  | 'KS'
  | 'KY'
  | 'LA'
  | 'MA'
  | 'MD'
  | 'ME'
  | 'MI'
  | 'MN'
  | 'MO'
  | 'MP'
  | 'MS'
  | 'MT'
  | 'NC'
  | 'ND'
  | 'NE'
  | 'NH'
  | 'NJ'
  | 'NM'
  | 'NV'
  | 'NY'
  | 'OH'
  | 'OK'
  | 'OR'
  | 'PA'
  | 'PR'
  | 'RI'
  | 'SC'
  | 'SD'
  | 'TN'
  | 'TX'
  | 'UM'
  | 'UT'
  | 'VA'
  | 'VI'
  | 'VT'
  | 'WA'
  | 'WI'
  | 'WV'
  | 'WY';

/** Stock(id, warehouse, product, quantity, quantity_allocated) */
export type Stock = Node & TempoNode & {
  __typename: 'Stock';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
  productVariant: Product;
  /** Quantity of a product in the warehouse's possession, including the allocated stock that is waiting for shipment. */
  quantity: Scalars['Int']['output'];
  /** Quantity allocated for orders. */
  quantityAllocated: Scalars['Int']['output'];
  /** Quantity reserved for checkouts. */
  quantityReserved: Scalars['Int']['output'];
  warehouse: Warehouse;
};

export type StockAvailability =
  | 'IN_STOCK'
  | 'OUT_OF_STOCK';

export type StockConnection = {
  __typename: 'StockConnection';
  /** Contains the nodes in this connection */
  edges: Array<StockEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type StockEdge = {
  __typename: 'StockEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Stock;
};

export type StockErrorCode =
  | 'ALREADY_EXISTS'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/** Stock(id, warehouse, product, quantity, quantity_allocated) */
export type StockFilter = {
  AND?: InputMaybe<StockFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<StockFilter>;
  OR?: InputMaybe<StockFilter>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type StockInput = {
  quantity: Scalars['Int']['input'];
  warehouse: Scalars['ID']['input'];
};

/** Represents the channel stock settings. */
export type StockSettings = {
  __typename: 'StockSettings';
  allocationStrategy: AllocationStrategy;
};

export type StockSettingsInput = {
  allocationStrategy: AllocationStrategy;
};

export type StorePaymentMethod =
  | 'NONE'
  | 'OFF_SESSION'
  | 'ON_SESSION';

export type Subscription = Event & {
  __typename: 'Subscription';
  /** Look up subscription event. */
  event: Event;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** Synchronous webhook event. */
export type SyncWebhookEvent = Node & TempoNode & {
  __typename: 'SyncWebhookEvent';
  /** Internal name of the event type. */
  eventType: WebhookEventTypeSync;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
};

export type TaxCalculationStrategy =
  | 'FLAT_RATES'
  | 'TAX_APP';

/**
 * A named object used to define tax rates per country.
 *
 * Tax class can be assigned to product types, products and shipping methods to
 * define their tax rates.
 */
export type TaxClass = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'TaxClass';
  /** Country-specific tax rates for this tax class. */
  countries: Array<TaxClassCountryRate>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  /** Name of the tax class. */
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
};


/**
 * A named object used to define tax rates per country.
 *
 * Tax class can be assigned to product types, products and shipping methods to
 * define their tax rates.
 */
export type TaxClassMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A named object used to define tax rates per country.
 *
 * Tax class can be assigned to product types, products and shipping methods to
 * define their tax rates.
 */
export type TaxClassMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * A named object used to define tax rates per country.
 *
 * Tax class can be assigned to product types, products and shipping methods to
 * define their tax rates.
 */
export type TaxClassPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * A named object used to define tax rates per country.
 *
 * Tax class can be assigned to product types, products and shipping methods to
 * define their tax rates.
 */
export type TaxClassPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type TaxClassConnection = {
  __typename: 'TaxClassConnection';
  /** Contains the nodes in this connection */
  edges: Array<TaxClassEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** TaxClassCountryRate(id, tax_class, country, rate) */
export type TaxClassCountryRate = {
  __typename: 'TaxClassCountryRate';
  /** Country in which this tax rate applies. */
  country: Country;
  rate: Scalars['PositiveDecimal']['output'];
  /** Related tax class. */
  taxClass?: Maybe<TaxClass>;
};

export type TaxClassCreateError = ErrorInterface & {
  __typename: 'TaxClassCreateError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  countryCodes: Array<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
};

export type TaxClassCreateErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND';

export type TaxClassCreationInput = {
  createCountryRates: Array<CountryRateInput>;
  name: Scalars['String']['input'];
};

export type TaxClassDeleteError = ErrorInterface & {
  __typename: 'TaxClassDeleteError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** List of country codes for which the configuration is invalid. */
  countryCodes: Array<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
};

export type TaxClassDeleteErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND';

/** An edge in a connection. */
export type TaxClassEdge = {
  __typename: 'TaxClassEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: TaxClass;
};

/**
 * A named object used to define tax rates per country.
 *
 * Tax class can be assigned to product types, products and shipping methods to
 * define their tax rates.
 */
export type TaxClassFilter = {
  AND?: InputMaybe<TaxClassFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<TaxClassFilter>;
  OR?: InputMaybe<TaxClassFilter>;
  countries?: InputMaybe<Array<CountryCode>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
};

export type TaxClassMutationResult = BaseMutationResult & {
  __typename: 'TaxClassMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: TaxClass;
};

export type TaxClassOrdering =
  | 'NAME';

export type TaxClassOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<TaxClassOrdering>;
};

export type TaxClassRateInput = {
  rate?: InputMaybe<Scalars['Float']['input']>;
  taxClassId?: InputMaybe<Scalars['ID']['input']>;
};

export type TaxClassUpdateError = ErrorInterface & {
  __typename: 'TaxClassUpdateError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** List of country codes for which the configuration is invalid. */
  countryCodes: Array<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
};

export type TaxClassUpdateErrorCode =
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND';

export type TaxClassUpdateInput = {
  name: Scalars['String']['input'];
  removeCountryRates: Array<CountryCode>;
  updateCountryRates: Array<CountryRateUpdateInput>;
};

/** Channel-specific tax configuration. */
export type TaxConfiguration = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'TaxConfiguration';
  channel: Channel;
  chargeTaxes: Scalars['Boolean']['output'];
  /** List of country-specific exceptions in tax configuration. */
  countries: Array<TaxConfigurationPerCountry>;
  /** Determines whether prices displayed in a storefront should include taxes. */
  displayGrossPrices: Scalars['Boolean']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  pk: Scalars['String']['output'];
  /** Determines whether prices are entered with the tax included. */
  pricesEnteredWithTax: Scalars['Boolean']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** The default strategy to use for tax calculation in the given channel. Taxes can be calculated either using user-defined flat rates or with a tax app. Empty value means that no method is selected and taxes are not calculated. */
  taxCalculationStrategy?: Maybe<TaxCalculationStrategy>;
};


/** Channel-specific tax configuration. */
export type TaxConfigurationMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Channel-specific tax configuration. */
export type TaxConfigurationMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Channel-specific tax configuration. */
export type TaxConfigurationPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Channel-specific tax configuration. */
export type TaxConfigurationPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

export type TaxConfigurationConnection = {
  __typename: 'TaxConfigurationConnection';
  /** Contains the nodes in this connection */
  edges: Array<TaxConfigurationEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type TaxConfigurationEdge = {
  __typename: 'TaxConfigurationEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: TaxConfiguration;
};

/** Channel-specific tax configuration. */
export type TaxConfigurationFilter = {
  AND?: InputMaybe<TaxConfigurationFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<TaxConfigurationFilter>;
  OR?: InputMaybe<TaxConfigurationFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
};

export type TaxConfigurationMutationResult = BaseMutationResult & {
  __typename: 'TaxConfigurationMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: TaxConfiguration;
};

/** Country-specific exceptions of a channel's tax configuration. */
export type TaxConfigurationPerCountry = Node & TempoNode & {
  __typename: 'TaxConfigurationPerCountry';
  chargeTaxes: Scalars['Boolean']['output'];
  /** Country in which this configuration applies. */
  country: Country;
  /** Determines whether prices displayed in a storefront should include taxes. */
  displayGrossPrices: Scalars['Boolean']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
  /** A country-specific strategy to use for tax calculation. Taxes can be calculated either using user-defined flat rates or with a tax app. If not provided, use the value from the channel's tax configuration. */
  taxCalculationStrategy?: Maybe<TaxCalculationStrategy>;
};

export type TaxConfigurationPerCountryInput = {
  countryCode: CountryCode;
  displayGrossPrices: Scalars['Boolean']['input'];
  taxCalculationStrategy?: InputMaybe<TaxCalculationStrategy>;
};

export type TaxConfigurationUpdateError = ErrorInterface & {
  __typename: 'TaxConfigurationUpdateError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** List of country codes for which the configuration is invalid. */
  countryCodes: Array<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
};

export type TaxConfigurationUpdateErrorCode =
  | 'DUPLICATED_INPUT_ITEM'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND';

export type TaxConfigurationUpdateInput = {
  displayGrossPrices: Scalars['Boolean']['input'];
  pricesEnteredWithTax: Scalars['Boolean']['input'];
  removeCountriesConfiguration: Array<CountryCode>;
  taxCalculationStrategy?: InputMaybe<TaxCalculationStrategy>;
  updateCountriesConfiguration: Array<TaxConfigurationPerCountryInput>;
};

/** Tax class rates grouped by country. */
export type TaxCountryConfiguration = {
  __typename: 'TaxCountryConfiguration';
  /** A country for which tax class rates are grouped. */
  country: Country;
  taxClassCountryRates: Array<TaxClassCountryRate>;
};

export type TaxCountryConfigurationDeleteErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND';

export type TaxCountryConfigurationMutationResult = BaseMutationResult & {
  __typename: 'TaxCountryConfigurationMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: TaxCountryConfiguration;
};

export type TaxCountryConfigurationUpdateError = ErrorInterface & {
  __typename: 'TaxCountryConfigurationUpdateError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of tax class IDs for which the update failed. */
  taxClassIds: Array<Scalars['String']['output']>;
};

export type TaxCountryConfigurationUpdateErrorCode =
  | 'CANNOT_CREATE_NEGATIVE_RATE'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'ONLY_ONE_DEFAULT_COUNTRY_RATE_ALLOWED';

export type TaxExemptionManageErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_EDITABLE_ORDER'
  | 'NOT_FOUND';

export type TaxSourceLine = CheckoutLine | OrderLine;

export type TaxSourceObject = Checkout | Order;

export type TaxSourceObjectMutationResult = BaseMutationResult & {
  __typename: 'TaxSourceObjectMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: TaxSourceObject;
};

export type TaxType = {
  __typename: 'TaxType';
  description: Scalars['String']['output'];
  taxCode: Scalars['String']['output'];
};

export type TaxableObject = {
  __typename: 'TaxableObject';
  /** The address data. */
  address: Address;
  channel: Channel;
  currency: Scalars['String']['output'];
  discounts: Array<TaxableObjectDiscount>;
  /** List of lines assigned to the object. */
  lines: Array<TaxableObjectLine>;
  pricesEnteredWithTax: Scalars['Boolean']['output'];
  /** The price of shipping method. */
  shippingPrice: Money;
  /** The source object related to this tax object. */
  sourceObject: TaxSourceObject;
};

export type TaxableObjectDiscount = {
  __typename: 'TaxableObjectDiscount';
  amount: Money;
  name: Scalars['String']['output'];
};

export type TaxableObjectLine = {
  __typename: 'TaxableObjectLine';
  /** Determines if taxes are being charged for the product. */
  chargeTaxes: Scalars['Boolean']['output'];
  productName: Scalars['String']['output'];
  productSku: Scalars['String']['output'];
  /** The source line related to this tax line. */
  sourceLine: TaxSourceLine;
  totalPrice: Money;
  /** Price of the single item in the order line. */
  unitPrice: Money;
  variantName: Scalars['String']['output'];
};

/** Represents a monetary value with taxes. In cases where taxes were not applied, net and gross values will be equal. */
export type TaxedMoney = {
  __typename: 'TaxedMoney';
  currency: Scalars['String']['output'];
  /** Amount of money including taxes. */
  gross: Money;
  /** Amount of money without taxes. */
  net: Money;
  /** Amount of taxes. */
  tax: Money;
};

export type TaxedMoneyRange = {
  __typename: 'TaxedMoneyRange';
  /** Lower bound of a price range. */
  start: TaxedMoney;
  /** Upper bound of a price range. */
  stop: TaxedMoney;
};

export type TempoNode = {
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  pk: Scalars['String']['output'];
};

export type Thumbnail = {
  __typename: 'Thumbnail';
  /** Alt text. */
  alt: Scalars['String']['output'];
  aspectRatio?: Maybe<Scalars['Float']['output']>;
  /** The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned. */
  format: ThumbnailFormat;
  height?: Maybe<Scalars['Int']['output']>;
  /** Size of the image. If not provided, the original image will be returned. */
  size: Scalars['Int']['output'];
  /** The URL of the image. */
  url: Scalars['String']['output'];
  width?: Maybe<Scalars['Int']['output']>;
};

export type ThumbnailFormat =
  | 'JPEG'
  | 'SVG'
  | 'WEBP';

export type TimePeriod = {
  __typename: 'TimePeriod';
  /** The length of the period. */
  amount: Scalars['Int']['output'];
  /** The type of the period. */
  type: TimePeriodType;
};

export type TimePeriodInputType = {
  amount: Scalars['Int']['input'];
  type: TimePeriodType;
};

export type TimePeriodType =
  | 'DAY'
  | 'MONTH'
  | 'WEEK'
  | 'YEAR';

export type TokenVerificationMutationResult = BaseMutationResult & {
  __typename: 'TokenVerificationMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  /** Determine if token is valid or not. */
  isValid: Scalars['Boolean']['output'];
  /** JWT payload. */
  payload: Jwt;
  user: User;
};

/**
 * Represents a single payment operation.
 *
 * Transaction is an attempt to transfer money between your store
 * and your customers, with a chosen payment method.
 */
export type Transaction = Node & TempoNode & {
  __typename: 'Transaction';
  /** Total amount of the transaction. */
  amount: Money;
  createdAt: Scalars['DateTime']['output'];
  error: Scalars['String']['output'];
  gatewayResponse: Scalars['JSONString']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isSuccess: Scalars['Boolean']['output'];
  kind: TransactionKind;
  payment: Payment;
  pk: Scalars['String']['output'];
  token: Scalars['String']['output'];
};

export type TransactionAction = Event & {
  __typename: 'TransactionAction';
  actionType: TransactionActionType;
  /** Transaction request amount. Null when action type is VOID. */
  amount: Scalars['PositiveDecimal']['output'];
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
};

/** Event sent when transaction action is requested. */
export type TransactionActionRequest = Event & {
  __typename: 'TransactionActionRequest';
  /** Requested action data. */
  action: TransactionAction;
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** Look up a transaction. */
  transaction: TransactionItem;
};

export type TransactionActionType =
  | 'CHARGE'
  | 'REFUND'
  | 'VOID';

export type TransactionCreationInput = {
  amountAuthorized?: InputMaybe<MoneyInput>;
  amountCharged?: InputMaybe<MoneyInput>;
  amountRefunded?: InputMaybe<MoneyInput>;
  amountVoided?: InputMaybe<MoneyInput>;
  availableActions?: InputMaybe<Array<TransactionActionType>>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  reference?: InputMaybe<Scalars['String']['input']>;
  status: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type TransactionCreationMutationErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INCORRECT_CURRENCY'
  | 'INVALID'
  | 'METADATA_KEY_REQUIRED'
  | 'NOT_FOUND';

/** TransactionEvent(id, created_at, status, reference, name, transaction) */
export type TransactionEvent = Node & TempoNode & {
  __typename: 'TransactionEvent';
  createdAt: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Name of the transaction's event. */
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Reference of transaction's event. */
  reference: Scalars['String']['output'];
  /** Status of transaction's event. */
  status: TransactionStatus;
};

export type TransactionEventInput = {
  name: Scalars['String']['input'];
  reference: Scalars['String']['input'];
  status: TransactionStatus;
};

/** TransactionItem(id, created_at, updated_at, private_metadata, metadata, status, type, reference, available_actions, currency, amount_charged, amount_authorized, amount_refunded, amount_voided, order) */
export type TransactionItem = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'TransactionItem';
  /** List of actions that can be performed in the current state of a payment. */
  actions: Array<TransactionActionType>;
  amountAuthorized: Money;
  amountCharged: Money;
  amountRefunded: Money;
  amountVoided: Money;
  createdAt: Scalars['DateTime']['output'];
  /** List of all transaction's events. */
  events: Array<TransactionEvent>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  /** The related order. */
  order?: Maybe<Order>;
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  reference: Scalars['String']['output'];
  status: Scalars['String']['output'];
  type: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
};


/** TransactionItem(id, created_at, updated_at, private_metadata, metadata, status, type, reference, available_actions, currency, amount_charged, amount_authorized, amount_refunded, amount_voided, order) */
export type TransactionItemMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** TransactionItem(id, created_at, updated_at, private_metadata, metadata, status, type, reference, available_actions, currency, amount_charged, amount_authorized, amount_refunded, amount_voided, order) */
export type TransactionItemMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** TransactionItem(id, created_at, updated_at, private_metadata, metadata, status, type, reference, available_actions, currency, amount_charged, amount_authorized, amount_refunded, amount_voided, order) */
export type TransactionItemPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** TransactionItem(id, created_at, updated_at, private_metadata, metadata, status, type, reference, available_actions, currency, amount_charged, amount_authorized, amount_refunded, amount_voided, order) */
export type TransactionItemPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};

/** Event sent when transaction item metadata is updated. */
export type TransactionItemMetadataUpdated = Event & {
  __typename: 'TransactionItemMetadataUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** Look up a transaction. */
  transaction: TransactionItem;
};

export type TransactionItemMutationResult = BaseMutationResult & {
  __typename: 'TransactionItemMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: TransactionItem;
};

export type TransactionKind =
  | 'ACTION_TO_CONFIRM'
  | 'AUTH'
  | 'CANCEL'
  | 'CAPTURE'
  | 'CAPTURE_FAILED'
  | 'CONFIRM'
  | 'EXTERNAL'
  | 'PENDING'
  | 'REFUND'
  | 'REFUND_FAILED'
  | 'REFUND_ONGOING'
  | 'REFUND_REVERSED'
  | 'VOID';

export type TransactionRequestActionErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK'
  | 'NOT_FOUND';

export type TransactionStatus =
  | 'FAILURE'
  | 'PENDING'
  | 'SUCCESS';

export type TransactionUpdateErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INCORRECT_CURRENCY'
  | 'INVALID'
  | 'METADATA_KEY_REQUIRED'
  | 'NOT_FOUND';

export type TransactionUpdateInput = {
  amountAuthorized?: InputMaybe<MoneyInput>;
  amountCharged?: InputMaybe<MoneyInput>;
  amountRefunded?: InputMaybe<MoneyInput>;
  amountVoided?: InputMaybe<MoneyInput>;
  availableActions?: InputMaybe<Array<TransactionActionType>>;
  metadata?: InputMaybe<Array<MetadataInput>>;
  privateMetadata?: InputMaybe<Array<MetadataInput>>;
  reference?: InputMaybe<Scalars['String']['input']>;
  status: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type TranslatableItem = AttributeTranslation | CategoryTranslation | CollectionTranslation | MenuItemTranslation | PageTranslation | ProductTranslation | SaleTranslation | ShippingMethodTranslation | ValueTranslation | VoucherTranslation;

export type TranslatableItemConnection = {
  __typename: 'TranslatableItemConnection';
  /** Contains the nodes in this connection */
  edges: Array<TranslatableItemEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type TranslatableItemEdge = {
  __typename: 'TranslatableItemEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: TranslatableItem;
};

export type TranslatableKinds =
  | 'ATTRIBUTE'
  | 'ATTRIBUTE_VALUE'
  | 'CATEGORY'
  | 'COLLECTION'
  | 'MENU_ITEM'
  | 'PAGE'
  | 'PRODUCT'
  | 'SALE'
  | 'SHIPPING_METHOD'
  | 'VOUCHER';

export type TranslationBase = {
  /** The translation the event relates to. */
  translation: ProductTranslationCollectionTranslationCategoryTranslationAttributeTranslationValueTranslationPageTranslationShippingMethodTranslationSaleTranslationVoucherTranslationMenuItemTranslation;
};


export type TranslationBaseTranslationArgs = {
  languageCode: LanguageCode;
};

export type TranslationCreated = Event & TranslationBase & {
  __typename: 'TranslationCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The translation the event relates to. */
  translation: ProductTranslationCollectionTranslationCategoryTranslationAttributeTranslationValueTranslationPageTranslationShippingMethodTranslationSaleTranslationVoucherTranslationMenuItemTranslation;
};


export type TranslationCreatedTranslationArgs = {
  languageCode: LanguageCode;
};

export type TranslationErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED';

export type TranslationInput = {
  description?: InputMaybe<Scalars['JSONString']['input']>;
  name: Scalars['String']['input'];
  seoDescription: Scalars['String']['input'];
  seoTitle: Scalars['String']['input'];
};

export type TranslationUpdated = Event & TranslationBase & {
  __typename: 'TranslationUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The translation the event relates to. */
  translation: ProductTranslationCollectionTranslationCategoryTranslationAttributeTranslationValueTranslationPageTranslationShippingMethodTranslationSaleTranslationVoucherTranslationMenuItemTranslation;
};


export type TranslationUpdatedTranslationArgs = {
  languageCode: LanguageCode;
};

export type UpdateInvoiceInput = {
  number: Scalars['String']['input'];
  url: Scalars['String']['input'];
};

export type UploadErrorCode =
  | 'GRAPHQL_ERROR';

/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type User = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'User';
  addresses: Array<Address>;
  avatar?: Maybe<Image>;
  checkout?: Maybe<Checkout>;
  /** Returns the checkout ID's assigned to this user. */
  checkoutIds: Array<Scalars['ID']['output']>;
  /** Returns checkouts assigned to this user. */
  checkouts: CheckoutNodeConnection;
  dateJoined: Scalars['DateTime']['output'];
  defaultBillingAddress?: Maybe<Address>;
  defaultShippingAddress?: Maybe<Address>;
  /** List of user's permission groups which user can manage. */
  editableGroups: Array<Group>;
  /** Email address */
  email: Scalars['String']['output'];
  /** List of events associated with the user. */
  events: Array<AccountEvent>;
  /** Given name */
  firstName: Scalars['String']['output'];
  /** List of the user gift cards. */
  giftCards: GiftCardNodeConnection;
  groups: Array<Group>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isActive: Scalars['Boolean']['output'];
  isStaff: Scalars['Boolean']['output'];
  /** User language code. */
  languageCode: LanguageCode;
  lastLogin: Scalars['DateTime']['output'];
  /** Family name */
  lastName: Scalars['String']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  /** A note about the customer. */
  note: Scalars['String']['output'];
  /** List of user's orders. */
  orders: OrderNodeConnection;
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** Informs whether the user needs to confirm their email address. */
  requiresConfirmation: Scalars['Boolean']['output'];
  /** List of stored payment sources. */
  storedPaymentSources: Array<PaymentSource>;
  updatedAt: Scalars['DateTime']['output'];
  /** List of user's permissions. */
  userPermissions: Array<UserPermission>;
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserAvatarArgs = {
  format?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserCheckoutIdsArgs = {
  channel: Scalars['String']['input'];
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserCheckoutsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserGiftCardsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserOrdersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserStoredPaymentSourcesArgs = {
  channel?: InputMaybe<Scalars['String']['input']>;
};

export type UserBase = {
  /** The user the event relates to. */
  user: User;
};

export type UserBulkMutationResult = BaseMutationResult & {
  __typename: 'UserBulkMutationResult';
  /** Returns how many objects were mutated. */
  count: Scalars['Int']['output'];
  errors?: Maybe<Array<ErrorInterface>>;
  objects: Array<User>;
};

export type UserConnection = {
  __typename: 'UserConnection';
  /** Contains the nodes in this connection */
  edges: Array<UserEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserCreationInput = {
  channel?: InputMaybe<Scalars['String']['input']>;
  /** Email address */
  email: Scalars['String']['input'];
  /** Given name */
  firstName?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  languageCode?: InputMaybe<LanguageCode>;
  /** Family name */
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataInput>>;
  note?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
};

export type UserCreationResult = BaseMutationResult & {
  __typename: 'UserCreationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  requiresConfirmation: Scalars['Boolean']['output'];
  user: User;
};

/** An edge in a connection. */
export type UserEdge = {
  __typename: 'UserEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: User;
};

export type UserMutationResult = BaseMutationResult & {
  __typename: 'UserMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: User;
};

export type UserOrdering =
  | 'CREATED_AT'
  | 'EMAIL'
  | 'FIRST_NAME'
  | 'LAST_MODIFIED_AT'
  | 'LAST_NAME'
  | 'ORDER_COUNT';

export type UserOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<UserOrdering>;
};

export type UserPermission = {
  __typename: 'UserPermission';
  /** Internal code for permission. */
  code: PermissionCode;
  /** Describe action(s) allowed to do by permission. */
  name: Scalars['String']['output'];
  /** List of user permission groups containing this permission. */
  sourceGroups?: Maybe<Array<Group>>;
};


export type UserPermissionSourceGroupsArgs = {
  userId: Scalars['ID']['input'];
};

/** User(id, password, last_login, is_superuser, private_metadata, metadata, first_name, last_name, email, phone, is_staff, is_active, default_shipping_address, default_billing_address, note, date_joined, updated_at, verified, archived, avatar, _avatar_width, _avatar_height, uuid, jwt_token_key, language_code, requires_confirmation, search_document) */
export type UserUpdateInput = {
  defaultBillingAddress: AddressUpdateInput;
  defaultShippingAddress: AddressUpdateInput;
  /** Email address */
  email: Scalars['String']['input'];
  /** Given name */
  firstName?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  languageCode?: InputMaybe<LanguageCode>;
  /** Family name */
  lastName?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
};

export type Usercreationinput = {
  channel?: InputMaybe<Scalars['String']['input']>;
  defaultBillingAddress: AddressUpdateInput;
  defaultShippingAddress: AddressUpdateInput;
  /** Email address */
  email: Scalars['String']['input'];
  /** Given name */
  firstName?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  languageCode?: InputMaybe<LanguageCode>;
  /** Family name */
  lastName?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  redirectUrl: Scalars['String']['input'];
};

export type Vat = {
  __typename: 'VAT';
  countryCode: Scalars['String']['output'];
  /** Country's VAT rate exceptions for specific types of goods. */
  reducedRates: Array<ReducedRate>;
  /** Standard VAT rate in percent. */
  standardRate: Scalars['Float']['output'];
};

/** Represents a value of an attribute. */
export type Value = Node & TempoNode & {
  __typename: 'Value';
  /** Represents the boolean value of the attribute value. */
  boolean?: Maybe<Scalars['Boolean']['output']>;
  /** Represents the date value of the attribute value. */
  date?: Maybe<Scalars['DateTime']['output']>;
  dateTime?: Maybe<Scalars['DateTime']['output']>;
  /** Represents file URL and content type (if attribute value is a file). */
  file?: Maybe<File>;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** The input type to use for entering attribute values in the dashboard. */
  inputType: AttributeInputType;
  /** Name of a value displayed in the interface. */
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Attribute value as plain text without formatting. */
  plainText?: Maybe<Scalars['String']['output']>;
  reference?: Maybe<Scalars['String']['output']>;
  /** Attribute value as rich text including formatting. */
  richText?: Maybe<Scalars['JSONString']['output']>;
  /** Internal representation of a value (unique per attribute). */
  slug: Scalars['String']['output'];
  translation?: Maybe<ValueTranslation>;
  /** Represent value of the attribute value (e.g. color values for swatch attributes). */
  value: Scalars['String']['output'];
};


/** Represents a value of an attribute. */
export type ValueTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

export type ValueBase = {
  /** The attribute value the event relates to. */
  value: Value;
};

export type ValueConnection = {
  __typename: 'ValueConnection';
  /** Contains the nodes in this connection */
  edges: Array<ValueEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ValueCreated = Event & ValueBase & {
  __typename: 'ValueCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The attribute value the event relates to. */
  value: Value;
};

export type ValueCreationInput = {
  contentType?: InputMaybe<Scalars['String']['input']>;
  externalReference?: InputMaybe<Scalars['String']['input']>;
  fileUrl?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type ValueDeleted = Event & ValueBase & {
  __typename: 'ValueDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The attribute value the event relates to. */
  value: Value;
};

/** An edge in a connection. */
export type ValueEdge = {
  __typename: 'ValueEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Value;
};

/** Represents a value of an attribute. */
export type ValueFilter = {
  AND?: InputMaybe<ValueFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<ValueFilter>;
  OR?: InputMaybe<ValueFilter>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  search?: InputMaybe<Scalars['String']['input']>;
};

export type ValueInput = {
  boolean?: InputMaybe<Scalars['Boolean']['input']>;
  contentType?: InputMaybe<Scalars['String']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  dateTime?: InputMaybe<Scalars['DateTime']['input']>;
  dropdown?: InputMaybe<ValueSelectableTypeInput>;
  file?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  multiselect?: InputMaybe<Array<ValueSelectableTypeInput>>;
  numeric?: InputMaybe<Scalars['String']['input']>;
  plainText?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Array<Scalars['ID']['input']>>;
  richText?: InputMaybe<Scalars['JSONString']['input']>;
};

export type ValueMutationResult = BaseMutationResult & {
  __typename: 'ValueMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Value;
};

/** Represents attribute value. If no ID provided, value will be resolved. */
export type ValueSelectableTypeInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** ValueTranslation(id, language_code, value, name, rich_text, plain_text) */
export type ValueTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'ValueTranslation';
  attribute: Attribute;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** Attribute plain text value. */
  plainText: Scalars['String']['output'];
  /** Attribute value. */
  richText: Scalars['JSONString']['output'];
  value: Value;
};

export type ValueTranslationInput = {
  name: Scalars['String']['input'];
  plainText: Scalars['String']['input'];
  richText: Scalars['JSONString']['input'];
};

export type ValueUpdateInput = {
  contentType?: InputMaybe<Scalars['String']['input']>;
  externalReference?: InputMaybe<Scalars['String']['input']>;
  fileUrl?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  value: Scalars['String']['input'];
};

export type ValueUpdated = Event & ValueBase & {
  __typename: 'ValueUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The attribute value the event relates to. */
  value: Value;
};

export type VolumeUnit =
  | 'ACRE_FT'
  | 'ACRE_IN'
  | 'CUBIC_CENTIMETER'
  | 'CUBIC_DECIMETER'
  | 'CUBIC_FOOT'
  | 'CUBIC_INCH'
  | 'CUBIC_METER'
  | 'CUBIC_MILLIMETER'
  | 'CUBIC_YARD'
  | 'FL_OZ'
  | 'LITER'
  | 'PINT'
  | 'QT';

/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type Voucher = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Voucher';
  applyOncePerCustomer: Scalars['Boolean']['output'];
  applyOncePerOrder: Scalars['Boolean']['output'];
  /** List of categories this voucher applies to. */
  categories: CategoryNodeConnection;
  /** List of availability in channels for the voucher. */
  channelListings: Array<VoucherChannelListing>;
  code: Scalars['String']['output'];
  /** List of collections this voucher applies to. */
  collections: CollectionConnection;
  /** List of countries available for the shipping voucher. */
  countries: Array<Country>;
  /** Currency code for voucher. */
  currency: Scalars['String']['output'];
  /** Voucher value. */
  discountValue: Scalars['Float']['output'];
  /** Determines a type of discount for voucher - value or percentage */
  discountValueType: DiscountValueType;
  endDate: Scalars['DateTime']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  minCheckoutItemsQuantity: Scalars['Int']['output'];
  /** Minimum order value to apply voucher. */
  minSpent: Money;
  name: Scalars['String']['output'];
  onlyForStaff: Scalars['Boolean']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  /** List of products this voucher applies to. */
  products: ProductNodeConnection;
  startDate: Scalars['DateTime']['output'];
  translation?: Maybe<VoucherTranslation>;
  /** Determines a type of voucher. */
  type: VoucherType;
  usageLimit: Scalars['Int']['output'];
  used: Scalars['Int']['output'];
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherCategoriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherCollectionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherPrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherPrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherTranslationArgs = {
  languageCode?: InputMaybe<LanguageCode>;
};

export type VoucherBase = {
  /** The voucher the event relates to. */
  voucher: Voucher;
};

/** VoucherChannelListing(id, channel, voucher, currency, discount, min_spent) */
export type VoucherChannelListing = Node & TempoNode & {
  __typename: 'VoucherChannelListing';
  channel: Channel;
  currency: Scalars['String']['output'];
  discountValue: Scalars['Float']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  minSpent: Money;
  pk: Scalars['String']['output'];
};

export type VoucherChannelListingAddInput = {
  channelId: Scalars['ID']['input'];
  discountValue: Scalars['PositiveDecimal']['input'];
  minAmountSpent: Scalars['PositiveDecimal']['input'];
};

export type VoucherChannelListingInput = {
  addChannels?: InputMaybe<Array<VoucherChannelListingAddInput>>;
  removeChannels?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type VoucherConnection = {
  __typename: 'VoucherConnection';
  /** Contains the nodes in this connection */
  edges: Array<VoucherEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type VoucherCreated = Event & VoucherBase & {
  __typename: 'VoucherCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The voucher the event relates to. */
  voucher: Voucher;
};

export type VoucherDeleted = Event & VoucherBase & {
  __typename: 'VoucherDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The voucher the event relates to. */
  voucher: Voucher;
};

export type VoucherDiscountType =
  | 'FIXED'
  | 'PERCENTAGE'
  | 'SHIPPING';

/** An edge in a connection. */
export type VoucherEdge = {
  __typename: 'VoucherEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Voucher;
};

/**
 * Vouchers allow giving discounts to particular customers on categories, collections, or products.
 * They can be used during checkout by providing valid voucher codes.".
 */
export type VoucherFilter = {
  AND?: InputMaybe<VoucherFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<VoucherFilter>;
  OR?: InputMaybe<VoucherFilter>;
  discountType?: InputMaybe<Array<VoucherDiscountType>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** List of public metadata items. Can be accessed without permissions. */
  metadata?: InputMaybe<Array<MetadataFilter>>;
  search?: InputMaybe<Scalars['String']['input']>;
  started?: InputMaybe<DateTimeRangeInput>;
  status?: InputMaybe<Array<DiscountStatus>>;
  timesUsed?: InputMaybe<IntRangeInput>;
};

export type VoucherInput = {
  applyOncePerCustomer: Scalars['Boolean']['input'];
  applyOncePerOrder: Scalars['Boolean']['input'];
  categories: Array<Scalars['ID']['input']>;
  code: Scalars['String']['input'];
  collections: Array<Scalars['ID']['input']>;
  countries: Array<Scalars['String']['input']>;
  discountValueType: DiscountValueType;
  endDate: Scalars['DateTime']['input'];
  minCheckoutItemsQuantity: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  onlyForStaff: Scalars['Boolean']['input'];
  products: Array<Scalars['ID']['input']>;
  startDate: Scalars['DateTime']['input'];
  type: VoucherType;
  usageLimit: Scalars['Int']['input'];
  variants: Array<Scalars['ID']['input']>;
};

export type VoucherMetadataUpdated = Event & VoucherBase & {
  __typename: 'VoucherMetadataUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The voucher the event relates to. */
  voucher: Voucher;
};

export type VoucherMutationResult = BaseMutationResult & {
  __typename: 'VoucherMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Voucher;
};

export type VoucherOrdering =
  | 'CODE'
  | 'END_DATE'
  | 'MINIMUM_SPENT_AMOUNT'
  | 'START_DATE'
  | 'TYPE'
  | 'USAGE_LIMIT'
  | 'VALUE';

export type VoucherOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<VoucherOrdering>;
};

/** VoucherTranslation(id, language_code, voucher, name) */
export type VoucherTranslation = BaseTranslation & Node & TempoNode & {
  __typename: 'VoucherTranslation';
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  language?: Maybe<LanguageDisplay>;
  languageCode: LanguageCode;
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  voucher: Voucher;
};

export type VoucherType =
  | 'ENTIRE_ORDER'
  | 'SHIPPING'
  | 'SPECIFIC_PRODUCT';

export type VoucherUpdated = Event & VoucherBase & {
  __typename: 'VoucherUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The voucher the event relates to. */
  voucher: Voucher;
};

/** Warehouse(id, private_metadata, metadata, tax_class, uuid, name, slug, address, email, click_and_collect_option, is_private) */
export type Warehouse = Node & ObjectWithMetadata & TempoNode & {
  __typename: 'Warehouse';
  address: Address;
  clickAndCollectOption: WarehouseClickAndCollectOption;
  companyName: Scalars['String']['output'];
  email: Scalars['String']['output'];
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  isPrivate: Scalars['Boolean']['output'];
  metadata: Array<MetadataItem>;
  /** A single key from public metadata. Tip: Use GraphQL aliases to fetch multiple keys. */
  metafield?: Maybe<Scalars['String']['output']>;
  /** Public metadata. Use `keys` to control which fields you want to include. The default is to include everything. */
  metafields: Scalars['Metadata']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  /** List of private metadata items. Requires staff permissions to access. */
  privateMetadata: Array<MetadataItem>;
  privateMetafield?: Maybe<Scalars['String']['output']>;
  /** Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything. */
  privateMetafields: Scalars['Metadata']['output'];
  shippingZones: ShippingZoneConnection;
  slug: Scalars['String']['output'];
};


/** Warehouse(id, private_metadata, metadata, tax_class, uuid, name, slug, address, email, click_and_collect_option, is_private) */
export type WarehouseMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Warehouse(id, private_metadata, metadata, tax_class, uuid, name, slug, address, email, click_and_collect_option, is_private) */
export type WarehouseMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Warehouse(id, private_metadata, metadata, tax_class, uuid, name, slug, address, email, click_and_collect_option, is_private) */
export type WarehousePrivateMetafieldArgs = {
  key: Scalars['String']['input'];
};


/** Warehouse(id, private_metadata, metadata, tax_class, uuid, name, slug, address, email, click_and_collect_option, is_private) */
export type WarehousePrivateMetafieldsArgs = {
  keys: Array<Scalars['String']['input']>;
};


/** Warehouse(id, private_metadata, metadata, tax_class, uuid, name, slug, address, email, click_and_collect_option, is_private) */
export type WarehouseShippingZonesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type WarehouseBase = {
  /** The warehouse the event relates to. */
  warehouse: Warehouse;
};

export type WarehouseClickAndCollectOption =
  | 'ALL_WAREHOUSES'
  | 'DISABLED'
  | 'LOCAL_STOCK';

export type WarehouseConnection = {
  __typename: 'WarehouseConnection';
  /** Contains the nodes in this connection */
  edges: Array<WarehouseEdge>;
  /** Pagination data for this connection */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WarehouseCreated = Event & WarehouseBase & {
  __typename: 'WarehouseCreated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The warehouse the event relates to. */
  warehouse: Warehouse;
};

export type WarehouseCreationInput = {
  /** Address of the warehouse. */
  address: AddressUpdateInput;
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  slug: Scalars['String']['input'];
};

export type WarehouseDeleted = Event & WarehouseBase & {
  __typename: 'WarehouseDeleted';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The warehouse the event relates to. */
  warehouse: Warehouse;
};

/** An edge in a connection. */
export type WarehouseEdge = {
  __typename: 'WarehouseEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node: Warehouse;
};

export type WarehouseError = ErrorInterface & {
  __typename: 'WarehouseError';
  /** The error code. */
  code?: Maybe<Scalars['String']['output']>;
  /** Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field. */
  field?: Maybe<Scalars['String']['output']>;
  /** The error message. */
  message: Scalars['String']['output'];
  /** List of shipping zones IDs which causes the error. */
  shippingZones?: Maybe<Array<Scalars['ID']['output']>>;
};

export type WarehouseErrorCode =
  | 'ALREADY_EXISTS'
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

/** Warehouse(id, private_metadata, metadata, tax_class, uuid, name, slug, address, email, click_and_collect_option, is_private) */
export type WarehouseFilter = {
  AND?: InputMaybe<WarehouseFilter>;
  DISTINCT?: InputMaybe<Scalars['Boolean']['input']>;
  NOT?: InputMaybe<WarehouseFilter>;
  OR?: InputMaybe<WarehouseFilter>;
  channels?: InputMaybe<Array<Scalars['ID']['input']>>;
  clickAndCollectOption?: InputMaybe<WarehouseClickAndCollectOption>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  slugs?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type WarehouseMetadataUpdated = Event & WarehouseBase & {
  __typename: 'WarehouseMetadataUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The warehouse the event relates to. */
  warehouse: Warehouse;
};

export type WarehouseMutationResult = BaseMutationResult & {
  __typename: 'WarehouseMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  result: Warehouse;
};

export type WarehouseOrdering =
  | 'NAME';

export type WarehouseOrderingInput = {
  attributeId?: InputMaybe<Scalars['ID']['input']>;
  direction?: OrderingDirection;
  field?: InputMaybe<WarehouseOrdering>;
};

export type WarehouseShippingZoneAssignmentMutationResult = BaseMutationResult & {
  __typename: 'WarehouseShippingZoneAssignmentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  ok: Scalars['Boolean']['output'];
};

export type WarehouseShippingZoneUnassignmentMutationResult = BaseMutationResult & {
  __typename: 'WarehouseShippingZoneUnassignmentMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  ok: Scalars['Boolean']['output'];
};

export type WarehouseUpdateInput = {
  /** Address of the warehouse. */
  address?: InputMaybe<AddressUpdateInput>;
  /** Click and collect options: local, all or disabled. */
  clickAndCollectOption?: InputMaybe<WarehouseClickAndCollectOption>;
  email: Scalars['String']['input'];
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug: Scalars['String']['input'];
};

export type WarehouseUpdated = Event & WarehouseBase & {
  __typename: 'WarehouseUpdated';
  /** Time of the event. */
  issuedAt: Scalars['DateTime']['output'];
  /** The user or application that triggered the event. */
  issuingPrincipal: AppUser;
  /** The application receiving the webhook. */
  recipient: App;
  /** The warehouse the event relates to. */
  warehouse: Warehouse;
};

/** Webhook(id, name, app, target_url, is_active, secret_key, subscription_query) */
export type Webhook = Node & TempoNode & {
  __typename: 'Webhook';
  app: App;
  asyncEvents: Array<AsyncWebhookEvent>;
  /** Event deliveries. */
  eventDeliveries: EventDeliveryConnection;
  /** The Globally Unique ID of this object */
  id: Scalars['GlobalID']['output'];
  /** Informs if webhook is activated. */
  isActive: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  pk: Scalars['String']['output'];
  secretKey: Scalars['String']['output'];
  /** Used to define payloads for specific events. */
  subscriptionQuery: Scalars['String']['output'];
  /** List of synchronous webhook events. */
  syncEvents: Array<SyncWebhookEvent>;
  /** Target URL for webhook. */
  targetUrl: Scalars['String']['output'];
};


/** Webhook(id, name, app, target_url, is_active, secret_key, subscription_query) */
export type WebhookEventDeliveriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<EventDeliveryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<EventDeliveryOrderingInput>;
};

export type WebhookCreationInput = {
  app?: InputMaybe<Scalars['ID']['input']>;
  asyncEvents?: InputMaybe<Array<AsyncWebhookEventType>>;
  events: Array<WebhookEventType>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  syncEvents?: InputMaybe<Array<WebhookEventTypeSync>>;
  targetUrl: Scalars['String']['input'];
};

export type WebhookErrorCode =
  | 'GRAPHQL_ERROR'
  | 'INVALID'
  | 'NOT_FOUND'
  | 'REQUIRED'
  | 'UNIQUE';

export type WebhookEventType =
  | 'ADDRESS_CREATED'
  | 'ADDRESS_DELETED'
  | 'ADDRESS_UPDATED'
  | 'ANY'
  | 'APP_DELETED'
  | 'APP_INSTALLED'
  | 'APP_STATUS_CHANGED'
  | 'APP_UPDATED'
  | 'ATTRIBUTE_CREATED'
  | 'ATTRIBUTE_DELETED'
  | 'ATTRIBUTE_UPDATED'
  | 'ATTRIBUTE_VALUE_CREATED'
  | 'ATTRIBUTE_VALUE_DELETED'
  | 'ATTRIBUTE_VALUE_UPDATED'
  | 'CATEGORY_CREATED'
  | 'CATEGORY_DELETED'
  | 'CATEGORY_UPDATED'
  | 'CHANNEL_CREATED'
  | 'CHANNEL_DELETED'
  | 'CHANNEL_STATUS_CHANGED'
  | 'CHANNEL_UPDATED'
  | 'CHECKOUT_CALCULATE_TAXES'
  | 'CHECKOUT_CREATED'
  | 'CHECKOUT_FILTER_SHIPPING_METHODS'
  | 'CHECKOUT_METADATA_UPDATED'
  | 'CHECKOUT_UPDATED'
  | 'COLLECTION_CREATED'
  | 'COLLECTION_DELETED'
  | 'COLLECTION_METADATA_UPDATED'
  | 'COLLECTION_UPDATED'
  | 'CUSTOMER_CREATED'
  | 'CUSTOMER_DELETED'
  | 'CUSTOMER_METADATA_UPDATED'
  | 'CUSTOMER_UPDATED'
  | 'DRAFT_ORDER_CREATED'
  | 'DRAFT_ORDER_DELETED'
  | 'DRAFT_ORDER_UPDATED'
  | 'FULFILLMENT_APPROVED'
  | 'FULFILLMENT_CANCELED'
  | 'FULFILLMENT_CREATED'
  | 'FULFILLMENT_METADATA_UPDATED'
  | 'GIFT_CARD_CREATED'
  | 'GIFT_CARD_DELETED'
  | 'GIFT_CARD_METADATA_UPDATED'
  | 'GIFT_CARD_STATUS_CHANGED'
  | 'GIFT_CARD_UPDATED'
  | 'INVOICE_DELETED'
  | 'INVOICE_REQUESTED'
  | 'INVOICE_SENT'
  | 'MEDIA_CREATED'
  | 'MEDIA_DELETED'
  | 'MEDIA_UPDATED'
  | 'MENU_CREATED'
  | 'MENU_DELETED'
  | 'MENU_ITEM_CREATED'
  | 'MENU_ITEM_DELETED'
  | 'MENU_ITEM_UPDATED'
  | 'MENU_UPDATED'
  | 'NOTIFY_USER'
  | 'OBSERVABILITY'
  | 'ORDER_CALCULATE_TAXES'
  | 'ORDER_CANCELLED'
  | 'ORDER_CONFIRMED'
  | 'ORDER_CREATED'
  | 'ORDER_FILTER_SHIPPING_METHODS'
  | 'ORDER_FULFILLED'
  | 'ORDER_FULLY_PAID'
  | 'ORDER_METADATA_UPDATED'
  | 'ORDER_UPDATED'
  | 'PAGE_CREATED'
  | 'PAGE_DELETED'
  | 'PAGE_TYPE_CREATED'
  | 'PAGE_TYPE_DELETED'
  | 'PAGE_TYPE_UPDATED'
  | 'PAGE_UPDATED'
  | 'PAYMENT_AUTHORIZE'
  | 'PAYMENT_CAPTURE'
  | 'PAYMENT_CONFIRM'
  | 'PAYMENT_LIST_GATEWAYS'
  | 'PAYMENT_PROCESS'
  | 'PAYMENT_REFUND'
  | 'PAYMENT_VOID'
  | 'PERMISSION_GROUP_CREATED'
  | 'PERMISSION_GROUP_DELETED'
  | 'PERMISSION_GROUP_UPDATED'
  | 'PRODUCT_CREATED'
  | 'PRODUCT_DELETED'
  | 'PRODUCT_METADATA_UPDATED'
  | 'PRODUCT_UPDATED'
  | 'PRODUCT_VARIANT_BACK_IN_STOCK'
  | 'PRODUCT_VARIANT_CREATED'
  | 'PRODUCT_VARIANT_DELETED'
  | 'PRODUCT_VARIANT_METADATA_UPDATED'
  | 'PRODUCT_VARIANT_OUT_OF_STOCK'
  | 'PRODUCT_VARIANT_UPDATED'
  | 'SALE_CREATED'
  | 'SALE_DELETED'
  | 'SALE_TOGGLE'
  | 'SALE_UPDATED'
  | 'SHIPPING_LIST_METHODS_FOR_CHECKOUT'
  | 'SHIPPING_PRICE_CREATED'
  | 'SHIPPING_PRICE_DELETED'
  | 'SHIPPING_PRICE_UPDATED'
  | 'SHIPPING_ZONE_CREATED'
  | 'SHIPPING_ZONE_DELETED'
  | 'SHIPPING_ZONE_METADATA_UPDATED'
  | 'SHIPPING_ZONE_UPDATED'
  | 'STAFF_CREATED'
  | 'STAFF_DELETED'
  | 'STAFF_UPDATED'
  | 'TRANSACTION_ACTION_REQUEST'
  | 'TRANSACTION_ITEM_METADATA_UPDATED'
  | 'TRANSLATION_CREATED'
  | 'TRANSLATION_UPDATED'
  | 'VOUCHER_CREATED'
  | 'VOUCHER_DELETED'
  | 'VOUCHER_METADATA_UPDATED'
  | 'VOUCHER_UPDATED'
  | 'WAREHOUSE_CREATED'
  | 'WAREHOUSE_DELETED'
  | 'WAREHOUSE_METADATA_UPDATED'
  | 'WAREHOUSE_UPDATED';

export type WebhookEventTypeSync =
  | 'CHECKOUT_CALCULATE_TAXES'
  | 'CHECKOUT_FILTER_SHIPPING_METHODS'
  | 'ORDER_CALCULATE_TAXES'
  | 'ORDER_FILTER_SHIPPING_METHODS'
  | 'PAYMENT_AUTHORIZE'
  | 'PAYMENT_CAPTURE'
  | 'PAYMENT_CONFIRM'
  | 'PAYMENT_LIST_GATEWAYS'
  | 'PAYMENT_PROCESS'
  | 'PAYMENT_REFUND'
  | 'PAYMENT_VOID'
  | 'SHIPPING_LIST_METHODS_FOR_CHECKOUT';

export type WebhookMutationResult = BaseMutationResult & {
  __typename: 'WebhookMutationResult';
  errors?: Maybe<Array<ErrorInterface>>;
  webhook: Webhook;
};

export type WebhookSampleEventType =
  | 'ADDRESS_CREATED'
  | 'ADDRESS_DELETED'
  | 'ADDRESS_UPDATED'
  | 'APP_DELETED'
  | 'APP_INSTALLED'
  | 'APP_STATUS_CHANGED'
  | 'APP_UPDATED'
  | 'ATTRIBUTE_CREATED'
  | 'ATTRIBUTE_DELETED'
  | 'ATTRIBUTE_UPDATED'
  | 'ATTRIBUTE_VALUE_CREATED'
  | 'ATTRIBUTE_VALUE_DELETED'
  | 'ATTRIBUTE_VALUE_UPDATED'
  | 'CATEGORY_CREATED'
  | 'CATEGORY_DELETED'
  | 'CATEGORY_UPDATED'
  | 'CHANNEL_CREATED'
  | 'CHANNEL_DELETED'
  | 'CHANNEL_STATUS_CHANGED'
  | 'CHANNEL_UPDATED'
  | 'CHECKOUT_CREATED'
  | 'CHECKOUT_METADATA_UPDATED'
  | 'CHECKOUT_UPDATED'
  | 'COLLECTION_CREATED'
  | 'COLLECTION_DELETED'
  | 'COLLECTION_METADATA_UPDATED'
  | 'COLLECTION_UPDATED'
  | 'CUSTOMER_CREATED'
  | 'CUSTOMER_DELETED'
  | 'CUSTOMER_METADATA_UPDATED'
  | 'CUSTOMER_UPDATED'
  | 'DRAFT_ORDER_CREATED'
  | 'DRAFT_ORDER_DELETED'
  | 'DRAFT_ORDER_UPDATED'
  | 'FULFILLMENT_APPROVED'
  | 'FULFILLMENT_CANCELED'
  | 'FULFILLMENT_CREATED'
  | 'FULFILLMENT_METADATA_UPDATED'
  | 'GIFT_CARD_CREATED'
  | 'GIFT_CARD_DELETED'
  | 'GIFT_CARD_METADATA_UPDATED'
  | 'GIFT_CARD_STATUS_CHANGED'
  | 'GIFT_CARD_UPDATED'
  | 'INVOICE_DELETED'
  | 'INVOICE_REQUESTED'
  | 'INVOICE_SENT'
  | 'MEDIA_CREATED'
  | 'MEDIA_DELETED'
  | 'MEDIA_UPDATED'
  | 'MENU_CREATED'
  | 'MENU_DELETED'
  | 'MENU_ITEM_CREATED'
  | 'MENU_ITEM_DELETED'
  | 'MENU_ITEM_UPDATED'
  | 'MENU_UPDATED'
  | 'NOTIFY_USER'
  | 'OBSERVABILITY'
  | 'ORDER_CANCELLED'
  | 'ORDER_CONFIRMED'
  | 'ORDER_CREATED'
  | 'ORDER_FULFILLED'
  | 'ORDER_FULLY_PAID'
  | 'ORDER_METADATA_UPDATED'
  | 'ORDER_UPDATED'
  | 'PAGE_CREATED'
  | 'PAGE_DELETED'
  | 'PAGE_TYPE_CREATED'
  | 'PAGE_TYPE_DELETED'
  | 'PAGE_TYPE_UPDATED'
  | 'PAGE_UPDATED'
  | 'PERMISSION_GROUP_CREATED'
  | 'PERMISSION_GROUP_DELETED'
  | 'PERMISSION_GROUP_UPDATED'
  | 'PRODUCT_CREATED'
  | 'PRODUCT_DELETED'
  | 'PRODUCT_METADATA_UPDATED'
  | 'PRODUCT_UPDATED'
  | 'PRODUCT_VARIANT_BACK_IN_STOCK'
  | 'PRODUCT_VARIANT_CREATED'
  | 'PRODUCT_VARIANT_DELETED'
  | 'PRODUCT_VARIANT_METADATA_UPDATED'
  | 'PRODUCT_VARIANT_OUT_OF_STOCK'
  | 'PRODUCT_VARIANT_UPDATED'
  | 'SALE_CREATED'
  | 'SALE_DELETED'
  | 'SALE_TOGGLE'
  | 'SALE_UPDATED'
  | 'SHIPPING_PRICE_CREATED'
  | 'SHIPPING_PRICE_DELETED'
  | 'SHIPPING_PRICE_UPDATED'
  | 'SHIPPING_ZONE_CREATED'
  | 'SHIPPING_ZONE_DELETED'
  | 'SHIPPING_ZONE_METADATA_UPDATED'
  | 'SHIPPING_ZONE_UPDATED'
  | 'STAFF_CREATED'
  | 'STAFF_DELETED'
  | 'STAFF_UPDATED'
  | 'TRANSACTION_ACTION_REQUEST'
  | 'TRANSACTION_ITEM_METADATA_UPDATED'
  | 'TRANSLATION_CREATED'
  | 'TRANSLATION_UPDATED'
  | 'VOUCHER_CREATED'
  | 'VOUCHER_DELETED'
  | 'VOUCHER_METADATA_UPDATED'
  | 'VOUCHER_UPDATED'
  | 'WAREHOUSE_CREATED'
  | 'WAREHOUSE_DELETED'
  | 'WAREHOUSE_METADATA_UPDATED'
  | 'WAREHOUSE_UPDATED';

export type WebhookUpdateInput = {
  app?: InputMaybe<Scalars['ID']['input']>;
  asyncEvents?: InputMaybe<Array<AsyncWebhookEventType>>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  syncEvents?: InputMaybe<Array<WebhookEventTypeSync>>;
  targetUrl?: InputMaybe<Scalars['String']['input']>;
};

export type WeightUnit =
  | 'G'
  | 'KG'
  | 'LB'
  | 'OZ'
  | 'TONNE';

export type LoginMutationVariables = Exact<{
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
}>;


export type LoginMutation = { __typename: 'Mutation', obtainToken: { __typename: 'JWTMutationResult', result: { __typename: 'JWT', accessToken: string, refreshToken: string, csrfToken: string, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type AvailableExternalAuthenticationsQueryVariables = Exact<{ [key: string]: never; }>;


export type AvailableExternalAuthenticationsQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, availableExternalAuthentications: Array<{ __typename: 'ExternalAuthentication', id: string, name: string }> } };

export type FileUploadMutationVariables = Exact<{
  file: Scalars['Upload']['input'];
}>;


export type FileUploadMutation = { __typename: 'Mutation', uploadFile: { __typename: 'FileMutationResult', result: { __typename: 'File', url: string, contentType: string }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type PublicMetafieldsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  keys: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type PublicMetafieldsQuery = { __typename: 'Query', app: { __typename: 'App', id: string, metafields: Record<string, string> } };

export type PrivateMetafieldsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  keys: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type PrivateMetafieldsQuery = { __typename: 'Query', app: { __typename: 'App', id: string, privateMetafields: Record<string, string> } };

export type PublicMetafieldsInferredQueryVariables = Exact<{
  keys: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type PublicMetafieldsInferredQuery = { __typename: 'Query', app: { __typename: 'App', id: string, metafields: Record<string, string> } };

export type PrivateMetafieldsInferredQueryVariables = Exact<{
  keys: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type PrivateMetafieldsInferredQuery = { __typename: 'Query', app: { __typename: 'App', id: string, privateMetafields: Record<string, string> } };

export type UpdatePublicMetadataMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: Array<MetadataInput> | MetadataInput;
  keys: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type UpdatePublicMetadataMutation = { __typename: 'Mutation', updateMetadata: { __typename: 'ObjectWithMetadataMutationResult', result: { __typename: 'AbstractProduct', metafields: Record<string, string> } | { __typename: 'App', metafields: Record<string, string> } | { __typename: 'Attribute', metafields: Record<string, string> } | { __typename: 'Category', metafields: Record<string, string> } | { __typename: 'Checkout', metafields: Record<string, string> } | { __typename: 'CheckoutLine', metafields: Record<string, string> } | { __typename: 'Collection', metafields: Record<string, string> } | { __typename: 'ConcreteProduct', metafields: Record<string, string> } | { __typename: 'DigitalContent', metafields: Record<string, string> } | { __typename: 'Fulfillment', metafields: Record<string, string> } | { __typename: 'GiftCard', metafields: Record<string, string> } | { __typename: 'Invoice', metafields: Record<string, string> } | { __typename: 'MediaItem', metafields: Record<string, string> } | { __typename: 'Menu', metafields: Record<string, string> } | { __typename: 'MenuItem', metafields: Record<string, string> } | { __typename: 'Order', metafields: Record<string, string> } | { __typename: 'OrderLine', metafields: Record<string, string> } | { __typename: 'Page', metafields: Record<string, string> } | { __typename: 'PageKlass', metafields: Record<string, string> } | { __typename: 'Payment', metafields: Record<string, string> } | { __typename: 'ProductKlass', metafields: Record<string, string> } | { __typename: 'Sale', metafields: Record<string, string> } | { __typename: 'ShippingMethod', metafields: Record<string, string> } | { __typename: 'ShippingZone', metafields: Record<string, string> } | { __typename: 'TaxClass', metafields: Record<string, string> } | { __typename: 'TaxConfiguration', metafields: Record<string, string> } | { __typename: 'TransactionItem', metafields: Record<string, string> } | { __typename: 'User', metafields: Record<string, string> } | { __typename: 'Voucher', metafields: Record<string, string> } | { __typename: 'Warehouse', metafields: Record<string, string> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UpdatePrivateMetadataMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: Array<MetadataInput> | MetadataInput;
  keys: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type UpdatePrivateMetadataMutation = { __typename: 'Mutation', updatePrivateMetadata: { __typename: 'ObjectWithMetadataMutationResult', result: { __typename: 'AbstractProduct', privateMetafields: Record<string, string> } | { __typename: 'App', privateMetafields: Record<string, string> } | { __typename: 'Attribute', privateMetafields: Record<string, string> } | { __typename: 'Category', privateMetafields: Record<string, string> } | { __typename: 'Checkout', privateMetafields: Record<string, string> } | { __typename: 'CheckoutLine', privateMetafields: Record<string, string> } | { __typename: 'Collection', privateMetafields: Record<string, string> } | { __typename: 'ConcreteProduct', privateMetafields: Record<string, string> } | { __typename: 'DigitalContent', privateMetafields: Record<string, string> } | { __typename: 'Fulfillment', privateMetafields: Record<string, string> } | { __typename: 'GiftCard', privateMetafields: Record<string, string> } | { __typename: 'Invoice', privateMetafields: Record<string, string> } | { __typename: 'MediaItem', privateMetafields: Record<string, string> } | { __typename: 'Menu', privateMetafields: Record<string, string> } | { __typename: 'MenuItem', privateMetafields: Record<string, string> } | { __typename: 'Order', privateMetafields: Record<string, string> } | { __typename: 'OrderLine', privateMetafields: Record<string, string> } | { __typename: 'Page', privateMetafields: Record<string, string> } | { __typename: 'PageKlass', privateMetafields: Record<string, string> } | { __typename: 'Payment', privateMetafields: Record<string, string> } | { __typename: 'ProductKlass', privateMetafields: Record<string, string> } | { __typename: 'Sale', privateMetafields: Record<string, string> } | { __typename: 'ShippingMethod', privateMetafields: Record<string, string> } | { __typename: 'ShippingZone', privateMetafields: Record<string, string> } | { __typename: 'TaxClass', privateMetafields: Record<string, string> } | { __typename: 'TaxConfiguration', privateMetafields: Record<string, string> } | { __typename: 'TransactionItem', privateMetafields: Record<string, string> } | { __typename: 'User', privateMetafields: Record<string, string> } | { __typename: 'Voucher', privateMetafields: Record<string, string> } | { __typename: 'Warehouse', privateMetafields: Record<string, string> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type TransactionProcessedEventsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type TransactionProcessedEventsQuery = { __typename: 'Query', transaction: { __typename: 'TransactionItem', processedEvents?: string | null } };

export type TransactionUpdateProcessedEventsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: Scalars['String']['input'];
}>;


export type TransactionUpdateProcessedEventsMutation = { __typename: 'Mutation', updateMetadata: { __typename: 'ObjectWithMetadataMutationResult', errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string } | { __typename: 'AppError', field?: string | null, message: string } | { __typename: 'BulkProductError', field?: string | null, message: string } | { __typename: 'BulkStockError', field?: string | null, message: string } | { __typename: 'ChannelError', field?: string | null, message: string } | { __typename: 'CheckoutError', field?: string | null, message: string } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string } | { __typename: 'DiscountError', field?: string | null, message: string } | { __typename: 'Error', field?: string | null, message: string } | { __typename: 'GiftCardError', field?: string | null, message: string } | { __typename: 'GroupError', field?: string | null, message: string } | { __typename: 'MediaError', field?: string | null, message: string } | { __typename: 'OrderError', field?: string | null, message: string } | { __typename: 'PageError', field?: string | null, message: string } | { __typename: 'PaymentError', field?: string | null, message: string } | { __typename: 'ProductChannelListingError', field?: string | null, message: string } | { __typename: 'ProductError', field?: string | null, message: string } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string } | { __typename: 'ShippingError', field?: string | null, message: string } | { __typename: 'StaffError', field?: string | null, message: string } | { __typename: 'TaxClassCreateError', field?: string | null, message: string } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'WarehouseError', field?: string | null, message: string }> | null } };

export type TransactionActionRequestSubscriptionSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type TransactionActionRequestSubscriptionSubscription = { __typename: 'Subscription', event: { __typename: 'AddressCreated' } | { __typename: 'AddressDeleted' } | { __typename: 'AddressUpdated' } | { __typename: 'AppDeleted' } | { __typename: 'AppInstalled' } | { __typename: 'AppStatusChanged' } | { __typename: 'AppUpdated' } | { __typename: 'AttributeCreated' } | { __typename: 'AttributeDeleted' } | { __typename: 'AttributeUpdated' } | { __typename: 'CalculateTaxes' } | { __typename: 'CategoryCreated' } | { __typename: 'CategoryDeleted' } | { __typename: 'CategoryUpdated' } | { __typename: 'ChannelCreated' } | { __typename: 'ChannelDeleted' } | { __typename: 'ChannelStatusChanged' } | { __typename: 'ChannelUpdated' } | { __typename: 'CheckoutCreated' } | { __typename: 'CheckoutFilterShippingMethods' } | { __typename: 'CheckoutMetadataUpdated' } | { __typename: 'CheckoutUpdated' } | { __typename: 'CollectionCreated' } | { __typename: 'CollectionDeleted' } | { __typename: 'CollectionMetadataUpdated' } | { __typename: 'CollectionUpdated' } | { __typename: 'CreateOrderd' } | { __typename: 'CustomerCreated' } | { __typename: 'CustomerMetadataUpdated' } | { __typename: 'CustomerUpdated' } | { __typename: 'DraftOrderCreated' } | { __typename: 'DraftOrderDeleted' } | { __typename: 'DraftOrderUpdated' } | { __typename: 'FulfillmentApproved' } | { __typename: 'FulfillmentCanceled' } | { __typename: 'FulfillmentCreated' } | { __typename: 'FulfillmentMetadataUpdated' } | { __typename: 'GiftCardCreated' } | { __typename: 'GiftCardDeleted' } | { __typename: 'GiftCardMetadataUpdated' } | { __typename: 'GiftCardStatusChanged' } | { __typename: 'GiftCardUpdated' } | { __typename: 'GroupCreated' } | { __typename: 'GroupDeleted' } | { __typename: 'GroupUpdated' } | { __typename: 'InvoiceDeleted' } | { __typename: 'InvoiceRequested' } | { __typename: 'InvoiceSent' } | { __typename: 'MediaCreated' } | { __typename: 'MediaDeleted' } | { __typename: 'MediaUpdated' } | { __typename: 'MenuCreated' } | { __typename: 'MenuDeleted' } | { __typename: 'MenuItemCreated' } | { __typename: 'MenuItemDeleted' } | { __typename: 'MenuItemUpdated' } | { __typename: 'MenuUpdated' } | { __typename: 'OrderCancelled' } | { __typename: 'OrderConfirmed' } | { __typename: 'OrderFilterShippingMethods' } | { __typename: 'OrderFulfilled' } | { __typename: 'OrderFullyPaid' } | { __typename: 'OrderMetadataUpdated' } | { __typename: 'OrderUpdated' } | { __typename: 'PageCreated' } | { __typename: 'PageDeleted' } | { __typename: 'PageKlassCreated' } | { __typename: 'PageKlassDeleted' } | { __typename: 'PageKlassUpdated' } | { __typename: 'PageUpdated' } | { __typename: 'PaymentAuthorize' } | { __typename: 'PaymentCaptureEvent' } | { __typename: 'PaymentConfirmEvent' } | { __typename: 'PaymentListGateways' } | { __typename: 'PaymentProcessEvent' } | { __typename: 'PaymentRefundEvent' } | { __typename: 'PaymentVoidEvent' } | { __typename: 'ProductBackInStock' } | { __typename: 'ProductCreated' } | { __typename: 'ProductDeleted' } | { __typename: 'ProductMetadataUpdated' } | { __typename: 'ProductOutOfStock' } | { __typename: 'ProductUpdated' } | { __typename: 'SaleCreated' } | { __typename: 'SaleDeleted' } | { __typename: 'SaleToggle' } | { __typename: 'SaleUpdated' } | { __typename: 'ShippingListMethodsForCheckout' } | { __typename: 'ShippingPriceCreated' } | { __typename: 'ShippingPriceDeleted' } | { __typename: 'ShippingPriceUpdated' } | { __typename: 'ShippingZoneCreated' } | { __typename: 'ShippingZoneDeleted' } | { __typename: 'ShippingZoneMetadataUpdated' } | { __typename: 'ShippingZoneUpdated' } | { __typename: 'StaffCreated' } | { __typename: 'StaffDeleted' } | { __typename: 'StaffUpdated' } | { __typename: 'Subscription' } | { __typename: 'TransactionAction' } | { __typename: 'TransactionActionRequest', transaction: { __typename: 'TransactionItem', id: string, reference: string, type: string, amountAuthorized: { __typename: 'Money', amount: number, currency: Currency }, amountCharged: { __typename: 'Money', amount: number }, amountVoided: { __typename: 'Money', amount: number }, amountRefunded: { __typename: 'Money', amount: number } }, action: { __typename: 'TransactionAction', actionType: TransactionActionType, amount: string | number } } | { __typename: 'TransactionItemMetadataUpdated' } | { __typename: 'TranslationCreated' } | { __typename: 'TranslationUpdated' } | { __typename: 'ValueCreated' } | { __typename: 'ValueDeleted' } | { __typename: 'ValueUpdated' } | { __typename: 'VoucherCreated' } | { __typename: 'VoucherDeleted' } | { __typename: 'VoucherMetadataUpdated' } | { __typename: 'VoucherUpdated' } | { __typename: 'WarehouseCreated' } | { __typename: 'WarehouseDeleted' } | { __typename: 'WarehouseMetadataUpdated' } | { __typename: 'WarehouseUpdated' } };

export type TransactionActionPayloadFragment = { __typename: 'TransactionActionRequest', transaction: { __typename: 'TransactionItem', id: string, reference: string, type: string, amountAuthorized: { __typename: 'Money', amount: number, currency: Currency }, amountCharged: { __typename: 'Money', amount: number }, amountVoided: { __typename: 'Money', amount: number }, amountRefunded: { __typename: 'Money', amount: number } }, action: { __typename: 'TransactionAction', actionType: TransactionActionType, amount: string | number } };

export type CreateWebhooksMutationVariables = Exact<{
  targetUrl: Scalars['String']['input'];
  query?: InputMaybe<Scalars['String']['input']>;
}>;


export type CreateWebhooksMutation = { __typename: 'Mutation', createWebhook: { __typename: 'WebhookMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CheckWebhooksQueryVariables = Exact<{ [key: string]: never; }>;


export type CheckWebhooksQuery = { __typename: 'Query', app: { __typename: 'App', webhooks: Array<{ __typename: 'Webhook', id: string, targetUrl: string }> } };

export type AddressFragment = { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null };

export type AttributeFragment = { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType };

export type AttributeDetailsFragment = { __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type AttributeFilterChoiceFragment = { __typename: 'Value', id: string, name: string, slug: string, translation?: { __typename: 'ValueTranslation', name: string } | null };

export type AttributeFilterFragment = { __typename: 'Attribute', id: string, inputType: AttributeInputType, name: string, slug: string, withChoices: boolean, translation: { __typename: 'AttributeTranslation', id: string, name: string }, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', id: string, name: string, slug: string, translation?: { __typename: 'ValueTranslation', name: string } | null } }> } };

export type CategoryBasicFragment = { __typename: 'Category', id: string, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null };

export type CategoryDetailsFragment = { __typename: 'Category', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, ancestors: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type ChannelFragment = { __typename: 'Channel', id: string, name: string, slug: string, isActive: boolean, currencyCode: string, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } };

export type CheckoutErrorFragment = { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null };

export type CheckoutFragment = { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> };

export type CheckoutLineFragment = { __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } };

export type CollectionBasicFragment = { __typename: 'Collection', id: string, name: string, slug: string, translation?: { __typename: 'CollectionTranslation', id: string, name: string } | null };

export type CollectionDetailsFragment = { __typename: 'Collection', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, translation?: { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type FulfillmentMethod_ShippingMethod_Fragment = { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } };

type FulfillmentMethod_Warehouse_Fragment = { __typename: 'Warehouse', id: string, name: string };

export type FulfillmentMethodFragment = FulfillmentMethod_ShippingMethod_Fragment | FulfillmentMethod_Warehouse_Fragment;

export type ErrorDetailsFragment = { __typename: 'CheckoutError', field?: string | null, message: string, code?: string | null };

type Error_AccountError_Fragment = { __typename: 'AccountError', message: string, field?: string | null, code?: string | null };

type Error_AppError_Fragment = { __typename: 'AppError', message: string, field?: string | null, code?: string | null };

type Error_BulkProductError_Fragment = { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null };

type Error_BulkStockError_Fragment = { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null };

type Error_ChannelError_Fragment = { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null };

type Error_CheckoutError_Fragment = { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null };

type Error_CollectionChannelListingError_Fragment = { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null };

type Error_DiscountError_Fragment = { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null };

type Error_Error_Fragment = { __typename: 'Error', message: string, field?: string | null, code?: string | null };

type Error_GiftCardError_Fragment = { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null };

type Error_GroupError_Fragment = { __typename: 'GroupError', message: string, field?: string | null, code?: string | null };

type Error_MediaError_Fragment = { __typename: 'MediaError', message: string, field?: string | null, code?: string | null };

type Error_OrderError_Fragment = { __typename: 'OrderError', message: string, field?: string | null, code?: string | null };

type Error_PageError_Fragment = { __typename: 'PageError', message: string, field?: string | null, code?: string | null };

type Error_PaymentError_Fragment = { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null };

type Error_ProductChannelListingError_Fragment = { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null };

type Error_ProductError_Fragment = { __typename: 'ProductError', message: string, field?: string | null, code?: string | null };

type Error_ProductWithoutVariantError_Fragment = { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null };

type Error_ShippingError_Fragment = { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null };

type Error_StaffError_Fragment = { __typename: 'StaffError', message: string, field?: string | null, code?: string | null };

type Error_TaxClassCreateError_Fragment = { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null };

type Error_TaxClassDeleteError_Fragment = { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null };

type Error_TaxClassUpdateError_Fragment = { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null };

type Error_TaxConfigurationUpdateError_Fragment = { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null };

type Error_TaxCountryConfigurationUpdateError_Fragment = { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null };

type Error_WarehouseError_Fragment = { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null };

export type ErrorFragment = Error_AccountError_Fragment | Error_AppError_Fragment | Error_BulkProductError_Fragment | Error_BulkStockError_Fragment | Error_ChannelError_Fragment | Error_CheckoutError_Fragment | Error_CollectionChannelListingError_Fragment | Error_DiscountError_Fragment | Error_Error_Fragment | Error_GiftCardError_Fragment | Error_GroupError_Fragment | Error_MediaError_Fragment | Error_OrderError_Fragment | Error_PageError_Fragment | Error_PaymentError_Fragment | Error_ProductChannelListingError_Fragment | Error_ProductError_Fragment | Error_ProductWithoutVariantError_Fragment | Error_ShippingError_Fragment | Error_StaffError_Fragment | Error_TaxClassCreateError_Fragment | Error_TaxClassDeleteError_Fragment | Error_TaxClassUpdateError_Fragment | Error_TaxConfigurationUpdateError_Fragment | Error_TaxCountryConfigurationUpdateError_Fragment | Error_WarehouseError_Fragment;

export type FileFragment = { __typename: 'File', url: string, contentType: string };

export type GiftCardFragment = { __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } };

export type HomepageBlockFragment = { __typename: 'MenuItem', id: string, name: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string, content: string, title: string, translation?: { __typename: 'PageTranslation', content: string, title: string } | null } | null };

export type ImageFragment = { __typename: 'Image', url: string, alt: string };

export type MenuItemFragment = { __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null };

export type MenuItemWithChildrenFragment = { __typename: 'MenuItem', id: string, name: string, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null };

export type MetadataItemFragment = { __typename: 'MetadataItem', key: string, value: string };

type Metadata_AbstractProduct_Fragment = { __typename: 'AbstractProduct', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_App_Fragment = { __typename: 'App', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Attribute_Fragment = { __typename: 'Attribute', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Category_Fragment = { __typename: 'Category', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Checkout_Fragment = { __typename: 'Checkout', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_CheckoutLine_Fragment = { __typename: 'CheckoutLine', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Collection_Fragment = { __typename: 'Collection', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_DigitalContent_Fragment = { __typename: 'DigitalContent', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Fulfillment_Fragment = { __typename: 'Fulfillment', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_GiftCard_Fragment = { __typename: 'GiftCard', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Invoice_Fragment = { __typename: 'Invoice', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_MediaItem_Fragment = { __typename: 'MediaItem', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Menu_Fragment = { __typename: 'Menu', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_MenuItem_Fragment = { __typename: 'MenuItem', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Order_Fragment = { __typename: 'Order', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_OrderLine_Fragment = { __typename: 'OrderLine', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Page_Fragment = { __typename: 'Page', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_PageKlass_Fragment = { __typename: 'PageKlass', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Payment_Fragment = { __typename: 'Payment', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_ProductKlass_Fragment = { __typename: 'ProductKlass', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Sale_Fragment = { __typename: 'Sale', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_ShippingMethod_Fragment = { __typename: 'ShippingMethod', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_ShippingZone_Fragment = { __typename: 'ShippingZone', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_TaxClass_Fragment = { __typename: 'TaxClass', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_TaxConfiguration_Fragment = { __typename: 'TaxConfiguration', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_TransactionItem_Fragment = { __typename: 'TransactionItem', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_User_Fragment = { __typename: 'User', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Voucher_Fragment = { __typename: 'Voucher', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Metadata_Warehouse_Fragment = { __typename: 'Warehouse', metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type MetadataFragment = Metadata_AbstractProduct_Fragment | Metadata_App_Fragment | Metadata_Attribute_Fragment | Metadata_Category_Fragment | Metadata_Checkout_Fragment | Metadata_CheckoutLine_Fragment | Metadata_Collection_Fragment | Metadata_ConcreteProduct_Fragment | Metadata_DigitalContent_Fragment | Metadata_Fulfillment_Fragment | Metadata_GiftCard_Fragment | Metadata_Invoice_Fragment | Metadata_MediaItem_Fragment | Metadata_Menu_Fragment | Metadata_MenuItem_Fragment | Metadata_Order_Fragment | Metadata_OrderLine_Fragment | Metadata_Page_Fragment | Metadata_PageKlass_Fragment | Metadata_Payment_Fragment | Metadata_ProductKlass_Fragment | Metadata_Sale_Fragment | Metadata_ShippingMethod_Fragment | Metadata_ShippingZone_Fragment | Metadata_TaxClass_Fragment | Metadata_TaxConfiguration_Fragment | Metadata_TransactionItem_Fragment | Metadata_User_Fragment | Metadata_Voucher_Fragment | Metadata_Warehouse_Fragment;

export type MoneyFragment = { __typename: 'Money', currency: Currency, amount: number };

export type OrderFragment = { __typename: 'Order', id: string, createdAt: string, number: string, status: OrderStatus, userEmail?: string | null, isPaid: boolean, shippingTaxRate: number, shippingMethodName: string, privateMetafield?: string | null, discounts: Array<{ __typename: 'OrderDiscount', type: OrderDiscountType, name: string, amount: { __typename: 'Money', currency: Currency, amount: number } }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse' } | null, total: { __typename: 'TaxedMoney', currency: string, gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, voucher?: { __typename: 'Voucher', code: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null }>, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number } };

export type OrderLineFragment = { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null };

export type PageInfoFragment = { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null };

export type PointOfContactFragment = { __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null };

type ProductCard_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, slug: string, name: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, category?: { __typename: 'Category', id: string, name: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', url: string, alt: string, type: MediaType }>, attributes: Array<{ __typename: 'Attribute', slug: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }> };

type ProductCard_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', id: string, slug: string, name: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, category?: { __typename: 'Category', id: string, name: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', url: string, alt: string, type: MediaType }>, attributes: Array<{ __typename: 'Attribute', slug: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }> };

export type ProductCardFragment = ProductCard_AbstractProduct_Fragment | ProductCard_ConcreteProduct_Fragment;

type ProductVariant_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null };

type ProductVariant_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null };

export type ProductVariantFragment = ProductVariant_AbstractProduct_Fragment | ProductVariant_ConcreteProduct_Fragment;

export type ProductAncestorFragment = { __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> };

type BaseProductDetails_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null };

type BaseProductDetails_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null };

export type BaseProductDetailsFragment = BaseProductDetails_AbstractProduct_Fragment | BaseProductDetails_ConcreteProduct_Fragment;

export type AbstractProductDetailsFragment = { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } } | null, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }>, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null };

export type ConcreteProductDetailsFragment = { __typename: 'ConcreteProduct', quantityAvailable?: number | null, id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null };

type ProductDetails_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } } | null, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }>, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null };

type ProductDetails_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', quantityAvailable?: number | null, id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null };

export type ProductDetailsFragment = ProductDetails_AbstractProduct_Fragment | ProductDetails_ConcreteProduct_Fragment;

export type ProductMediaItemFragment = { __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string };

export type SelectedAttributeDetailsFragment = { __typename: 'Attribute', id: string, name: string, type: AttributeType, unit: MeasurementUnit, translation: { __typename: 'AttributeTranslation', id: string, name: string }, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string, value: string, translation?: { __typename: 'ValueTranslation', id: string, name: string, richText: string } | null } }> } };

export type ShippingMethodFragment = { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } };

export type StockFragment = { __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } };

export type TransactionEventFragment = { __typename: 'TransactionEvent', name: string, reference: string };

export type TransactionItemFragment = { __typename: 'TransactionItem', id: string, reference: string, amountVoided: { __typename: 'Money', currency: Currency, amount: number }, amountRefunded: { __typename: 'Money', currency: Currency, amount: number }, amountCharged: { __typename: 'Money', currency: Currency, amount: number }, amountAuthorized: { __typename: 'Money', currency: Currency, amount: number }, events: Array<{ __typename: 'TransactionEvent', name: string, reference: string }> };

export type UserBaseFragment = { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null };

export type UserDetailsFragment = { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null };

export type UserPermissionFragment = { __typename: 'UserPermission', code: PermissionCode, name: string };

export type ValidationRulesFragment = { __typename: 'AddressValidationData', addressFormat: string, allowedFields: Array<string>, requiredFields: Array<string>, countryAreaType: string, postalCodeType: string, cityType: string, countryAreaChoices: Array<{ __typename: 'ChoiceValue', raw: string, verbose: string }> };

export type WarehouseFragment = { __typename: 'Warehouse', id: string, name: string };

export type AddressDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type AddressDeleteMutation = { __typename: 'Mutation', deleteAddress: { __typename: 'AddressMutationResult', user: { __typename: 'User', addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }> } } };

export type AddressSetDefaultMutationVariables = Exact<{
  addressID: Scalars['ID']['input'];
  userID: Scalars['ID']['input'];
  addressType: AddressType;
}>;


export type AddressSetDefaultMutation = { __typename: 'Mutation', setDefaultAddress: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string, code?: string | null } | { __typename: 'AppError', field?: string | null, message: string, code?: string | null } | { __typename: 'BulkProductError', field?: string | null, message: string, code?: string | null } | { __typename: 'BulkStockError', field?: string | null, message: string, code?: string | null } | { __typename: 'ChannelError', field?: string | null, message: string, code?: string | null } | { __typename: 'CheckoutError', field?: string | null, message: string, code?: string | null } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string, code?: string | null } | { __typename: 'DiscountError', field?: string | null, message: string, code?: string | null } | { __typename: 'Error', field?: string | null, message: string, code?: string | null } | { __typename: 'GiftCardError', field?: string | null, message: string, code?: string | null } | { __typename: 'GroupError', field?: string | null, message: string, code?: string | null } | { __typename: 'MediaError', field?: string | null, message: string, code?: string | null } | { __typename: 'OrderError', field?: string | null, message: string, code?: string | null } | { __typename: 'PageError', field?: string | null, message: string, code?: string | null } | { __typename: 'PaymentError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductChannelListingError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string, code?: string | null } | { __typename: 'ShippingError', field?: string | null, message: string, code?: string | null } | { __typename: 'StaffError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassCreateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'WarehouseError', field?: string | null, message: string, code?: string | null }> | null } };

export type CheckoutAddProductLineMutationVariables = Exact<{
  checkoutId: Scalars['ID']['input'];
  productId: Scalars['ID']['input'];
}>;


export type CheckoutAddProductLineMutation = { __typename: 'Mutation', addCheckoutLines: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> }, errors?: Array<{ __typename: 'AccountError', message: string } | { __typename: 'AppError', message: string } | { __typename: 'BulkProductError', message: string } | { __typename: 'BulkStockError', message: string } | { __typename: 'ChannelError', message: string } | { __typename: 'CheckoutError', code?: string | null, field?: string | null, message: string } | { __typename: 'CollectionChannelListingError', message: string } | { __typename: 'DiscountError', message: string } | { __typename: 'Error', message: string } | { __typename: 'GiftCardError', message: string } | { __typename: 'GroupError', message: string } | { __typename: 'MediaError', message: string } | { __typename: 'OrderError', message: string } | { __typename: 'PageError', message: string } | { __typename: 'PaymentError', message: string } | { __typename: 'ProductChannelListingError', message: string } | { __typename: 'ProductError', message: string } | { __typename: 'ProductWithoutVariantError', message: string } | { __typename: 'ShippingError', message: string } | { __typename: 'StaffError', message: string } | { __typename: 'TaxClassCreateError', message: string } | { __typename: 'TaxClassDeleteError', message: string } | { __typename: 'TaxClassUpdateError', message: string } | { __typename: 'TaxConfigurationUpdateError', message: string } | { __typename: 'TaxCountryConfigurationUpdateError', message: string } | { __typename: 'WarehouseError', message: string }> | null } };

export type CheckoutAddPromoCodeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  promoCode: Scalars['String']['input'];
}>;


export type CheckoutAddPromoCodeMutation = { __typename: 'Mutation', addPromoCodeToCheckout: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null } | { __typename: 'AppError', message: string, field?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null } | { __typename: 'Error', message: string, field?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null } | { __typename: 'GroupError', message: string, field?: string | null } | { __typename: 'MediaError', message: string, field?: string | null } | { __typename: 'OrderError', message: string, field?: string | null } | { __typename: 'PageError', message: string, field?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null } | { __typename: 'ProductError', message: string, field?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null } | { __typename: 'StaffError', message: string, field?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null }> | null } };

export type CheckoutBillingAddressUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  address: AddressUpdateInput;
}>;


export type CheckoutBillingAddressUpdateMutation = { __typename: 'Mutation', updateCheckoutBillingAddress: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> }, errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string } | { __typename: 'AppError', field?: string | null, message: string } | { __typename: 'BulkProductError', field?: string | null, message: string } | { __typename: 'BulkStockError', field?: string | null, message: string } | { __typename: 'ChannelError', field?: string | null, message: string } | { __typename: 'CheckoutError', field?: string | null, message: string } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string } | { __typename: 'DiscountError', field?: string | null, message: string } | { __typename: 'Error', field?: string | null, message: string } | { __typename: 'GiftCardError', field?: string | null, message: string } | { __typename: 'GroupError', field?: string | null, message: string } | { __typename: 'MediaError', field?: string | null, message: string } | { __typename: 'OrderError', field?: string | null, message: string } | { __typename: 'PageError', field?: string | null, message: string } | { __typename: 'PaymentError', field?: string | null, message: string } | { __typename: 'ProductChannelListingError', field?: string | null, message: string } | { __typename: 'ProductError', field?: string | null, message: string } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string } | { __typename: 'ShippingError', field?: string | null, message: string } | { __typename: 'StaffError', field?: string | null, message: string } | { __typename: 'TaxClassCreateError', field?: string | null, message: string } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'WarehouseError', field?: string | null, message: string }> | null } };

export type CompleteCheckoutMutationVariables = Exact<{
  checkoutId: Scalars['ID']['input'];
  paymentData?: InputMaybe<Scalars['JSONString']['input']>;
}>;


export type CompleteCheckoutMutation = { __typename: 'Mutation', completeCheckout: { __typename: 'CheckoutCompleteMutationResult', confirmationNeeded: boolean, confirmationData?: string | null, order: { __typename: 'Order', id: string, status: OrderStatus, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null }, errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string } | { __typename: 'AppError', field?: string | null, message: string } | { __typename: 'BulkProductError', field?: string | null, message: string } | { __typename: 'BulkStockError', field?: string | null, message: string } | { __typename: 'ChannelError', field?: string | null, message: string } | { __typename: 'CheckoutError', field?: string | null, message: string } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string } | { __typename: 'DiscountError', field?: string | null, message: string } | { __typename: 'Error', field?: string | null, message: string } | { __typename: 'GiftCardError', field?: string | null, message: string } | { __typename: 'GroupError', field?: string | null, message: string } | { __typename: 'MediaError', field?: string | null, message: string } | { __typename: 'OrderError', field?: string | null, message: string } | { __typename: 'PageError', field?: string | null, message: string } | { __typename: 'PaymentError', field?: string | null, message: string } | { __typename: 'ProductChannelListingError', field?: string | null, message: string } | { __typename: 'ProductError', field?: string | null, message: string } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string } | { __typename: 'ShippingError', field?: string | null, message: string } | { __typename: 'StaffError', field?: string | null, message: string } | { __typename: 'TaxClassCreateError', field?: string | null, message: string } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'WarehouseError', field?: string | null, message: string }> | null } };

export type CheckoutContactInfoUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: CheckoutContactInfoUpdateInput;
}>;


export type CheckoutContactInfoUpdateMutation = { __typename: 'Mutation', updateCheckoutContactInfo: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type CreateCheckoutPaymentMutationVariables = Exact<{
  checkoutId: Scalars['ID']['input'];
  paymentInput: PaymentInput;
}>;


export type CreateCheckoutPaymentMutation = { __typename: 'Mutation', createCheckoutPayment: { __typename: 'CheckoutPaymentMutationResult', payment: { __typename: 'Payment', id: string, total: { __typename: 'Money', currency: Currency, amount: number } }, errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string, code?: string | null } | { __typename: 'AppError', field?: string | null, message: string, code?: string | null } | { __typename: 'BulkProductError', field?: string | null, message: string, code?: string | null } | { __typename: 'BulkStockError', field?: string | null, message: string, code?: string | null } | { __typename: 'ChannelError', field?: string | null, message: string, code?: string | null } | { __typename: 'CheckoutError', field?: string | null, message: string, code?: string | null } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string, code?: string | null } | { __typename: 'DiscountError', field?: string | null, message: string, code?: string | null } | { __typename: 'Error', field?: string | null, message: string, code?: string | null } | { __typename: 'GiftCardError', field?: string | null, message: string, code?: string | null } | { __typename: 'GroupError', field?: string | null, message: string, code?: string | null } | { __typename: 'MediaError', field?: string | null, message: string, code?: string | null } | { __typename: 'OrderError', field?: string | null, message: string, code?: string | null } | { __typename: 'PageError', field?: string | null, message: string, code?: string | null } | { __typename: 'PaymentError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductChannelListingError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string, code?: string | null } | { __typename: 'ShippingError', field?: string | null, message: string, code?: string | null } | { __typename: 'StaffError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassCreateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'WarehouseError', field?: string | null, message: string, code?: string | null }> | null } };

export type AttachCustomerToCheckoutMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type AttachCustomerToCheckoutMutation = { __typename: 'Mutation', attachCustomerToCheckout: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type DetachCustomerFromCheckoutMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DetachCustomerFromCheckoutMutation = { __typename: 'Mutation', detachCustomerFromCheckout: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type UpdateCheckoutFulfillmentMethodMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  fulfillmentMethodId: Scalars['ID']['input'];
  fulfillmentDeadline?: InputMaybe<Scalars['DateTime']['input']>;
}>;


export type UpdateCheckoutFulfillmentMethodMutation = { __typename: 'Mutation', updateCheckoutFulfillmentMethod: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type CheckoutLineDeleteMutationVariables = Exact<{
  checkoutId: Scalars['ID']['input'];
  lineId: Scalars['ID']['input'];
}>;


export type CheckoutLineDeleteMutation = { __typename: 'Mutation', deleteCheckoutLine: { __typename: 'CheckoutOptionalMutationResult', result?: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } | null } };

export type CheckoutLineUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  lines: Array<CheckoutLineUpdateInput> | CheckoutLineUpdateInput;
}>;


export type CheckoutLineUpdateMutation = { __typename: 'Mutation', updateCheckoutLines: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type UpdateCheckoutLinesMutationVariables = Exact<{
  checkoutId: Scalars['ID']['input'];
  lines: Array<CheckoutLineUpdateInput> | CheckoutLineUpdateInput;
}>;


export type UpdateCheckoutLinesMutation = { __typename: 'Mutation', updateCheckoutLines: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type RemovePromoCodeFromCheckoutMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  promoCode?: InputMaybe<Scalars['String']['input']>;
  promoCodeId?: InputMaybe<Scalars['ID']['input']>;
}>;


export type RemovePromoCodeFromCheckoutMutation = { __typename: 'Mutation', removePromoCodeFromCheckout: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type CheckoutShippingAddressUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  address: AddressUpdateInput;
}>;


export type CheckoutShippingAddressUpdateMutation = { __typename: 'Mutation', updateCheckoutShippingAddress: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type CheckoutShippingMethodUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  shippingMethodId: Scalars['ID']['input'];
}>;


export type CheckoutShippingMethodUpdateMutation = { __typename: 'Mutation', updateCheckoutShippingMethod: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } } };

export type AccountConfirmMutationVariables = Exact<{
  email: Scalars['String']['input'];
  token: Scalars['String']['input'];
}>;


export type AccountConfirmMutation = { __typename: 'Mutation', confirmAccount: { __typename: 'UserMutationResult', result: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ConfirmEmailChangeMutationVariables = Exact<{
  token: Scalars['String']['input'];
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type ConfirmEmailChangeMutation = { __typename: 'Mutation', confirmEmailChange: { __typename: 'UserMutationResult', result: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CreateAccountAddressMutationVariables = Exact<{
  input: AddressUpdateInput;
}>;


export type CreateAccountAddressMutation = { __typename: 'Mutation', addAddress: { __typename: 'AddressMutationResult', address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CreateOrderMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type CreateOrderMutation = { __typename: 'Mutation', createOrderFromCheckout: { __typename: 'OrderMutationResult', result: { __typename: 'Order', id: string, createdAt: string, number: string, status: OrderStatus, userEmail?: string | null, isPaid: boolean, shippingTaxRate: number, shippingMethodName: string, privateMetafield?: string | null, discounts: Array<{ __typename: 'OrderDiscount', type: OrderDiscountType, name: string, amount: { __typename: 'Money', currency: Currency, amount: number } }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse' } | null, total: { __typename: 'TaxedMoney', currency: string, gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, voucher?: { __typename: 'Voucher', code: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null }>, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number } } } };

export type SetAddressDefaultMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  type: AddressType;
}>;


export type SetAddressDefaultMutation = { __typename: 'Mutation', setDefaultAddress: { __typename: 'UserMutationResult', result: { __typename: 'User', addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }> }, errors?: Array<{ __typename: 'AccountError', code?: string | null, message: string } | { __typename: 'AppError', code?: string | null, message: string } | { __typename: 'BulkProductError', code?: string | null, message: string } | { __typename: 'BulkStockError', code?: string | null, message: string } | { __typename: 'ChannelError', code?: string | null, message: string } | { __typename: 'CheckoutError', code?: string | null, message: string } | { __typename: 'CollectionChannelListingError', code?: string | null, message: string } | { __typename: 'DiscountError', code?: string | null, message: string } | { __typename: 'Error', code?: string | null, message: string } | { __typename: 'GiftCardError', code?: string | null, message: string } | { __typename: 'GroupError', code?: string | null, message: string } | { __typename: 'MediaError', code?: string | null, message: string } | { __typename: 'OrderError', code?: string | null, message: string } | { __typename: 'PageError', code?: string | null, message: string } | { __typename: 'PaymentError', code?: string | null, message: string } | { __typename: 'ProductChannelListingError', code?: string | null, message: string } | { __typename: 'ProductError', code?: string | null, message: string } | { __typename: 'ProductWithoutVariantError', code?: string | null, message: string } | { __typename: 'ShippingError', code?: string | null, message: string } | { __typename: 'StaffError', code?: string | null, message: string } | { __typename: 'TaxClassCreateError', code?: string | null, message: string } | { __typename: 'TaxClassDeleteError', code?: string | null, message: string } | { __typename: 'TaxClassUpdateError', code?: string | null, message: string } | { __typename: 'TaxConfigurationUpdateError', code?: string | null, message: string } | { __typename: 'TaxCountryConfigurationUpdateError', code?: string | null, message: string } | { __typename: 'WarehouseError', code?: string | null, message: string }> | null } };

export type DeleteAccountMutationVariables = Exact<{
  token: Scalars['String']['input'];
}>;


export type DeleteAccountMutation = { __typename: 'Mutation', deleteAccount: { __typename: 'UserMutationResult', result: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type DeleteAddressMutationVariables = Exact<{
  addressId: Scalars['ID']['input'];
}>;


export type DeleteAddressMutation = { __typename: 'Mutation', deleteAddress: { __typename: 'AddressMutationResult', user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ExternalAuthenticationUrlMutationVariables = Exact<{
  pluginId?: InputMaybe<Scalars['String']['input']>;
  input: Scalars['JSONString']['input'];
}>;


export type ExternalAuthenticationUrlMutation = { __typename: 'Mutation', externalAuthenticationUrl: { __typename: 'AuthPluginMutationResult', data?: string | null, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type RefreshExternalTokenMutationVariables = Exact<{
  pluginId?: InputMaybe<Scalars['String']['input']>;
  input: Scalars['JSONString']['input'];
}>;


export type RefreshExternalTokenMutation = { __typename: 'Mutation', refreshToken: { __typename: 'JWTMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'JWT', accessToken: string, csrfToken: string } } };

export type ExternalRefreshWithUserMutationVariables = Exact<{
  pluginId?: InputMaybe<Scalars['String']['input']>;
  input: Scalars['JSONString']['input'];
}>;


export type ExternalRefreshWithUserMutation = { __typename: 'Mutation', refreshToken: { __typename: 'JWTMutationResult', result: { __typename: 'JWT', accessToken: string, csrfToken: string, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type VerifyExternalTokenMutationVariables = Exact<{
  pluginId?: InputMaybe<Scalars['String']['input']>;
  input: Scalars['JSONString']['input'];
}>;


export type VerifyExternalTokenMutation = { __typename: 'Mutation', verifyToken: { __typename: 'TokenVerificationMutationResult', isValid: boolean, payload: { __typename: 'JWT' }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type LoginWithoutDetailsMutationVariables = Exact<{
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
}>;


export type LoginWithoutDetailsMutation = { __typename: 'Mutation', obtainToken: { __typename: 'JWTMutationResult', result: { __typename: 'JWT', accessToken: string, csrfToken: string, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type LogoutMutationVariables = Exact<{
  input?: InputMaybe<AuthPluginInput>;
}>;


export type LogoutMutation = { __typename: 'Mutation', logout: { __typename: 'AuthPluginMutationResult', data?: string | null, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ObtainExternalAccessTokensMutationVariables = Exact<{
  pluginId?: InputMaybe<Scalars['String']['input']>;
  input: Scalars['JSONString']['input'];
}>;


export type ObtainExternalAccessTokensMutation = { __typename: 'Mutation', obtainToken: { __typename: 'JWTMutationResult', result: { __typename: 'JWT', accessToken: string, csrfToken: string, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type OrderUpdatePaymentMetafieldMutationVariables = Exact<{
  orderId: Scalars['ID']['input'];
  data: Scalars['String']['input'];
}>;


export type OrderUpdatePaymentMetafieldMutation = { __typename: 'Mutation', updatePrivateMetadata: { __typename: 'ObjectWithMetadataMutationResult' } };

export type PasswordChangeMutationVariables = Exact<{
  newPassword: Scalars['String']['input'];
  oldPassword: Scalars['String']['input'];
}>;


export type PasswordChangeMutation = { __typename: 'Mutation', changePassword: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string } | { __typename: 'AppError', field?: string | null, message: string } | { __typename: 'BulkProductError', field?: string | null, message: string } | { __typename: 'BulkStockError', field?: string | null, message: string } | { __typename: 'ChannelError', field?: string | null, message: string } | { __typename: 'CheckoutError', field?: string | null, message: string } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string } | { __typename: 'DiscountError', field?: string | null, message: string } | { __typename: 'Error', field?: string | null, message: string } | { __typename: 'GiftCardError', field?: string | null, message: string } | { __typename: 'GroupError', field?: string | null, message: string } | { __typename: 'MediaError', field?: string | null, message: string } | { __typename: 'OrderError', field?: string | null, message: string } | { __typename: 'PageError', field?: string | null, message: string } | { __typename: 'PaymentError', field?: string | null, message: string } | { __typename: 'ProductChannelListingError', field?: string | null, message: string } | { __typename: 'ProductError', field?: string | null, message: string } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string } | { __typename: 'ShippingError', field?: string | null, message: string } | { __typename: 'StaffError', field?: string | null, message: string } | { __typename: 'TaxClassCreateError', field?: string | null, message: string } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'WarehouseError', field?: string | null, message: string }> | null } };

export type RefreshTokenMutationVariables = Exact<{
  csrfToken: Scalars['String']['input'];
  refreshToken?: InputMaybe<Scalars['String']['input']>;
  pluginInput?: InputMaybe<AuthPluginInput>;
}>;


export type RefreshTokenMutation = { __typename: 'Mutation', refreshToken: { __typename: 'JWTMutationResult', result: { __typename: 'JWT', accessToken: string, csrfToken: string }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type RefreshTokenWithUserMutationVariables = Exact<{
  csrfToken: Scalars['String']['input'];
}>;


export type RefreshTokenWithUserMutation = { __typename: 'Mutation', refreshToken: { __typename: 'JWTMutationResult', result: { __typename: 'JWT', accessToken: string, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type RegisterMutationVariables = Exact<{
  input: UserCreationInput;
}>;


export type RegisterMutation = { __typename: 'Mutation', createUser: { __typename: 'UserCreationResult', requiresConfirmation: boolean, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type RequestAccountDeletionMutationVariables = Exact<{
  channel: Scalars['String']['input'];
}>;


export type RequestAccountDeletionMutation = { __typename: 'Mutation', requestAccountDeletion: { __typename: 'UserMutationResult' } };

export type RequestEmailChangeMutationVariables = Exact<{
  newEmail: Scalars['String']['input'];
  password: Scalars['String']['input'];
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type RequestEmailChangeMutation = { __typename: 'Mutation', requestEmailChange: { __typename: 'UserMutationResult', result: { __typename: 'User', email: string }, errors?: Array<{ __typename: 'AccountError', code?: string | null, field?: string | null, message: string } | { __typename: 'AppError', code?: string | null, field?: string | null, message: string } | { __typename: 'BulkProductError', code?: string | null, field?: string | null, message: string } | { __typename: 'BulkStockError', code?: string | null, field?: string | null, message: string } | { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string } | { __typename: 'CheckoutError', code?: string | null, field?: string | null, message: string } | { __typename: 'CollectionChannelListingError', code?: string | null, field?: string | null, message: string } | { __typename: 'DiscountError', code?: string | null, field?: string | null, message: string } | { __typename: 'Error', code?: string | null, field?: string | null, message: string } | { __typename: 'GiftCardError', code?: string | null, field?: string | null, message: string } | { __typename: 'GroupError', code?: string | null, field?: string | null, message: string } | { __typename: 'MediaError', code?: string | null, field?: string | null, message: string } | { __typename: 'OrderError', code?: string | null, field?: string | null, message: string } | { __typename: 'PageError', code?: string | null, field?: string | null, message: string } | { __typename: 'PaymentError', code?: string | null, field?: string | null, message: string } | { __typename: 'ProductChannelListingError', code?: string | null, field?: string | null, message: string } | { __typename: 'ProductError', code?: string | null, field?: string | null, message: string } | { __typename: 'ProductWithoutVariantError', code?: string | null, field?: string | null, message: string } | { __typename: 'ShippingError', code?: string | null, field?: string | null, message: string } | { __typename: 'StaffError', code?: string | null, field?: string | null, message: string } | { __typename: 'TaxClassCreateError', code?: string | null, field?: string | null, message: string } | { __typename: 'TaxClassDeleteError', code?: string | null, field?: string | null, message: string } | { __typename: 'TaxClassUpdateError', code?: string | null, field?: string | null, message: string } | { __typename: 'TaxConfigurationUpdateError', code?: string | null, field?: string | null, message: string } | { __typename: 'TaxCountryConfigurationUpdateError', code?: string | null, field?: string | null, message: string } | { __typename: 'WarehouseError', code?: string | null, field?: string | null, message: string }> | null } };

export type RequestPasswordResetMutationVariables = Exact<{
  email: Scalars['String']['input'];
  channel: Scalars['String']['input'];
}>;


export type RequestPasswordResetMutation = { __typename: 'Mutation', requestPasswordReset?: void | null };

export type SetAccountDefaultAddressMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  type: AddressType;
}>;


export type SetAccountDefaultAddressMutation = { __typename: 'Mutation', setDefaultAddress: { __typename: 'UserMutationResult', result: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type SetPasswordMutationVariables = Exact<{
  token: Scalars['String']['input'];
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
}>;


export type SetPasswordMutation = { __typename: 'Mutation', setPassword: { __typename: 'JWTMutationResult', result: { __typename: 'JWT', accessToken: string, csrfToken: string, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type TransactionCreateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  transaction: TransactionCreationInput;
  transactionEvent?: InputMaybe<TransactionEventInput>;
}>;


export type TransactionCreateMutation = { __typename: 'Mutation', createTransaction: { __typename: 'TransactionItemMutationResult', result: { __typename: 'TransactionItem', id: string } } };

export type TransactionUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  transaction: TransactionUpdateInput;
  transactionEvent?: InputMaybe<TransactionEventInput>;
}>;


export type TransactionUpdateMutation = { __typename: 'Mutation', updateTransaction: { __typename: 'TransactionItemMutationResult', result: { __typename: 'TransactionItem', id: string } } };

export type UpdateUserMutationVariables = Exact<{
  input: UserUpdateInput;
}>;


export type UpdateUserMutation = { __typename: 'Mutation', updateUser: { __typename: 'UserMutationResult', result: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UpdateUserAddressMutationVariables = Exact<{
  input: AddressUpdateInput;
  id: Scalars['ID']['input'];
}>;


export type UpdateUserAddressMutation = { __typename: 'Mutation', updateAddress: { __typename: 'AddressMutationResult', address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UserAddressCreateMutationVariables = Exact<{
  address: AddressUpdateInput;
  type?: InputMaybe<AddressType>;
}>;


export type UserAddressCreateMutation = { __typename: 'Mutation', addAddress: { __typename: 'AddressMutationResult', address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UserAddressDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type UserAddressDeleteMutation = { __typename: 'Mutation', deleteAddress: { __typename: 'AddressMutationResult', address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UserAddressUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  address: AddressUpdateInput;
}>;


export type UserAddressUpdateMutation = { __typename: 'Mutation', updateAddress: { __typename: 'AddressMutationResult', address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type VerifyTokenMutationVariables = Exact<{
  token: Scalars['String']['input'];
}>;


export type VerifyTokenMutation = { __typename: 'Mutation', verifyToken: { __typename: 'TokenVerificationMutationResult', isValid: boolean, payload: { __typename: 'JWT', accessToken: string, refreshToken: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type AddressValidationRulesQueryVariables = Exact<{
  countryCode: CountryCode;
}>;


export type AddressValidationRulesQuery = { __typename: 'Query', addressValidationRules: { __typename: 'AddressValidationData', addressFormat: string, allowedFields: Array<string>, requiredFields: Array<string>, countryAreaType: string, postalCodeType: string, cityType: string, countryAreaChoices: Array<{ __typename: 'ChoiceValue', raw: string, verbose: string }> } };

export type AppQueryVariables = Exact<{ [key: string]: never; }>;


export type AppQuery = { __typename: 'Query', app: { __typename: 'App', id: string, name: string } };

export type AvailableShippingMethodsQueryVariables = Exact<{
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type AvailableShippingMethodsQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null } };

export type CategoryBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;


export type CategoryBySlugQuery = { __typename: 'Query', category: { __typename: 'Category', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, ancestors: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type CategoryPathsQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
}>;


export type CategoryPathsQuery = { __typename: 'Query', categories: { __typename: 'CategoryConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'CategoryEdge', node: { __typename: 'Category', slug: string } }> } };

export type ChannelQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ChannelQuery = { __typename: 'Query', channel?: { __typename: 'Channel', id: string, name: string, slug: string, isActive: boolean, currencyCode: string, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } } | null };

export type ChannelBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;


export type ChannelBySlugQuery = { __typename: 'Query', channel?: { __typename: 'Channel', id: string, name: string, slug: string, isActive: boolean, currencyCode: string, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } } | null };

export type ChannelsQueryVariables = Exact<{ [key: string]: never; }>;


export type ChannelsQuery = { __typename: 'Query', channels: Array<{ __typename: 'Channel', id: string, name: string, slug: string, isActive: boolean, currencyCode: string, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } }> };

export type CheckoutQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type CheckoutQuery = { __typename: 'Query', checkout: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } };

export type CollectionBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionBySlugQuery = { __typename: 'Query', collection: { __typename: 'Collection', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, translation?: { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string } | null, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type CollectionPathsQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionPathsQuery = { __typename: 'Query', collections: { __typename: 'CollectionConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', slug: string } }> } };

export type CurrentUserDetailsQueryVariables = Exact<{ [key: string]: never; }>;


export type CurrentUserDetailsQuery = { __typename: 'Query', me: { __typename: 'User', id: string, lastLogin: string, dateJoined: string, email: string, firstName: string, lastName: string, avatar?: { __typename: 'Image', url: string, alt: string } | null, orders: { __typename: 'OrderNodeConnection', totalCount: number } } };

export type FilteringAttributesQueryVariables = Exact<{
  filter: AttributeFilter;
  channel: Scalars['String']['input'];
}>;


export type FilteringAttributesQuery = { __typename: 'Query', attributes: { __typename: 'AttributeConnection', totalCount: number, edges: Array<{ __typename: 'AttributeEdge', node: { __typename: 'Attribute', id: string, inputType: AttributeInputType, name: string, slug: string, withChoices: boolean, translation: { __typename: 'AttributeTranslation', id: string, name: string }, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', id: string, name: string, slug: string, translation?: { __typename: 'ValueTranslation', name: string } | null } }> } } }> } };

export type FooterMenuQueryVariables = Exact<{
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type FooterMenuQuery = { __typename: 'Query', menu: { __typename: 'Menu', id: string, items: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> } };

export type HomepageBlocksQueryVariables = Exact<{
  slug: Scalars['String']['input'];
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type HomepageBlocksQuery = { __typename: 'Query', menu: { __typename: 'Menu', id: string, name: string, slug: string, items: Array<{ __typename: 'MenuItem', id: string, name: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string, content: string, title: string, translation?: { __typename: 'PageTranslation', content: string, title: string } | null } | null }> } };

export type OrderQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderQuery = { __typename: 'Query', order: { __typename: 'Order', id: string, createdAt: string, number: string, status: OrderStatus, userEmail?: string | null, isPaid: boolean, shippingTaxRate: number, shippingMethodName: string, privateMetafield?: string | null, discounts: Array<{ __typename: 'OrderDiscount', type: OrderDiscountType, name: string, amount: { __typename: 'Money', currency: Currency, amount: number } }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse' } | null, total: { __typename: 'TaxedMoney', currency: string, gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, voucher?: { __typename: 'Voucher', code: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null }>, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number } } };

export type OrderPaymentDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderPaymentDetailsQuery = { __typename: 'Query', order: { __typename: 'Order', authorizeStatus: OrderAuthorizeStatus, chargeStatus: OrderChargeStatus, isPaid: boolean, status: OrderStatus, privateMetafield?: string | null } };

export type OrderTransactionsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderTransactionsQuery = { __typename: 'Query', order: { __typename: 'Order', transactions: Array<{ __typename: 'TransactionItem', id: string, reference: string, amountVoided: { __typename: 'Money', currency: Currency, amount: number }, amountRefunded: { __typename: 'Money', currency: Currency, amount: number }, amountCharged: { __typename: 'Money', currency: Currency, amount: number }, amountAuthorized: { __typename: 'Money', currency: Currency, amount: number }, events: Array<{ __typename: 'TransactionEvent', name: string, reference: string }> }> } };

export type OrdersQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
}>;


export type OrdersQuery = { __typename: 'Query', me: { __typename: 'User', orders: { __typename: 'OrderNodeConnection', totalCount: number, edges: Array<{ __typename: 'OrderNodeEdge', cursor: string, node: { __typename: 'Order', id: string, createdAt: string, number: string, status: OrderStatus, userEmail?: string | null, isPaid: boolean, shippingTaxRate: number, shippingMethodName: string, privateMetafield?: string | null, discounts: Array<{ __typename: 'OrderDiscount', type: OrderDiscountType, name: string, amount: { __typename: 'Money', currency: Currency, amount: number } }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse' } | null, total: { __typename: 'TaxedMoney', currency: string, gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, voucher?: { __typename: 'Voucher', code: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null }>, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } } };

export type PageQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;


export type PageQuery = { __typename: 'Query', page: { __typename: 'Page', seoTitle: string, seoDescription: string, createdAt: string, id: string, title: string, slug: string, isPublished: boolean, content: string, translation?: { __typename: 'PageTranslation', id: string, title: string, content: string } | null } };

export type PagePathsQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
}>;


export type PagePathsQuery = { __typename: 'Query', pages: { __typename: 'PageConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'PageEdge', node: { __typename: 'Page', slug: string } }> } };

export type ProductByIdQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductByIdQuery = { __typename: 'Query', product: { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } } | null, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }>, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null } | { __typename: 'ConcreteProduct', quantityAvailable?: number | null, id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null } };

export type ProductCollectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<ProductFilter>;
  sortBy?: InputMaybe<ProductOrderingInput>;
  channel: Scalars['String']['input'];
}>;


export type ProductCollectionQuery = { __typename: 'Query', products: { __typename: 'ProductConnection', totalCount: number, edges: Array<{ __typename: 'ProductEdge', cursor: string, node: { __typename: 'AbstractProduct', id: string, slug: string, name: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, category?: { __typename: 'Category', id: string, name: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', url: string, alt: string, type: MediaType }>, attributes: Array<{ __typename: 'Attribute', slug: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }> } | { __typename: 'ConcreteProduct', id: string, slug: string, name: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, category?: { __typename: 'Category', id: string, name: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', url: string, alt: string, type: MediaType }>, attributes: Array<{ __typename: 'Attribute', slug: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ProductPathsQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductPathsQuery = { __typename: 'Query', products: { __typename: 'ProductConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', slug: string } | { __typename: 'ConcreteProduct', slug: string } }> } };

export type UserQueryVariables = Exact<{ [key: string]: never; }>;


export type UserQuery = { __typename: 'Query', me: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, checkout?: { __typename: 'Checkout', id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, customerPhone?: string | null, voucherCode?: string | null, isShippingRequired: boolean, discountName: string, translatedDiscountName?: string | null, fulfillmentDeadline?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } } | { __typename: 'Warehouse', id: string, name: string } | null, availableShippingMethods?: Array<{ __typename: 'ShippingMethod', id: string, name: string, description?: string | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null } | null, price: { __typename: 'Money', currency: Currency, amount: number } }> | null, availablePaymentGateways: Array<{ __typename: 'PaymentGateway', id: string, name: string, config: Array<{ __typename: 'GatewayConfigLine', field: string, value: string }> }>, lines: Array<{ __typename: 'CheckoutLine', id: string, quantity: number, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'Money', currency: Currency, amount: number }, product: { __typename: 'ConcreteProduct', id: string, name: string, slug: string, translation?: { __typename: 'ProductTranslation', id: string, name: string } | null, thumbnail?: { __typename: 'Image', url: string, alt: string } | null, media: Array<{ __typename: 'ProductMediaItem', alt: string, type: MediaType, url: string }>, parent: { __typename: 'AbstractProduct', id: string, name: string }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', name: string } }> } }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } }>, discount: { __typename: 'Money', currency: Currency, amount: number }, giftCards: Array<{ __typename: 'GiftCard', displayCode: string, id: string, currentBalance: { __typename: 'Money', currency: Currency, amount: number } }>, subtotalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, channel: { __typename: 'Channel', id: string, slug: string }, user?: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } | null, pointsOfContact: Array<{ __typename: 'PointOfContact', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, notes?: string | null }>, validationErrors: Array<{ __typename: 'Error', field?: string | null, message: string }> } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } };

export type UserWithoutDetailsQueryVariables = Exact<{ [key: string]: never; }>;


export type UserWithoutDetailsQuery = { __typename: 'Query', me: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } };

export type CurrentUserAddressesQueryVariables = Exact<{ [key: string]: never; }>;


export type CurrentUserAddressesQuery = { __typename: 'Query', me: { __typename: 'User', id: string, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }> } };

export type DeleteProductsMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type DeleteProductsMutation = { __typename: 'Mutation', deleteProducts: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ProductCreateMutationVariables = Exact<{
  input: ProductCreationInput;
}>;


export type ProductCreateMutation = { __typename: 'Mutation', createProduct: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string } } };

export type SearchValuesQueryVariables = Exact<{
  id?: InputMaybe<Scalars['ID']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchValuesQuery = { __typename: 'Query', attribute: { __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } } };

export type SearchAttributesQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchAttributesQuery = { __typename: 'Query', search: { __typename: 'AttributeConnection', edges: Array<{ __typename: 'AttributeEdge', node: { __typename: 'Attribute', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ProductExportMutationVariables = Exact<{
  input: ExportProductsInput;
}>;


export type ProductExportMutation = { __typename: 'Mutation', exportProducts: { __typename: 'ExportFileMutationResult', result: { __typename: 'ExportFile', id: string, status: JobStatus, url: string }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UpdateValueTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ValueTranslationInput;
  language: LanguageCode;
}>;


export type UpdateValueTranslationsMutation = { __typename: 'Mutation', translateValue: { __typename: 'ValueMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Value', id: string, name: string, richText?: string | null, translation?: { __typename: 'ValueTranslation', id: string, name: string, richText: string } | null } } };

export type UpdateSaleTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: NameTranslationInput;
  language: LanguageCode;
}>;


export type UpdateSaleTranslationsMutation = { __typename: 'Mutation', translateSale: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Sale', id: string, name: string, translation?: { __typename: 'SaleTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null } | null } } };

export type UpdateShippingMethodTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ShippingPriceTranslationInput;
  language: LanguageCode;
}>;


export type UpdateShippingMethodTranslationsMutation = { __typename: 'Mutation', translateShippingPrice: { __typename: 'ShippingMethodMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ShippingMethod', id: string, name: string, description?: string | null, translation?: { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null, language?: { __typename: 'LanguageDisplay', language: string } | null } | null } } };

export type UpdateVoucherTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: NameTranslationInput;
  language: LanguageCode;
}>;


export type UpdateVoucherTranslationsMutation = { __typename: 'Mutation', translateVoucher: { __typename: 'VoucherMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Voucher', id: string, name: string, translation?: { __typename: 'VoucherTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null } | null } } };

export type HomeQueryVariables = Exact<{
  channel: Scalars['String']['input'];
  datePeriod: DateRangeInput;
  PERMISSION_MANAGE_PRODUCTS: Scalars['Boolean']['input'];
  PERMISSION_MANAGE_ORDERS: Scalars['Boolean']['input'];
}>;


export type HomeQuery = { __typename: 'Query', salesToday?: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, ordersToday?: { __typename: 'OrderConnection', totalCount: number }, ordersToConfirm?: { __typename: 'OrderConnection', totalCount: number }, ordersToFulfill?: { __typename: 'OrderConnection', totalCount: number }, ordersToCapture?: { __typename: 'OrderConnection', totalCount: number }, productsOutOfStock: { __typename: 'ProductConnection', totalCount: number }, productTopToday?: { __typename: 'ProductConnection', edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, quantityOrdered: number, thumbnail?: { __typename: 'Image', url: string } | null, revenue: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | { __typename: 'ConcreteProduct', id: string, name: string, quantityOrdered: number, thumbnail?: { __typename: 'Image', url: string } | null, revenue: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } }> }, activities?: { __typename: 'OrderEventConnection', edges: Array<{ __typename: 'OrderEventEdge', node: { __typename: 'OrderEvent', amount: number, date: string, email: string, emailType: OrderEventEmailType, id: string, message: string, orderNumber: string, oversoldItems: Array<string>, quantity: number, type: OrderEventType, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } } }> } };

export type ShopCountriesQueryVariables = Exact<{
  filter?: InputMaybe<CountryFilter>;
}>;


export type ShopCountriesQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }> } };

export type RefreshLimitsQueryVariables = Exact<{
  channels: Scalars['Boolean']['input'];
  orders: Scalars['Boolean']['input'];
  productVariants: Scalars['Boolean']['input'];
  staffUsers: Scalars['Boolean']['input'];
  warehouses: Scalars['Boolean']['input'];
}>;


export type RefreshLimitsQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, limits: { __typename: 'LimitInfo', currentUsage: { __typename: 'Limits', channels?: number | null, orders?: number | null, productVariants?: number | null, staffUsers?: number | null, warehouses?: number | null }, allowedUsage: { __typename: 'Limits', channels?: number | null, orders?: number | null, productVariants?: number | null, staffUsers?: number | null, warehouses?: number | null } } } };

export type CustomerGiftCardListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<GiftCardFilter>;
}>;


export type CustomerGiftCardListQuery = { __typename: 'Query', giftCards: { __typename: 'GiftCardConnection', edges: Array<{ __typename: 'GiftCardEdge', node: { __typename: 'GiftCard', id: string, last4CodeChars: string, expiryDate: string, isActive: boolean, currentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> } };

export type ActivityFragment = { __typename: 'OrderEvent', date: string, type: OrderEventType, message: string, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } };

type TopProduct_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, quantityOrdered: number, thumbnail?: { __typename: 'Image', url: string } | null, revenue: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> };

type TopProduct_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', id: string, name: string, quantityOrdered: number, thumbnail?: { __typename: 'Image', url: string } | null, revenue: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> };

export type TopProductFragment = TopProduct_AbstractProduct_Fragment | TopProduct_ConcreteProduct_Fragment;

export type CheckIfOrderExistsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type CheckIfOrderExistsQuery = { __typename: 'Query', order: { __typename: 'Order', id: string, status: OrderStatus } };

export type SearchCatalogQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchCatalogQuery = { __typename: 'Query', categories: { __typename: 'CategoryConnection', edges: Array<{ __typename: 'CategoryEdge', node: { __typename: 'Category', id: string, name: string } }> }, collections: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }> } }> }, products: { __typename: 'ProductConnection', edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, category?: { __typename: 'Category', id: string, name: string } | null } | { __typename: 'ConcreteProduct', id: string, name: string, category?: { __typename: 'Category', id: string, name: string } | null } }> } };

export type SearchCustomersQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchCustomersQuery = { __typename: 'Query', search: { __typename: 'UserConnection', edges: Array<{ __typename: 'UserEdge', node: { __typename: 'User', id: string, email: string, firstName: string, lastName: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type AttributeBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type AttributeBulkDeleteMutation = { __typename: 'Mutation', deleteAttributes: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type AttributeDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type AttributeDeleteMutation = { __typename: 'Mutation', deleteAttribute: { __typename: 'AttributeMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type AttributeUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: AttributeUpdateInput;
}>;


export type AttributeUpdateMutation = { __typename: 'Mutation', updateAttribute: { __typename: 'AttributeMutationResult', result: { __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ValueDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ValueDeleteMutation = { __typename: 'Mutation', deleteValue: { __typename: 'AttributeMutationResult', result: { __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ValueUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ValueUpdateInput;
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ValueUpdateMutation = { __typename: 'Mutation', updateValue: { __typename: 'AttributeMutationResult', result: { __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ValueCreateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ValueCreationInput;
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ValueCreateMutation = { __typename: 'Mutation', createValue: { __typename: 'AttributeMutationResult', result: { __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type AttributeCreateMutationVariables = Exact<{
  input: AttributeCreationInput;
}>;


export type AttributeCreateMutation = { __typename: 'Mutation', createAttribute: { __typename: 'AttributeMutationResult', result: { __typename: 'Attribute', id: string }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ValueReorderMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  move: ReorderInput;
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ValueReorderMutation = { __typename: 'Mutation', reorderValues: { __typename: 'AttributeMutationResult', result: { __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', id: string } }> } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type AttributeDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type AttributeDetailsQuery = { __typename: 'Query', attribute: { __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type AttributeListQueryVariables = Exact<{
  filter?: InputMaybe<AttributeFilter>;
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<AttributeOrderingInput>;
}>;


export type AttributeListQuery = { __typename: 'Query', attributes: { __typename: 'AttributeConnection', edges: Array<{ __typename: 'AttributeEdge', node: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type CategoryDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type CategoryDeleteMutation = { __typename: 'Mutation', deleteCategory: { __typename: 'CategoryMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CategoryCreateMutationVariables = Exact<{
  parentId?: InputMaybe<Scalars['ID']['input']>;
  input: CategoryInput;
}>;


export type CategoryCreateMutation = { __typename: 'Mutation', createCategory: { __typename: 'CategoryMutationResult', result: { __typename: 'Category', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, ancestors: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CategoryUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: CategoryInput;
}>;


export type CategoryUpdateMutation = { __typename: 'Mutation', updateCategory: { __typename: 'CategoryMutationResult', result: { __typename: 'Category', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, ancestors: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CategoryBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type CategoryBulkDeleteMutation = { __typename: 'Mutation', deleteCategories: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type RootCategoriesQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<CategoryFilter>;
  sort?: InputMaybe<CategoryOrderingInput>;
}>;


export type RootCategoriesQuery = { __typename: 'Query', categories: { __typename: 'CategoryConnection', edges: Array<{ __typename: 'CategoryEdge', node: { __typename: 'Category', id: string, name: string, children: { __typename: 'CategoryNodeConnection', totalCount: number }, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type CategoryDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type CategoryDetailsQuery = { __typename: 'Query', category: { __typename: 'Category', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, children: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, children: { __typename: 'CategoryNodeConnection', totalCount: number }, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, products: { __typename: 'ProductNodeConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ProductNodeEdge', cursor: string, node: { __typename: 'AbstractProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null } | { __typename: 'ConcreteProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null } }> }, translation?: { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, ancestors: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type ChannelCreateMutationVariables = Exact<{
  input: ChannelCreationInput;
}>;


export type ChannelCreateMutation = { __typename: 'Mutation', createChannel: { __typename: 'ChannelMutationResult', result: { __typename: 'Channel', hasOrders: boolean, id: string, name: string, slug: string, isActive: boolean, currencyCode: string, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } }, errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ChannelUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ChannelUpdateInput;
}>;


export type ChannelUpdateMutation = { __typename: 'Mutation', updateChannel: { __typename: 'ChannelMutationResult', result: { __typename: 'Channel', hasOrders: boolean, id: string, name: string, slug: string, isActive: boolean, currencyCode: string, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } }, errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ChannelDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input?: InputMaybe<ChannelDeleteInput>;
}>;


export type ChannelDeleteMutation = { __typename: 'Mutation', deleteChannel: { __typename: 'ChannelMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ChannelActivateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ChannelActivateMutation = { __typename: 'Mutation', activateChannel: { __typename: 'ChannelMutationResult', result: { __typename: 'Channel', hasOrders: boolean, id: string, name: string, slug: string, isActive: boolean, currencyCode: string, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } }, errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ChannelDeactivateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ChannelDeactivateMutation = { __typename: 'Mutation', deactivateChannel: { __typename: 'ChannelMutationResult', result: { __typename: 'Channel', hasOrders: boolean, id: string, name: string, slug: string, isActive: boolean, currencyCode: string, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } }, errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ChannelReorderWarehousesMutationVariables = Exact<{
  channelId: Scalars['ID']['input'];
  moves: Array<ReorderInput> | ReorderInput;
}>;


export type ChannelReorderWarehousesMutation = { __typename: 'Mutation', reorderChannelWarehouses: { __typename: 'ChannelReorderWarehousesMutationResult', channel: { __typename: 'Channel', hasOrders: boolean, id: string, name: string, slug: string, isActive: boolean, currencyCode: string, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } }, errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type BaseChannelsQueryVariables = Exact<{ [key: string]: never; }>;


export type BaseChannelsQuery = { __typename: 'Query', channels: Array<{ __typename: 'Channel', id: string, name: string, slug: string, isActive: boolean, currencyCode: string, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } }> };

export type CollectionUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: CollectionInput;
}>;


export type CollectionUpdateMutation = { __typename: 'Mutation', updateCollection: { __typename: 'CollectionMutationResult', result: { __typename: 'Collection', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, translation?: { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CollectionAssignProductMutationVariables = Exact<{
  collectionId: Scalars['ID']['input'];
  productIds: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionAssignProductMutation = { __typename: 'Mutation', addProductsToCollection: { __typename: 'CollectionMutationResult', result: { __typename: 'Collection', id: string, products: { __typename: 'ProductConnection', edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null } } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CreateCollectionMutationVariables = Exact<{
  input: CollectionCreationInput;
}>;


export type CreateCollectionMutation = { __typename: 'Mutation', createCollection: { __typename: 'CollectionMutationResult', result: { __typename: 'Collection', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, translation?: { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type RemoveCollectionMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type RemoveCollectionMutation = { __typename: 'Mutation', deleteCollection: { __typename: 'CollectionMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UnassignCollectionProductMutationVariables = Exact<{
  collectionId: Scalars['ID']['input'];
  productIds: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type UnassignCollectionProductMutation = { __typename: 'Mutation', removeProductsFromCollection: { __typename: 'CollectionMutationResult', result: { __typename: 'Collection', id: string, products: { __typename: 'ProductConnection', edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null } }>, pageInfo: { __typename: 'PageInfo', endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null } } }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CollectionBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type CollectionBulkDeleteMutation = { __typename: 'Mutation', deleteCollections: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type CollectionChannelListingUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: CollectionChannelListingUpdateInput;
}>;


export type CollectionChannelListingUpdateMutation = { __typename: 'Mutation', updateCollectionChannelListing: { __typename: 'CollectionChannelListingMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type CollectionListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<CollectionFilter>;
  sort?: InputMaybe<CollectionOrderingInput>;
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionListQuery = { __typename: 'Query', collections: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number }, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }> } }>, pageInfo: { __typename: 'PageInfo', endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null } } };

export type CollectionDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionDetailsQuery = { __typename: 'Query', collection: { __typename: 'Collection', id: string, seoTitle: string, seoDescription: string, description?: string | null, name: string, slug: string, products: { __typename: 'ProductConnection', edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null } }, translation?: { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string } | null, backgroundImage?: { __typename: 'Image', url: string, alt: string } | null, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type CheckExportFileStatusQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type CheckExportFileStatusQuery = { __typename: 'Query', exportFile?: { __typename: 'ExportFile', id: string, status: JobStatus } | null };

export type CheckOrderInvoicesStatusQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type CheckOrderInvoicesStatusQuery = { __typename: 'Query', order: { __typename: 'Order', id: string, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }> } };

export type UpdateCustomerMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: UserUpdateInput;
}>;


export type UpdateCustomerMutation = { __typename: 'Mutation', updateUser: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'User', dateJoined: string, lastLogin: string, note: string, isActive: boolean, id: string, email: string, firstName: string, lastName: string, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type CreateCustomerMutationVariables = Exact<{
  input: UserCreationInput;
}>;


export type CreateCustomerMutation = { __typename: 'Mutation', createUser: { __typename: 'UserCreationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, user: { __typename: 'User', id: string } } };

export type RemoveCustomerMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type RemoveCustomerMutation = { __typename: 'Mutation', deleteCustomer: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type SetCustomerDefaultAddressMutationVariables = Exact<{
  addressId: Scalars['ID']['input'];
  userId: Scalars['ID']['input'];
  type: AddressType;
}>;


export type SetCustomerDefaultAddressMutation = { __typename: 'Mutation', setDefaultAddress: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, defaultBillingAddress?: { __typename: 'Address', id: string } | null, defaultShippingAddress?: { __typename: 'Address', id: string } | null } } };

export type CreateCustomerAddressMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: AddressUpdateInput;
}>;


export type CreateCustomerAddressMutation = { __typename: 'Mutation', addAddress: { __typename: 'AddressMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, defaultBillingAddress?: { __typename: 'Address', id: string } | null, defaultShippingAddress?: { __typename: 'Address', id: string } | null } } };

export type UpdateCustomerAddressMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: AddressUpdateInput;
}>;


export type UpdateCustomerAddressMutation = { __typename: 'Mutation', updateAddress: { __typename: 'AddressMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } } };

export type RemoveCustomerAddressMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type RemoveCustomerAddressMutation = { __typename: 'Mutation', deleteAddress: { __typename: 'AddressMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, defaultBillingAddress?: { __typename: 'Address', id: string } | null, defaultShippingAddress?: { __typename: 'Address', id: string } | null } } };

export type BulkRemoveCustomersMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type BulkRemoveCustomersMutation = { __typename: 'Mutation', deleteCustomers: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ListCustomersQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<CustomerFilter>;
  sort?: InputMaybe<UserOrderingInput>;
  PERMISSION_MANAGE_ORDERS: Scalars['Boolean']['input'];
}>;


export type ListCustomersQuery = { __typename: 'Query', customers: { __typename: 'UserConnection', edges: Array<{ __typename: 'UserEdge', node: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, orders?: { __typename: 'OrderNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null } } };

export type CustomerDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  PERMISSION_MANAGE_ORDERS: Scalars['Boolean']['input'];
}>;


export type CustomerDetailsQuery = { __typename: 'Query', user: { __typename: 'User', dateJoined: string, lastLogin: string, note: string, isActive: boolean, id: string, email: string, firstName: string, lastName: string, orders?: { __typename: 'OrderNodeConnection', edges: Array<{ __typename: 'OrderNodeEdge', node: { __typename: 'Order', id: string, createdAt: string, number: string, paymentStatus: ChargeStatus, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } }> }, lastPlacedOrder?: { __typename: 'OrderNodeConnection', edges: Array<{ __typename: 'OrderNodeEdge', node: { __typename: 'Order', id: string, createdAt: string } }> }, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type CustomerAddressesQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type CustomerAddressesQuery = { __typename: 'Query', user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, defaultBillingAddress?: { __typename: 'Address', id: string } | null, defaultShippingAddress?: { __typename: 'Address', id: string } | null } };

export type CustomerCreateDataQueryVariables = Exact<{ [key: string]: never; }>;


export type CustomerCreateDataQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }> } };

export type SaleUpdateMutationVariables = Exact<{
  input: SaleInput;
  id: Scalars['ID']['input'];
  channelInput: SaleChannelListingInput;
}>;


export type SaleUpdateMutation = { __typename: 'Mutation', updateSale: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null }, updateSaleChannelListing: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type SaleCataloguesAddMutationVariables = Exact<{
  input: CatalogueInput;
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  includeVariants: Scalars['Boolean']['input'];
  includeProducts: Scalars['Boolean']['input'];
  includeCollections: Scalars['Boolean']['input'];
  includeCategories: Scalars['Boolean']['input'];
}>;


export type SaleCataloguesAddMutation = { __typename: 'Mutation', addCataloguesToSale: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type SaleCataloguesRemoveMutationVariables = Exact<{
  input: CatalogueInput;
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  includeVariants: Scalars['Boolean']['input'];
  includeProducts: Scalars['Boolean']['input'];
  includeCollections: Scalars['Boolean']['input'];
  includeCategories: Scalars['Boolean']['input'];
}>;


export type SaleCataloguesRemoveMutation = { __typename: 'Mutation', removeCataloguesFromSale: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type SaleCreateMutationVariables = Exact<{
  input: SaleInput;
}>;


export type SaleCreateMutation = { __typename: 'Mutation', createSale: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type SaleDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type SaleDeleteMutation = { __typename: 'Mutation', deleteSale: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type SaleBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type SaleBulkDeleteMutation = { __typename: 'Mutation', deleteSales: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type SaleChannelListingUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: SaleChannelListingInput;
}>;


export type SaleChannelListingUpdateMutation = { __typename: 'Mutation', updateSaleChannelListing: { __typename: 'SaleMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type VoucherChannelListingUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: VoucherChannelListingInput;
}>;


export type VoucherChannelListingUpdateMutation = { __typename: 'Mutation', updateVoucherChannelListing: { __typename: 'VoucherMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Voucher', id: string, code: string, startDate: string, endDate: string, usageLimit: number, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type VoucherUpdateMutationVariables = Exact<{
  input: VoucherInput;
  id: Scalars['ID']['input'];
}>;


export type VoucherUpdateMutation = { __typename: 'Mutation', updateVoucher: { __typename: 'VoucherMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Voucher', id: string, code: string, startDate: string, endDate: string, usageLimit: number, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type VoucherCataloguesAddMutationVariables = Exact<{
  input: CatalogueInput;
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  includeProducts: Scalars['Boolean']['input'];
  includeCollections: Scalars['Boolean']['input'];
  includeCategories: Scalars['Boolean']['input'];
}>;


export type VoucherCataloguesAddMutation = { __typename: 'Mutation', addCataloguesToVoucher: { __typename: 'VoucherMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Voucher', code: string, usageLimit: number, used: number, applyOncePerOrder: boolean, applyOncePerCustomer: boolean, onlyForStaff: boolean, id: string, startDate: string, endDate: string, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type VoucherCataloguesRemoveMutationVariables = Exact<{
  input: CatalogueInput;
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  includeProducts: Scalars['Boolean']['input'];
  includeCollections: Scalars['Boolean']['input'];
  includeCategories: Scalars['Boolean']['input'];
}>;


export type VoucherCataloguesRemoveMutation = { __typename: 'Mutation', removeCataloguesFromVoucher: { __typename: 'VoucherMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Voucher', code: string, usageLimit: number, used: number, applyOncePerOrder: boolean, applyOncePerCustomer: boolean, onlyForStaff: boolean, id: string, startDate: string, endDate: string, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type VoucherCreateMutationVariables = Exact<{
  input: VoucherInput;
}>;


export type VoucherCreateMutation = { __typename: 'Mutation', createVoucher: { __typename: 'VoucherMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Voucher', id: string, code: string, startDate: string, endDate: string, usageLimit: number, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type VoucherDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type VoucherDeleteMutation = { __typename: 'Mutation', deleteVoucher: { __typename: 'VoucherMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type VoucherBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type VoucherBulkDeleteMutation = { __typename: 'Mutation', deleteVouchers: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type SaleListQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<SaleFilter>;
  sort?: InputMaybe<SaleOrderingInput>;
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type SaleListQuery = { __typename: 'Query', sales: { __typename: 'SaleConnection', edges: Array<{ __typename: 'SaleEdge', node: { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type VoucherListQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<VoucherFilter>;
  sort?: InputMaybe<VoucherOrderingInput>;
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type VoucherListQuery = { __typename: 'Query', vouchers: { __typename: 'VoucherConnection', edges: Array<{ __typename: 'VoucherEdge', node: { __typename: 'Voucher', id: string, code: string, startDate: string, endDate: string, usageLimit: number, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SaleDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  includeVariants: Scalars['Boolean']['input'];
  includeProducts: Scalars['Boolean']['input'];
  includeCollections: Scalars['Boolean']['input'];
  includeCategories: Scalars['Boolean']['input'];
}>;


export type SaleDetailsQuery = { __typename: 'Query', sale: { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type VoucherDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  includeProducts: Scalars['Boolean']['input'];
  includeCollections: Scalars['Boolean']['input'];
  includeCategories: Scalars['Boolean']['input'];
}>;


export type VoucherDetailsQuery = { __typename: 'Query', voucher: { __typename: 'Voucher', code: string, usageLimit: number, used: number, applyOncePerOrder: boolean, applyOncePerCustomer: boolean, onlyForStaff: boolean, id: string, startDate: string, endDate: string, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type AppFragment = { __typename: 'App', id: string, name: string, createdAt: string, isActive: boolean, type: AppType, homepageUrl: string, appUrl: string, manifestUrl: string, configurationUrl: string, supportUrl: string, version: string, accessToken: string, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, tokens: Array<{ __typename: 'AppToken', authToken: string, id: string, name: string }>, webhooks: Array<{ __typename: 'Webhook', id: string, name: string, isActive: boolean, app: { __typename: 'App', id: string, name: string } }> };

export type AppListItemFragment = { __typename: 'App', id: string, name: string, isActive: boolean, type: AppType, appUrl: string, manifestUrl: string, permissions: Array<{ __typename: 'Permission', name: string, code: PermissionCode }> };

export type AppPermissionFragment = { __typename: 'Permission', name: string, code: PermissionCode };

export type ValueFragment = { __typename: 'Value', id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null };

export type ValueDetailsFragment = { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null };

export type ValueListFragment = { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> };

export type AvailableAttributeFragment = { __typename: 'Attribute', id: string, name: string, slug: string };

export type UserFragment = { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null };

export type CategoryFragment = { __typename: 'Category', id: string, name: string, children: { __typename: 'CategoryNodeConnection', totalCount: number }, products: { __typename: 'ProductNodeConnection', totalCount: number } };

export type ChannelErrorFragment = { __typename: 'ChannelError', code?: string | null, field?: string | null, message: string };

export type ChannelDetailsFragment = { __typename: 'Channel', hasOrders: boolean, id: string, name: string, slug: string, isActive: boolean, currencyCode: string, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode }>, defaultCountry: { __typename: 'Country', code: CountryCode, name: string }, stockSettings: { __typename: 'StockSettings', allocationStrategy: AllocationStrategy } };

export type CollectionFragment = { __typename: 'Collection', id: string, name: string, channelListings: Array<{ __typename: 'CollectionChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string } }> };

type CollectionProduct_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

type CollectionProduct_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

export type CollectionProductFragment = CollectionProduct_AbstractProduct_Fragment | CollectionProduct_ConcreteProduct_Fragment;

export type CustomerFragment = { __typename: 'User', id: string, email: string, firstName: string, lastName: string };

export type CustomerDetailsFragment = { __typename: 'User', dateJoined: string, lastLogin: string, note: string, isActive: boolean, id: string, email: string, firstName: string, lastName: string, defaultShippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, defaultBillingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type CustomerAddressesFragment = { __typename: 'User', id: string, email: string, firstName: string, lastName: string, addresses: Array<{ __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }>, defaultBillingAddress?: { __typename: 'Address', id: string } | null, defaultShippingAddress?: { __typename: 'Address', id: string } | null };

export type SaleFragment = { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type SaleDetailsFragment = { __typename: 'Sale', id: string, name: string, type: SaleType, startDate: string, endDate: string, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, channelListings: Array<{ __typename: 'SaleChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type VoucherFragment = { __typename: 'Voucher', id: string, code: string, startDate: string, endDate: string, usageLimit: number, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type VoucherDetailsFragment = { __typename: 'Voucher', code: string, usageLimit: number, used: number, applyOncePerOrder: boolean, applyOncePerCustomer: boolean, onlyForStaff: boolean, id: string, startDate: string, endDate: string, type: VoucherType, discountValueType: DiscountValueType, minCheckoutItemsQuantity: number, productsCount: { __typename: 'ProductNodeConnection', totalCount: number }, collectionsCount: { __typename: 'CollectionConnection', totalCount: number }, categoriesCount: { __typename: 'CategoryNodeConnection', totalCount: number }, products?: { __typename: 'ProductNodeConnection', edges: Array<{ __typename: 'ProductNodeEdge', node: { __typename: 'AbstractProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, name: string, productKlass: { __typename: 'ProductKlass', id: string, name: string }, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, collections?: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string, products: { __typename: 'ProductConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, categories?: { __typename: 'CategoryNodeConnection', edges: Array<{ __typename: 'CategoryNodeEdge', node: { __typename: 'Category', id: string, name: string, products: { __typename: 'ProductNodeConnection', totalCount: number } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } }, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, channelListings: Array<{ __typename: 'VoucherChannelListing', id: string, discountValue: number, currency: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, minSpent: { __typename: 'Money', amount: number, currency: Currency } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type ProductErrorWithAttributesFragment = { __typename: 'ProductError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type ProductChannelListingErrorFragment = { __typename: 'ProductChannelListingError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type CollectionChannelListingErrorFragment = { __typename: 'CollectionChannelListingError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type AccountErrorFragment = { __typename: 'AccountError', addressType?: AddressType | null, message: string, field?: string | null, code?: string | null };

export type DiscountErrorFragment = { __typename: 'DiscountError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type OrderErrorFragment = { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type PageErrorWithAttributesFragment = { __typename: 'PageError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type BulkProductErrorFragment = { __typename: 'BulkProductError', index: number, channels?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type BulkStockErrorFragment = { __typename: 'BulkStockError', index: number, message: string, field?: string | null, code?: string | null };

export type ShippingChannelsErrorFragment = { __typename: 'ShippingError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type AppErrorFragment = { __typename: 'AppError', permissions?: Array<PermissionCode> | null, message: string, field?: string | null, code?: string | null };

export type ProductAttributeAssignmentUpdateErrorFragment = { __typename: 'ProductError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null };

export type GiftCardsSettingsFragment = { __typename: 'GiftCardSettings', expiryType: GiftCardSettingsExpiryType, expiryPeriod?: { __typename: 'TimePeriod', type: TimePeriodType, amount: number } | null };

export type GiftCardEventFragment = { __typename: 'GiftCardEvent', expiryDate: string, oldExpiryDate: string, id: string, date: string, type: GiftCardEventType, message: string, email: string, orderId: string, orderNumber: string, tags: Array<string>, oldTags: Array<string>, user: { __typename: 'User', email: string, id: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } };

export type GiftCardDataFragment = { __typename: 'GiftCard', last4CodeChars: string, boughtInChannel?: string | null, usedByEmail?: string | null, createdByEmail?: string | null, createdAt: string, expiryDate: string, lastUsedOn: string, isActive: boolean, id: string, createdBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type CustomerGiftCardFragment = { __typename: 'GiftCard', id: string, last4CodeChars: string, expiryDate: string, isActive: boolean, currentBalance: { __typename: 'Money', currency: Currency, amount: number } };

export type GroupFragment = { __typename: 'Group', id: string, name: string, userCanManage: boolean, users: Array<{ __typename: 'User', id: string, firstName: string, lastName: string }> };

export type PermissionFragment = { __typename: 'Permission', code: PermissionCode, name: string };

export type GroupMemberFragment = { __typename: 'User', id: string, email: string, firstName: string, isActive: boolean, lastName: string, avatar?: { __typename: 'Image', url: string } | null };

export type GroupDetailsFragment = { __typename: 'Group', id: string, name: string, userCanManage: boolean, permissions: Array<{ __typename: 'Permission', code: PermissionCode, name: string }>, users: Array<{ __typename: 'User', id: string, firstName: string, lastName: string, email: string, isActive: boolean, avatar?: { __typename: 'Image', url: string } | null }> };

export type MediaItemFragment = { __typename: 'MediaItem', id: string, title: string, alt: string, placeholder?: string | null, isPublished: boolean, type: MediaType, file: { __typename: 'File', url: string } };

export type MediaItemDetailsFragment = { __typename: 'MediaItem', description?: string | null, publishedAt: string, id: string, title: string, alt: string, placeholder?: string | null, isPublished: boolean, type: MediaType, file: { __typename: 'File', url: string, contentType: string }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type MenuFragment = { __typename: 'Menu', id: string, name: string, items: Array<{ __typename: 'MenuItem', id: string }> };

export type MenuItemNestedFragment = { __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null };

export type MenuDetailsFragment = { __typename: 'Menu', id: string, name: string, items: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> };

export type OrderEventFragment = { __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> };

export type OrderLine_Fragment = { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, productSku: string, quantity: number, quantityFulfilled: number, quantityToFulfill: number, unitDiscountValue: string | number, unitDiscountReason: string, unitDiscountType: DiscountValueType, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, quantityAvailable?: number | null, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, parent: { __typename: 'AbstractProduct', id: string, isAvailableForPurchase: boolean } } | null, unitDiscount: { __typename: 'Money', amount: number, currency: Currency }, undiscountedUnitPrice: { __typename: 'TaxedMoney', currency: string, gross: { __typename: 'Money', amount: number, currency: Currency }, net: { __typename: 'Money', amount: number, currency: Currency } }, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency }, net: { __typename: 'Money', amount: number, currency: Currency } }, thumbnail?: { __typename: 'Image', url: string } | null };

export type RefundOrderLineFragment = { __typename: 'OrderLine', id: string, productName: string, quantity: number, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string } | null };

export type FulfillmentFragment = { __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null };

export type InvoiceFragment = { __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus };

export type OrderDetailsFragment = { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type OrderSettingsFragment = { __typename: 'OrderSettings', autoConfirmAllNewOrders: boolean, autoFulfillNonShippableGiftCard: boolean };

export type ShopOrderSettingsFragment = { __typename: 'Site', autoApproveFulfillment: boolean, fulfillmentAllowUnpaid: boolean };

export type OrderFulfillmentLineFragment = { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, thumbnail?: { __typename: 'Image', url: string } | null };

export type OrderLineStockDataFragment = { __typename: 'OrderLine', id: string, quantity: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', quantity: number, warehouse: { __typename: 'Warehouse', id: string } }>, product?: { __typename: 'ConcreteProduct', stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null };

export type PageKlassFragment = { __typename: 'PageKlass', id: string, name: string, hasPages: boolean };

export type PageKlassDetailsFragment = { __typename: 'PageKlass', id: string, name: string, hasPages: boolean, attributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type PageFragment = { __typename: 'Page', id: string, title: string, slug: string, isPublished: boolean, content: string };

export type PageSelectedAttributeFragment = { __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } };

export type PageAttributesFragment = { __typename: 'Page', attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, pageKlass: { __typename: 'PageKlass', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> } };

export type PageDetailsFragment = { __typename: 'Page', content: string, seoTitle: string, seoDescription: string, publishedAt: string, id: string, title: string, slug: string, isPublished: boolean, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, pageKlass: { __typename: 'PageKlass', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type ConfigurationItemFragment = { __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null };

export type PluginConfigurationBaseFragment = { __typename: 'PluginConfiguration', active: boolean, channel: { __typename: 'Channel', id: string, name: string, slug: string } };

export type PluginConfigurationExtendedFragment = { __typename: 'PluginConfiguration', active: boolean, configuration: Array<{ __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null }>, channel: { __typename: 'Channel', id: string, name: string, slug: string } };

export type PluginBaseFragment = { __typename: 'Plugin', id: string, name: string, description: string, channelConfigurations: Array<{ __typename: 'PluginConfiguration', active: boolean, channel: { __typename: 'Channel', id: string, name: string, slug: string } }>, globalConfiguration: { __typename: 'PluginConfiguration', active: boolean, channel: { __typename: 'Channel', id: string, name: string, slug: string } } };

export type PluginsDetailsFragment = { __typename: 'Plugin', id: string, name: string, description: string, globalConfiguration: { __typename: 'PluginConfiguration', active: boolean, configuration: Array<{ __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null }>, channel: { __typename: 'Channel', id: string, name: string, slug: string } }, channelConfigurations: Array<{ __typename: 'PluginConfiguration', active: boolean, configuration: Array<{ __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null }>, channel: { __typename: 'Channel', id: string, name: string, slug: string } }> };

export type ProductKlassFragment = { __typename: 'ProductKlass', id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null };

export type ProductKlassDetailsFragment = { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type PreorderFragment = { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null };

export type PriceRangeFragment = { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } };

export type ChannelListingProductWithoutPricingFragment = { __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } };

export type ChannelListingProductFragment = { __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } };

type ProductWithChannelListings_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean }, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

type ProductWithChannelListings_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean }, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

export type ProductWithChannelListingsFragment = ProductWithChannelListings_AbstractProduct_Fragment | ProductWithChannelListings_ConcreteProduct_Fragment;

type ProductAttributes_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, productKlass: { __typename: 'ProductKlass', id: string, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

type ProductAttributes_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', id: string, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, productKlass: { __typename: 'ProductKlass', id: string, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

export type ProductAttributesFragment = ProductAttributes_AbstractProduct_Fragment | ProductAttributes_ConcreteProduct_Fragment;

type ProductDetailsVariant_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

type ProductDetailsVariant_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> };

export type ProductDetailsVariantFragment = ProductDetailsVariant_AbstractProduct_Fragment | ProductDetailsVariant_ConcreteProduct_Fragment;

type Product_AbstractProduct_Fragment = { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

type Product_ConcreteProduct_Fragment = { __typename: 'ConcreteProduct', trackInventory: boolean, sku: string, quantityLimitPerCustomer: number, id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type ProductFragment = Product_AbstractProduct_Fragment | Product_ConcreteProduct_Fragment;

export type ProductAttributeFragment = { __typename: 'Attribute', id: string, name: string, slug: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } };

export type ExportFileFragment = { __typename: 'ExportFile', id: string, status: JobStatus, url: string };

export type ProductListAttributeFragment = { __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } };

export type ShippingZoneFragment = { __typename: 'ShippingZone', id: string, name: string, description: string, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type ShippingMethodWithPostalCodesFragment = { __typename: 'ShippingMethod', id: string, postalCodeRules: Array<{ __typename: 'ShippingMethodPostalCodeRule', id: string, inclusionType: PostalCodeRuleInclusionType, start: string, end: string }> };

export type ShippingMethod_Fragment = { __typename: 'ShippingMethod', minimumOrderWeight: string | number, maximumOrderWeight?: string | number | null, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, name: string, description?: string | null, id: string, taxClass?: { __typename: 'TaxClass', name: string, id: string } | null, channelListings: Array<{ __typename: 'ShippingMethodChannelListing', id: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, price: { __typename: 'Money', currency: Currency, amount: number }, minimumOrderPrice: { __typename: 'Money', currency: Currency, amount: number }, maximumOrderPrice: { __typename: 'Money', currency: Currency, amount: number } }>, postalCodeRules: Array<{ __typename: 'ShippingMethodPostalCodeRule', id: string, inclusionType: PostalCodeRuleInclusionType, start: string, end: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type ShippingMethodWithExcludedProductsFragment = { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, excludedProducts: { __typename: 'ProductConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, endCursor?: string | null, startCursor?: string | null }, edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null } | { __typename: 'ConcreteProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null } }> }, price: { __typename: 'Money', currency: Currency, amount: number } };

export type ShippingZoneDetailsFragment = { __typename: 'ShippingZone', id: string, name: string, description: string, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } }>, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type CountryWithCodeFragment = { __typename: 'Country', name: string, code: CountryCode };

export type LanguageFragment = { __typename: 'LanguageDisplay', code: LanguageCode, language: string };

export type LimitInfoFragment = { __typename: 'Limits', channels?: number | null, orders?: number | null, productVariants?: number | null, staffUsers?: number | null, warehouses?: number | null };

export type ShopLimitFragment = { __typename: 'Site', limits: { __typename: 'LimitInfo', currentUsage: { __typename: 'Limits', channels?: number | null, orders?: number | null, productVariants?: number | null, staffUsers?: number | null, warehouses?: number | null }, allowedUsage: { __typename: 'Limits', channels?: number | null, orders?: number | null, productVariants?: number | null, staffUsers?: number | null, warehouses?: number | null } } };

export type ShopFragment = { __typename: 'Site', customerSetPasswordUrl?: string | null, defaultMailSenderAddress: string, defaultMailSenderName: string, description: string, domain: string, name: string, reserveStockDurationAnonymousUser?: number | null, reserveStockDurationAuthenticatedUser?: number | null, maxItemCountPerCheckout?: number | null, companyAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }> };

export type StaffMemberFragment = { __typename: 'User', id: string, email: string, firstName: string, isActive: boolean, lastName: string };

export type StaffMemberDetailsFragment = { __typename: 'User', id: string, email: string, firstName: string, isActive: boolean, lastName: string, groups: Array<{ __typename: 'Group', id: string, name: string, userCanManage: boolean }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null };

export type TaxedMoneyFragment = { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } };

export type CountryFragment = { __typename: 'Country', name: string, code: CountryCode };

export type TaxConfigurationPerCountryFragment = { __typename: 'TaxConfigurationPerCountry', chargeTaxes: boolean, taxCalculationStrategy?: TaxCalculationStrategy | null, displayGrossPrices: boolean, country: { __typename: 'Country', name: string, code: CountryCode } };

export type TaxConfigurationFragment = { __typename: 'TaxConfiguration', id: string, displayGrossPrices: boolean, pricesEnteredWithTax: boolean, chargeTaxes: boolean, taxCalculationStrategy?: TaxCalculationStrategy | null, channel: { __typename: 'Channel', id: string, name: string }, countries: Array<{ __typename: 'TaxConfigurationPerCountry', chargeTaxes: boolean, taxCalculationStrategy?: TaxCalculationStrategy | null, displayGrossPrices: boolean, country: { __typename: 'Country', name: string, code: CountryCode } }> };

export type TaxCountryConfigurationFragment = { __typename: 'TaxCountryConfiguration', country: { __typename: 'Country', name: string, code: CountryCode }, taxClassCountryRates: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null }> };

export type TaxRateFragment = { __typename: 'TaxClassCountryRate', rate: string | number, country: { __typename: 'Country', name: string, code: CountryCode } };

export type TaxClassBaseFragment = { __typename: 'TaxClass', id: string, name: string };

export type TaxClassFragment = { __typename: 'TaxClass', id: string, name: string, countries: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, country: { __typename: 'Country', name: string, code: CountryCode } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> };

export type TimePeriodFragment = { __typename: 'TimePeriod', amount: number, type: TimePeriodType };

export type ValueTranslatableFragment = { __typename: 'ValueTranslation', id: string, name: string, plainText: string, richText: string, value: { __typename: 'Value', id: string, name: string }, attribute: { __typename: 'Attribute', id: string, name: string } };

export type CategoryTranslationFragment = { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, language?: { __typename: 'LanguageDisplay', language: string } | null, category: { __typename: 'Category', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string } };

export type CollectionTranslationFragment = { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, collection: { __typename: 'Collection', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string }, language?: { __typename: 'LanguageDisplay', language: string } | null };

export type ProductTranslationFragment = { __typename: 'ProductTranslation', id: string, seoTitle: string, seoDescription: string, name: string, description?: string | null, product: { __typename: 'AbstractProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string } | { __typename: 'ConcreteProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string }, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null };

export type ProductVariantTranslationFragment = { __typename: 'ProductTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string } };

export type SaleTranslationFragment = { __typename: 'SaleTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, sale: { __typename: 'Sale', id: string, name: string } };

export type VoucherTranslationFragment = { __typename: 'VoucherTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, voucher: { __typename: 'Voucher', id: string, name: string } };

export type ShippingMethodTranslationFragment = { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, shippingMethod: { __typename: 'ShippingMethod', id: string } };

export type PageTranslationFragment = { __typename: 'PageTranslation', id: string, content: string, seoDescription: string, seoTitle: string, title: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, page: { __typename: 'Page', id: string, content: string, seoDescription: string, seoTitle: string, title: string } };

export type PageTranslatableFragment = { __typename: 'PageTranslation', id: string, content: string, seoDescription: string, seoTitle: string, title: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null };

export type AttributeChoicesTranslationFragment = { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', id: string, name: string, plainText?: string | null, richText?: string | null, inputType: AttributeInputType, translation?: { __typename: 'ValueTranslation', id: string, name: string, plainText: string, richText: string } | null } }> };

export type AttributeTranslationFragment = { __typename: 'AttributeTranslation', id: string, name: string, attribute: { __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType } };

export type AttributeTranslationDetailsFragment = { __typename: 'AttributeTranslation', id: string, name: string, attribute: { __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, withChoices: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', id: string, name: string, plainText?: string | null, richText?: string | null, inputType: AttributeInputType, translation?: { __typename: 'ValueTranslation', id: string, name: string, plainText: string, richText: string } | null } }> } } };

export type MenuItemTranslationFragment = { __typename: 'MenuItemTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', language: string } | null, menuItem: { __typename: 'MenuItem', id: string, name: string } };

export type WarehouseWithShippingFragment = { __typename: 'Warehouse', id: string, name: string, shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string } }> } };

export type WarehouseDetailsFragment = { __typename: 'Warehouse', isPrivate: boolean, clickAndCollectOption: WarehouseClickAndCollectOption, id: string, name: string, address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string } }> } };

export type WebhookFragment = { __typename: 'Webhook', id: string, name: string, isActive: boolean, app: { __typename: 'App', id: string, name: string } };

export type WebhookDetailsFragment = { __typename: 'Webhook', secretKey: string, targetUrl: string, id: string, name: string, isActive: boolean, syncEvents: Array<{ __typename: 'SyncWebhookEvent', eventType: WebhookEventTypeSync }>, asyncEvents: Array<{ __typename: 'AsyncWebhookEvent', eventType: AsyncWebhookEventType }>, app: { __typename: 'App', id: string, name: string } };

export type GiftCardBulkCreateMutationVariables = Exact<{
  input: GiftCardBulkCreationInput;
}>;


export type GiftCardBulkCreateMutation = { __typename: 'Mutation', createGiftCards: { __typename: 'GiftCardBulkMutationResult', objects: Array<{ __typename: 'GiftCard', id: string }>, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type GiftCardCreateMutationVariables = Exact<{
  input: GiftCardCreationInput;
}>;


export type GiftCardCreateMutation = { __typename: 'Mutation', createGiftCard: { __typename: 'GiftCardMutationResult', result: { __typename: 'GiftCard', code: string }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ChannelCurrenciesQueryVariables = Exact<{ [key: string]: never; }>;


export type ChannelCurrenciesQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, channelCurrencies: Array<string> } };

export type ExportGiftCardsMutationVariables = Exact<{
  input: ExportGiftCardsInput;
}>;


export type ExportGiftCardsMutation = { __typename: 'Mutation', exportGiftCards: { __typename: 'ExportFileMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ExportFile', id: string } } };

export type GiftCardSettingsUpdateMutationVariables = Exact<{
  input: GiftCardSettingsUpdateInput;
}>;


export type GiftCardSettingsUpdateMutation = { __typename: 'Mutation', updateGiftCardSettings: { __typename: 'GiftCardSettingsMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'GiftCardSettings', expiryType: GiftCardSettingsExpiryType, expiryPeriod?: { __typename: 'TimePeriod', type: TimePeriodType, amount: number } | null } } };

export type GiftCardSettingsQueryVariables = Exact<{ [key: string]: never; }>;


export type GiftCardSettingsQuery = { __typename: 'Query', giftCardSettings: { __typename: 'GiftCardSettings', expiryType: GiftCardSettingsExpiryType, expiryPeriod?: { __typename: 'TimePeriod', type: TimePeriodType, amount: number } | null } };

export type GiftCardResendMutationVariables = Exact<{
  input: GiftCardResendInput;
}>;


export type GiftCardResendMutation = { __typename: 'Mutation', resendGiftCard: { __typename: 'GiftCardMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'GiftCard', last4CodeChars: string, boughtInChannel?: string | null, usedByEmail?: string | null, createdByEmail?: string | null, createdAt: string, expiryDate: string, lastUsedOn: string, isActive: boolean, id: string, createdBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type GiftCardActivateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GiftCardActivateMutation = { __typename: 'Mutation', activateGiftCard: { __typename: 'GiftCardMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'GiftCard', last4CodeChars: string, boughtInChannel?: string | null, usedByEmail?: string | null, createdByEmail?: string | null, createdAt: string, expiryDate: string, lastUsedOn: string, isActive: boolean, id: string, createdBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type GiftCardDeactivateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GiftCardDeactivateMutation = { __typename: 'Mutation', deactivateGiftCard: { __typename: 'GiftCardMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'GiftCard', last4CodeChars: string, boughtInChannel?: string | null, usedByEmail?: string | null, createdByEmail?: string | null, createdAt: string, expiryDate: string, lastUsedOn: string, isActive: boolean, id: string, createdBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type GiftCardUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: GiftCardUpdateInput;
}>;


export type GiftCardUpdateMutation = { __typename: 'Mutation', updateGiftCard: { __typename: 'GiftCardMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'GiftCard', last4CodeChars: string, boughtInChannel?: string | null, usedByEmail?: string | null, createdByEmail?: string | null, createdAt: string, expiryDate: string, lastUsedOn: string, isActive: boolean, id: string, events: Array<{ __typename: 'GiftCardEvent', expiryDate: string, oldExpiryDate: string, id: string, date: string, type: GiftCardEventType, message: string, email: string, orderId: string, orderNumber: string, tags: Array<string>, oldTags: Array<string>, user: { __typename: 'User', email: string, id: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }>, createdBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type GiftCardAddNoteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: GiftCardAddNoteInput;
}>;


export type GiftCardAddNoteMutation = { __typename: 'Mutation', addNoteToGiftCard: { __typename: 'Giftcardmutationresult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, giftCard: { __typename: 'GiftCard', last4CodeChars: string, boughtInChannel?: string | null, usedByEmail?: string | null, createdByEmail?: string | null, createdAt: string, expiryDate: string, lastUsedOn: string, isActive: boolean, id: string, createdBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, event: { __typename: 'GiftCardEvent', expiryDate: string, oldExpiryDate: string, id: string, date: string, type: GiftCardEventType, message: string, email: string, orderId: string, orderNumber: string, tags: Array<string>, oldTags: Array<string>, user: { __typename: 'User', email: string, id: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } } } };

export type GiftCardDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GiftCardDetailsQuery = { __typename: 'Query', giftCard: { __typename: 'GiftCard', last4CodeChars: string, boughtInChannel?: string | null, usedByEmail?: string | null, createdByEmail?: string | null, createdAt: string, expiryDate: string, lastUsedOn: string, isActive: boolean, id: string, events: Array<{ __typename: 'GiftCardEvent', expiryDate: string, oldExpiryDate: string, id: string, date: string, type: GiftCardEventType, message: string, email: string, orderId: string, orderNumber: string, tags: Array<string>, oldTags: Array<string>, user: { __typename: 'User', email: string, id: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }>, createdBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, app: { __typename: 'App', id: string, name: string }, initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type GiftCardCurrenciesQueryVariables = Exact<{ [key: string]: never; }>;


export type GiftCardCurrenciesQuery = { __typename: 'Query', giftCardCurrencies: Array<string> };

export type GiftCardBulkActivateMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type GiftCardBulkActivateMutation = { __typename: 'Mutation', activateGiftCards: { __typename: 'GiftCardBulkMutationResult', count: number, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type GiftCardBulkDeactivateMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type GiftCardBulkDeactivateMutation = { __typename: 'Mutation', deactivateGiftCards: { __typename: 'GiftCardBulkMutationResult', count: number, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type DeleteGiftCardMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DeleteGiftCardMutation = { __typename: 'Mutation', deleteGiftCard: { __typename: 'GiftCardMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type BulkDeleteGiftCardMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type BulkDeleteGiftCardMutation = { __typename: 'Mutation', deleteGiftCards: { __typename: 'GiftCardBulkMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type GiftCardListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<GiftCardFilter>;
  sort?: InputMaybe<GiftCardOrderingInput>;
}>;


export type GiftCardListQuery = { __typename: 'Query', giftCards: { __typename: 'GiftCardConnection', totalCount: number, edges: Array<{ __typename: 'GiftCardEdge', node: { __typename: 'GiftCard', id: string, usedByEmail?: string | null, last4CodeChars: string, isActive: boolean, expiryDate: string, product: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, tags: Array<{ __typename: 'GiftCardTag', name: string }>, usedBy: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isStaff: boolean, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null }, currentBalance: { __typename: 'Money', currency: Currency, amount: number } } }>, pageInfo: { __typename: 'PageInfo', endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null } } };

export type GiftCardTotalCountQueryVariables = Exact<{ [key: string]: never; }>;


export type GiftCardTotalCountQuery = { __typename: 'Query', giftCards: { __typename: 'GiftCardConnection', totalCount: number } };

export type GiftCardProductsCountQueryVariables = Exact<{ [key: string]: never; }>;


export type GiftCardProductsCountQuery = { __typename: 'Query', giftCardProductKlasses: { __typename: 'ProductKlassConnection', totalCount: number }, giftCardProducts: { __typename: 'ProductConnection', totalCount: number } };

export type GroupDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GroupDeleteMutation = { __typename: 'Mutation', deleteGroup: { __typename: 'GroupMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type GroupCreateMutationVariables = Exact<{
  input: GroupCreationInput;
}>;


export type GroupCreateMutation = { __typename: 'Mutation', createGroup: { __typename: 'GroupMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Group', id: string, name: string, userCanManage: boolean, permissions: Array<{ __typename: 'Permission', code: PermissionCode, name: string }>, users: Array<{ __typename: 'User', id: string, firstName: string, lastName: string, email: string, isActive: boolean, avatar?: { __typename: 'Image', url: string } | null }> } } };

export type GroupUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: GroupUpdateInput;
}>;


export type GroupUpdateMutation = { __typename: 'Mutation', updateGroup: { __typename: 'GroupMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Group', id: string, name: string, userCanManage: boolean, permissions: Array<{ __typename: 'Permission', code: PermissionCode, name: string }>, users: Array<{ __typename: 'User', id: string, firstName: string, lastName: string, email: string, isActive: boolean, avatar?: { __typename: 'Image', url: string } | null }> } } };

export type GroupListQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<GroupFilter>;
  sort?: InputMaybe<GroupOrderingInput>;
}>;


export type GroupListQuery = { __typename: 'Query', groups: { __typename: 'GroupConnection', edges: Array<{ __typename: 'GroupEdge', node: { __typename: 'Group', id: string, name: string, userCanManage: boolean, users: Array<{ __typename: 'User', id: string, firstName: string, lastName: string }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type GroupDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  userId: Scalars['ID']['input'];
}>;


export type GroupDetailsQuery = { __typename: 'Query', group: { __typename: 'Group', id: string, name: string, userCanManage: boolean, permissions: Array<{ __typename: 'Permission', code: PermissionCode, name: string }>, users: Array<{ __typename: 'User', id: string, firstName: string, lastName: string, email: string, isActive: boolean, avatar?: { __typename: 'Image', url: string } | null }> }, user: { __typename: 'User', editableGroups: Array<{ __typename: 'Group', id: string }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, sourceGroups?: Array<{ __typename: 'Group', id: string }> | null }> } };

export type MediaCreateMutationVariables = Exact<{
  input: MediaCreationInput;
}>;


export type MediaCreateMutation = { __typename: 'Mutation', createMedia: { __typename: 'MediaItemMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'MediaItem', id: string } } };

export type MediaUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: MediaInput;
}>;


export type MediaUpdateMutation = { __typename: 'Mutation', updateMedia: { __typename: 'MediaItemMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'MediaItem', description?: string | null, publishedAt: string, id: string, title: string, alt: string, placeholder?: string | null, isPublished: boolean, type: MediaType, file: { __typename: 'File', url: string, contentType: string }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type MediaRemoveMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type MediaRemoveMutation = { __typename: 'Mutation', deleteMediaItem: { __typename: 'MediaItemMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type MediaBulkPublishMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
  isPublished: Scalars['Boolean']['input'];
}>;


export type MediaBulkPublishMutation = { __typename: 'Mutation', publishMediaItems: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type MediaBulkRemoveMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type MediaBulkRemoveMutation = { __typename: 'Mutation', deleteMediaItems: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type MediaListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  sort?: InputMaybe<MediaOrderingInput>;
  filter?: InputMaybe<MediaFilter>;
}>;


export type MediaListQuery = { __typename: 'Query', media: { __typename: 'MediaItemConnection', edges: Array<{ __typename: 'MediaItemEdge', node: { __typename: 'MediaItem', id: string, title: string, alt: string, placeholder?: string | null, isPublished: boolean, type: MediaType, file: { __typename: 'File', url: string } } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type MediaItemDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type MediaItemDetailsQuery = { __typename: 'Query', mediaItem: { __typename: 'MediaItem', description?: string | null, publishedAt: string, id: string, title: string, alt: string, placeholder?: string | null, isPublished: boolean, type: MediaType, file: { __typename: 'File', url: string, contentType: string }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type MediaCountQueryVariables = Exact<{
  filter?: InputMaybe<MediaFilter>;
}>;


export type MediaCountQuery = { __typename: 'Query', media: { __typename: 'MediaItemConnection', totalCount: number } };

export type MenuCreateMutationVariables = Exact<{
  input: MenuCreationInput;
}>;


export type MenuCreateMutation = { __typename: 'Mutation', createMenu: { __typename: 'MenuMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Menu', id: string } } };

export type MenuBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type MenuBulkDeleteMutation = { __typename: 'Mutation', deleteMenus: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type MenuDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type MenuDeleteMutation = { __typename: 'Mutation', deleteMenu: { __typename: 'MenuMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type MenuItemCreateMutationVariables = Exact<{
  input: MenuItemCreationInput;
}>;


export type MenuItemCreateMutation = { __typename: 'Mutation', createMenuItem: { __typename: 'MenuItemMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'MenuItem', menu: { __typename: 'Menu', id: string, items: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> } } } };

export type MenuUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  moves: Array<MenuItemMoveInput> | MenuItemMoveInput;
  removeIds: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type MenuUpdateMutation = { __typename: 'Mutation', updateMenu: { __typename: 'MenuMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null }, moveMenuItem: { __typename: 'MenuMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null }, deleteMenuItems: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type MenuItemUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: MenuItemInput;
}>;


export type MenuItemUpdateMutation = { __typename: 'Mutation', updateMenuItem: { __typename: 'MenuItemMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null } } };

export type MenuListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  sort?: InputMaybe<MenuOrderingInput>;
}>;


export type MenuListQuery = { __typename: 'Query', menus: { __typename: 'MenuConnection', edges: Array<{ __typename: 'MenuEdge', node: { __typename: 'Menu', id: string, name: string, items: Array<{ __typename: 'MenuItem', id: string }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type MenuDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type MenuDetailsQuery = { __typename: 'Query', menu: { __typename: 'Menu', id: string, name: string, items: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> } };

export type OrderCancelMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderCancelMutation = { __typename: 'Mutation', cancelOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDiscountAddMutationVariables = Exact<{
  input: OrderDiscountCommonInput;
  orderId: Scalars['ID']['input'];
}>;


export type OrderDiscountAddMutation = { __typename: 'Mutation', addDiscountToOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDiscountDeleteMutationVariables = Exact<{
  discountId: Scalars['ID']['input'];
}>;


export type OrderDiscountDeleteMutation = { __typename: 'Mutation', deleteOrderDiscount: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderLineDiscountRemoveMutationVariables = Exact<{
  orderLineId: Scalars['ID']['input'];
}>;


export type OrderLineDiscountRemoveMutation = { __typename: 'Mutation', removeOrderLineDiscount: { __typename: 'OrderLineMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderLineDiscountUpdateMutationVariables = Exact<{
  input: OrderDiscountCommonInput;
  orderLineId: Scalars['ID']['input'];
}>;


export type OrderLineDiscountUpdateMutation = { __typename: 'Mutation', updateOrderLineDiscount: { __typename: 'OrderLineMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDiscountUpdateMutationVariables = Exact<{
  input: OrderDiscountCommonInput;
  discountId: Scalars['ID']['input'];
}>;


export type OrderDiscountUpdateMutation = { __typename: 'Mutation', updateOrderDiscount: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDraftCancelMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderDraftCancelMutation = { __typename: 'Mutation', deleteOrderDraft: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDraftBulkCancelMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type OrderDraftBulkCancelMutation = { __typename: 'Mutation', deleteOrderDrafts: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type OrderConfirmMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderConfirmMutation = { __typename: 'Mutation', confirmOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDraftFinalizeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderDraftFinalizeMutation = { __typename: 'Mutation', completeOrderDraft: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type FulfillmentReturnProductsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: OrderReturnProductsInput;
}>;


export type FulfillmentReturnProductsMutation = { __typename: 'Mutation', returnFulfilledProducts: { __typename: 'OrderFulfillmentMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'OrderFulfillment', fulfillment: { __typename: 'Fulfillment', id: string }, order: { __typename: 'Order', id: string } } } };

export type OrderRefundMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  amount: Scalars['PositiveDecimal']['input'];
}>;


export type OrderRefundMutation = { __typename: 'Mutation', refundOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderFulfillmentRefundProductsMutationVariables = Exact<{
  input: OrderRefundProductsInput;
  order: Scalars['ID']['input'];
}>;


export type OrderFulfillmentRefundProductsMutation = { __typename: 'Mutation', refundFulfilledProducts: { __typename: 'OrderFulfillmentMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'OrderFulfillment', order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, fulfillment: { __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null } } } };

export type OrderVoidMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderVoidMutation = { __typename: 'Mutation', voidOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderMarkAsPaidMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  transactionReference?: InputMaybe<Scalars['String']['input']>;
}>;


export type OrderMarkAsPaidMutation = { __typename: 'Mutation', markOrderAsPaid: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderCaptureMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  amount: Scalars['PositiveDecimal']['input'];
}>;


export type OrderCaptureMutation = { __typename: 'Mutation', captureOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderFulfillmentUpdateTrackingMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: FulfillmentUpdateTrackingInput;
}>;


export type OrderFulfillmentUpdateTrackingMutation = { __typename: 'Mutation', updateFulfillmentTracking: { __typename: 'OrderFulfillmentMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'OrderFulfillment', order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } } };

export type OrderFulfillmentApproveMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  notifyCustomer: Scalars['Boolean']['input'];
  allowStockToBeExceeded?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type OrderFulfillmentApproveMutation = { __typename: 'Mutation', approveFulfillment: { __typename: 'OrderFulfillmentMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'OrderFulfillment', order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } } };

export type OrderFulfillmentCancelMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: FulfillmentCancelInput;
}>;


export type OrderFulfillmentCancelMutation = { __typename: 'Mutation', cancelFulfillment: { __typename: 'OrderFulfillmentMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'OrderFulfillment', order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } } };

export type OrderAddNoteMutationVariables = Exact<{
  orderId: Scalars['ID']['input'];
  input: OrderAddNoteInput;
}>;


export type OrderAddNoteMutation = { __typename: 'Mutation', addNoteToOrder: { __typename: 'Ordermutationresult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, order: { __typename: 'Order', id: string, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }> } } };

export type OrderUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: OrderUpdateInput;
}>;


export type OrderUpdateMutation = { __typename: 'Mutation', updateOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDraftUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: DraftOrderInput;
}>;


export type OrderDraftUpdateMutation = { __typename: 'Mutation', updateDraftOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderShippingMethodUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: OrderUpdateShippingInput;
}>;


export type OrderShippingMethodUpdateMutation = { __typename: 'Mutation', updateOrderShipping: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string, shippingMethodName: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, total: { __typename: 'TaxedMoney', tax: { __typename: 'Money', amount: number, currency: Currency }, gross: { __typename: 'Money', amount: number, currency: Currency }, net: { __typename: 'Money', currency: Currency, amount: number } }, shippingMethod?: { __typename: 'ShippingMethod', id: string, name: string, price: { __typename: 'Money', amount: number, currency: Currency } } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type OrderDraftCreateMutationVariables = Exact<{
  input: DraftOrderCreationInput;
}>;


export type OrderDraftCreateMutation = { __typename: 'Mutation', createDraftOrder: { __typename: 'OrderMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Order', id: string } } };

export type OrderLineDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderLineDeleteMutation = { __typename: 'Mutation', deleteOrderLine: { __typename: 'OrderLineMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, order: { __typename: 'Order', id: string, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null }> } } };

export type OrderLinesAddMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: Array<OrderLineCreationInput> | OrderLineCreationInput;
}>;


export type OrderLinesAddMutation = { __typename: 'Mutation', createOrderLines: { __typename: 'OrderLinesMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, order: { __typename: 'Order', id: string, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null }> } } };

export type OrderLineUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: OrderLineInput;
}>;


export type OrderLineUpdateMutation = { __typename: 'Mutation', updateOrderLine: { __typename: 'OrderLineMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } } };

export type FulfillOrderMutationVariables = Exact<{
  orderId: Scalars['ID']['input'];
  input: OrderFulfillInput;
}>;


export type FulfillOrderMutation = { __typename: 'Mutation', fulfillOrder: { __typename: 'OrderFulfillmentMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError', warehouse?: string | null, addressType?: AddressType | null, orderLines?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'OrderFulfillment', order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } } };

export type InvoiceRequestMutationVariables = Exact<{
  orderId: Scalars['ID']['input'];
}>;


export type InvoiceRequestMutation = { __typename: 'Mutation', requestInvoice: { __typename: 'OrderInvoiceMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, invoice: { __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }, order: { __typename: 'Order', id: string, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }> } } };

export type InvoiceEmailSendMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type InvoiceEmailSendMutation = { __typename: 'Mutation', sendInvoiceNotification: { __typename: 'InvoiceMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus } } };

export type OrderSettingsUpdateMutationVariables = Exact<{
  orderSettingsInput: OrderSettingsUpdateInput;
  shopSettingsInput: ShopSettingsUpdateInput;
}>;


export type OrderSettingsUpdateMutation = { __typename: 'Mutation', updateOrderSettings: { __typename: 'OrderSettingsMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'OrderSettings', autoConfirmAllNewOrders: boolean, autoFulfillNonShippableGiftCard: boolean } }, updateShopSettings: { __typename: 'SiteMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Site', autoApproveFulfillment: boolean, fulfillmentAllowUnpaid: boolean } } };

export type OrderListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<OrderFilter>;
  sort?: InputMaybe<OrderOrderingInput>;
}>;


export type OrderListQuery = { __typename: 'Query', orders: { __typename: 'OrderConnection', edges: Array<{ __typename: 'OrderEdge', node: { __typename: 'Order', createdAt: string, id: string, number: string, paymentStatus: ChargeStatus, status: OrderStatus, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } } } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type OrderDraftListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<OrderDraftFilter>;
  sort?: InputMaybe<OrderOrderingInput>;
}>;


export type OrderDraftListQuery = { __typename: 'Query', orderDrafts: { __typename: 'OrderConnection', edges: Array<{ __typename: 'OrderEdge', node: { __typename: 'Order', createdAt: string, id: string, number: string, paymentStatus: ChargeStatus, status: OrderStatus, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } } } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type OrderDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type OrderDetailsQuery = { __typename: 'Query', order: { __typename: 'Order', id: string, isShippingRequired: boolean, canFinalize: boolean, createdAt: string, customerNote: string, number: string, isPaid: boolean, paymentStatus: ChargeStatus, shippingMethodName: string, collectionPointName: string, status: OrderStatus, actions: Array<OrderAction>, userEmail?: string | null, billingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, giftCards: Array<{ __typename: 'GiftCard', events: Array<{ __typename: 'GiftCardEvent', id: string, type: GiftCardEventType, orderId: string, balance: { __typename: 'GiftCardEventBalance', initialBalance: { __typename: 'Money', currency: Currency, amount: number }, currentBalance: { __typename: 'Money', currency: Currency, amount: number }, oldInitialBalance: { __typename: 'Money', currency: Currency, amount: number }, oldCurrentBalance: { __typename: 'Money', currency: Currency, amount: number } } }> }>, discounts: Array<{ __typename: 'OrderDiscount', id: string, type: OrderDiscountType, value: string | number, reason?: string | null, calculationMode: DiscountValueType, amount: { __typename: 'Money', currency: Currency, amount: number } }>, events: Array<{ __typename: 'OrderEvent', id: string, amount: number, shippingCostsIncluded: boolean, date: string, email: string, emailType: OrderEventEmailType, invoiceNumber: string, message: string, quantity: number, transactionReference: string, type: OrderEventType, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, relatedOrder: { __typename: 'Order', id: string, number: string }, user: { __typename: 'User', id: string, email: string, firstName: string, lastName: string }, app: { __typename: 'App', id: string, name: string, appUrl: string }, lines: Array<{ __typename: 'OrderEventOrderLineObject', quantity: number, itemName: string, discount: { __typename: 'OrderDiscount', valueType: DiscountValueType, value: string | number, reason?: string | null, amount: { __typename: 'Money', amount: number, currency: Currency } }, orderLine: { __typename: 'OrderLine', id: string, productName: string } }> }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, fulfillmentOrder: number, status: FulfillmentStatus, trackingNumber: string, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', alt: string, url: string } | null } }>, warehouse?: { __typename: 'Warehouse', id: string, name: string } | null }>, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, taxRate: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, category?: { __typename: 'Category', name: string } | null, productKlass: { __typename: 'ProductKlass', isDigital: boolean, kind: ProductKlassKind }, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }> } | null, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, undiscountedUnitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string, alt: string } | null }>, shippingAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, shippingMethod?: { __typename: 'ShippingMethod', id: string } | null, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', amount: number, currency: Currency } }, subtotal: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number } }, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number }, net: { __typename: 'Money', currency: Currency, amount: number }, tax: { __typename: 'Money', currency: Currency, amount: number } }, totalAuthorized: { __typename: 'Money', currency: Currency, amount: number }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, totalBalance: { __typename: 'Money', currency: Currency, amount: number }, undiscountedTotal: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number }, gross: { __typename: 'Money', currency: Currency, amount: number } }, user?: { __typename: 'User', id: string, email: string } | null, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, active: boolean, message: string, price: { __typename: 'Money', currency: Currency, amount: number } }>, invoices: Array<{ __typename: 'Invoice', id: string, number: string, createdAt: string, url: string, status: JobStatus }>, channel: { __typename: 'Channel', isActive: boolean, id: string, name: string, currencyCode: string, slug: string, defaultCountry: { __typename: 'Country', code: CountryCode } }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, shop: { __typename: 'Site', id: string, defaultWeightUnit: WeightUnit, fulfillmentAllowUnpaid: boolean, autoApproveFulfillment: boolean, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }> } };

export type OrderFulfillDataQueryVariables = Exact<{
  orderId: Scalars['ID']['input'];
}>;


export type OrderFulfillDataQuery = { __typename: 'Query', order: { __typename: 'Order', id: string, isPaid: boolean, number: string, fulfillmentMethod?: { __typename: 'ShippingMethod', id: string } | { __typename: 'Warehouse', id: string, clickAndCollectOption: WarehouseClickAndCollectOption } | null, lines: Array<{ __typename: 'OrderLine', id: string, isShippingRequired: boolean, productName: string, quantity: number, quantityFulfilled: number, quantityToFulfill: number, allocations: Array<{ __typename: 'Allocation', id: string, quantity: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, product?: { __typename: 'ConcreteProduct', id: string, name: string, sku: string, trackInventory: boolean, preorder?: { __typename: 'PreorderData', endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | null, thumbnail?: { __typename: 'Image', url: string } | null }> } };

export type OrderFulfillSettingsQueryVariables = Exact<{ [key: string]: never; }>;


export type OrderFulfillSettingsQuery = { __typename: 'Query', shop: { __typename: 'Site', autoApproveFulfillment: boolean, fulfillmentAllowUnpaid: boolean } };

export type OrderSettingsQueryVariables = Exact<{ [key: string]: never; }>;


export type OrderSettingsQuery = { __typename: 'Query', orderSettings: { __typename: 'OrderSettings', autoConfirmAllNewOrders: boolean, autoFulfillNonShippableGiftCard: boolean }, shop: { __typename: 'Site', autoApproveFulfillment: boolean, fulfillmentAllowUnpaid: boolean } };

export type OrderRefundDataQueryVariables = Exact<{
  orderId: Scalars['ID']['input'];
}>;


export type OrderRefundDataQuery = { __typename: 'Query', order: { __typename: 'Order', id: string, number: string, total: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, totalCaptured: { __typename: 'Money', currency: Currency, amount: number }, shippingPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, lines: Array<{ __typename: 'OrderLine', quantityToFulfill: number, id: string, productName: string, quantity: number, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string } | null }>, fulfillments: Array<{ __typename: 'Fulfillment', id: string, status: FulfillmentStatus, fulfillmentOrder: number, lines: Array<{ __typename: 'FulfillmentLine', id: string, quantity: number, orderLine: { __typename: 'OrderLine', id: string, productName: string, quantity: number, unitPrice: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, thumbnail?: { __typename: 'Image', url: string } | null } }> }> } };

export type ChannelUsabilityDataQueryVariables = Exact<{
  channel: Scalars['String']['input'];
}>;


export type ChannelUsabilityDataQuery = { __typename: 'Query', products: { __typename: 'ProductConnection', totalCount: number } };

export type PageKlassUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: PageKlassUpdateInput;
}>;


export type PageKlassUpdateMutation = { __typename: 'Mutation', updatePageKlass: { __typename: 'PageKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'PageKlass', id: string, name: string, hasPages: boolean, attributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type PageKlassCreateMutationVariables = Exact<{
  input: PageKlassCreationInput;
}>;


export type PageKlassCreateMutation = { __typename: 'Mutation', createPageKlass: { __typename: 'PageKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'PageKlass', id: string, name: string, hasPages: boolean, attributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type AssignPageAttributeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type AssignPageAttributeMutation = { __typename: 'Mutation', assignPageAttribute: { __typename: 'PageKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'PageKlass', id: string, name: string, hasPages: boolean, attributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type UnassignPageAttributeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type UnassignPageAttributeMutation = { __typename: 'Mutation', unassignPageAttribute: { __typename: 'PageKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'PageKlass', id: string, name: string, hasPages: boolean, attributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type PageKlassDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type PageKlassDeleteMutation = { __typename: 'Mutation', deletePageKlass: { __typename: 'PageKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'PageKlass', id: string } } };

export type PageKlassBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type PageKlassBulkDeleteMutation = { __typename: 'Mutation', deletePageKlasses: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type PageKlassAttributeReorderMutationVariables = Exact<{
  move: ReorderInput;
  pageKlassId: Scalars['ID']['input'];
}>;


export type PageKlassAttributeReorderMutation = { __typename: 'Mutation', reorderPageKlassAttributes: { __typename: 'PageKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'PageKlass', id: string, name: string, hasPages: boolean, attributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type PageKlassListQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<PageKlassFilter>;
  sort?: InputMaybe<PageKlassOrderingInput>;
}>;


export type PageKlassListQuery = { __typename: 'Query', pageKlasses: { __typename: 'PageKlassConnection', edges: Array<{ __typename: 'PageKlassEdge', node: { __typename: 'PageKlass', id: string, name: string, hasPages: boolean } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type PageKlassDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type PageKlassDetailsQuery = { __typename: 'Query', pageKlass: { __typename: 'PageKlass', id: string, name: string, hasPages: boolean, attributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type PageCreateMutationVariables = Exact<{
  input: PageCreationInput;
}>;


export type PageCreateMutation = { __typename: 'Mutation', createPage: { __typename: 'PageMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Page', id: string } } };

export type PageUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: PageInput;
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type PageUpdateMutation = { __typename: 'Mutation', updatePage: { __typename: 'PageMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'Page', content: string, seoTitle: string, seoDescription: string, publishedAt: string, id: string, title: string, slug: string, isPublished: boolean, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, pageKlass: { __typename: 'PageKlass', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type PageRemoveMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type PageRemoveMutation = { __typename: 'Mutation', deletePage: { __typename: 'PageMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type PageBulkPublishMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
  isPublished: Scalars['Boolean']['input'];
}>;


export type PageBulkPublishMutation = { __typename: 'Mutation', publishPages: { __typename: 'PageBulkMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type PageBulkRemoveMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type PageBulkRemoveMutation = { __typename: 'Mutation', deletePages: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type PageListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  sort?: InputMaybe<PageOrderingInput>;
  filter?: InputMaybe<PageFilter>;
}>;


export type PageListQuery = { __typename: 'Query', pages: { __typename: 'PageConnection', edges: Array<{ __typename: 'PageEdge', node: { __typename: 'Page', id: string, title: string, slug: string, isPublished: boolean, content: string } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type PageDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type PageDetailsQuery = { __typename: 'Query', page: { __typename: 'Page', content: string, seoTitle: string, seoDescription: string, publishedAt: string, id: string, title: string, slug: string, isPublished: boolean, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, pageKlass: { __typename: 'PageKlass', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type PageKlassQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type PageKlassQuery = { __typename: 'Query', pageKlass: { __typename: 'PageKlass', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, slug: string, name: string, valueRequired: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> } };

export type PageCountQueryVariables = Exact<{
  filter?: InputMaybe<PageFilter>;
}>;


export type PageCountQuery = { __typename: 'Query', pages: { __typename: 'PageConnection', totalCount: number } };

export type PluginUpdateMutationVariables = Exact<{
  channelId?: InputMaybe<Scalars['ID']['input']>;
  id: Scalars['ID']['input'];
  input: PluginUpdateInput;
}>;


export type PluginUpdateMutation = { __typename: 'Mutation', updatePlugin: { __typename: 'PluginMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Plugin', id: string, name: string, description: string, globalConfiguration: { __typename: 'PluginConfiguration', active: boolean, configuration: Array<{ __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null }>, channel: { __typename: 'Channel', id: string, name: string, slug: string } }, channelConfigurations: Array<{ __typename: 'PluginConfiguration', active: boolean, configuration: Array<{ __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null }>, channel: { __typename: 'Channel', id: string, name: string, slug: string } }> } } };

export type PluginsQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<PluginFilter>;
  sort?: InputMaybe<PluginOrderingInput>;
}>;


export type PluginsQuery = { __typename: 'Query', plugins: { __typename: 'PluginConnection', edges: Array<{ __typename: 'PluginEdge', node: { __typename: 'Plugin', id: string, name: string, description: string, channelConfigurations: Array<{ __typename: 'PluginConfiguration', active: boolean, channel: { __typename: 'Channel', id: string, name: string, slug: string } }>, globalConfiguration: { __typename: 'PluginConfiguration', active: boolean, channel: { __typename: 'Channel', id: string, name: string, slug: string } } } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type PluginQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type PluginQuery = { __typename: 'Query', plugin: { __typename: 'Plugin', id: string, name: string, description: string, globalConfiguration: { __typename: 'PluginConfiguration', active: boolean, configuration: Array<{ __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null }>, channel: { __typename: 'Channel', id: string, name: string, slug: string } }, channelConfigurations: Array<{ __typename: 'PluginConfiguration', active: boolean, configuration: Array<{ __typename: 'ConfigurationItem', name: string, value?: string | null, type: ConfigurationTypeField, helpText?: string | null, label?: string | null }>, channel: { __typename: 'Channel', id: string, name: string, slug: string } }> } };

export type ProductKlassDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ProductKlassDeleteMutation = { __typename: 'Mutation', deleteProductKlass: { __typename: 'ProductKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ProductKlass', id: string } } };

export type ProductKlassBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type ProductKlassBulkDeleteMutation = { __typename: 'Mutation', deleteProductKlasses: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ProductKlassUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ProductKlassInput;
}>;


export type ProductKlassUpdateMutation = { __typename: 'Mutation', updateProductKlass: { __typename: 'ProductKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type AssignProductAttributeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  operations: Array<ProductAttributeAssignInput> | ProductAttributeAssignInput;
}>;


export type AssignProductAttributeMutation = { __typename: 'Mutation', assignProductAttribute: { __typename: 'ProductAttributeAssignmentMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, productKlass: { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type UnassignProductAttributeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type UnassignProductAttributeMutation = { __typename: 'Mutation', unassignProductAttribute: { __typename: 'ProductKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type ProductKlassCreateMutationVariables = Exact<{
  input: ProductKlassInput;
}>;


export type ProductKlassCreateMutation = { __typename: 'Mutation', createProductKlass: { __typename: 'ProductKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type ProductKlassAttributeReorderMutationVariables = Exact<{
  move: ReorderInput;
  klassId: Scalars['ID']['input'];
  type: ProductAttributeType;
}>;


export type ProductKlassAttributeReorderMutation = { __typename: 'Mutation', reorderProductKlassAttributes: { __typename: 'ProductKlassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type ProductAttributeAssignmentUpdateMutationVariables = Exact<{
  operations: Array<ProductAttributeAssignmentUpdateInput> | ProductAttributeAssignmentUpdateInput;
  klassId: Scalars['ID']['input'];
}>;


export type ProductAttributeAssignmentUpdateMutation = { __typename: 'Mutation', updateProductAttributeAssignment: { __typename: 'ProductKlassMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type ProductKlassListQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<ProductKlassFilter>;
  sort?: InputMaybe<ProductKlassOrderingInput>;
}>;


export type ProductKlassListQuery = { __typename: 'Query', productKlasses: { __typename: 'ProductKlassConnection', edges: Array<{ __typename: 'ProductKlassEdge', node: { __typename: 'ProductKlass', id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ProductKlassDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ProductKlassDetailsQuery = { __typename: 'Query', productKlass: { __typename: 'ProductKlass', weight: string | number, id: string, name: string, kind: ProductKlassKind, hasVariants: boolean, isShippingRequired: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, productVariantAttributeAssignments: Array<{ __typename: 'ProductAttributeAssignment', variantSelection: boolean, attribute: { __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, shop: { __typename: 'Site', id: string, defaultWeightUnit: WeightUnit } };

export type ProductKlassCreateDataQueryVariables = Exact<{ [key: string]: never; }>;


export type ProductKlassCreateDataQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, defaultWeightUnit: WeightUnit } };

export type ProductMediaCreateMutationVariables = Exact<{
  product: Scalars['ID']['input'];
  image?: InputMaybe<Scalars['Upload']['input']>;
  alt: Scalars['String']['input'];
  mediaUrl?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductMediaCreateMutation = { __typename: 'Mutation', createProductMediaItem: { __typename: 'ProductMediaMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, media: { __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string } } };

export type ProductDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ProductDeleteMutation = { __typename: 'Mutation', deleteProduct: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string } } };

export type ProductMediaReorderMutationVariables = Exact<{
  productId: Scalars['ID']['input'];
  mediaItemIds: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type ProductMediaReorderMutation = { __typename: 'Mutation', reorderProductMedia: { __typename: 'ProductMediaMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, media: { __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string } } };

export type ProductSetDefaultVariantMutationVariables = Exact<{
  productId: Scalars['ID']['input'];
  variantId: Scalars['ID']['input'];
}>;


export type ProductSetDefaultVariantMutation = { __typename: 'Mutation', setDefaultVariant: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'AbstractProduct', id: string, defaultVariant: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }> } | { __typename: 'ConcreteProduct', id: string, defaultVariant: { __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string } | { __typename: 'ConcreteProduct', id: string, name: string }> } } };

export type ProductDatagridUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ProductInput;
}>;


export type ProductDatagridUpdateMutation = { __typename: 'Mutation', updateProduct: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ProductDatagridStockUpdateMutationVariables = Exact<{
  stocks: Array<StockInput> | StockInput;
  removeStocks: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
  id: Scalars['ID']['input'];
}>;


export type ProductDatagridStockUpdateMutation = { __typename: 'Mutation', deleteProductStocks: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null }, updateProductStocks: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError', index: number, message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ProductDatagridChannelListingUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: Array<ProductChannelListingAddInput> | ProductChannelListingAddInput;
}>;


export type ProductDatagridChannelListingUpdateMutation = { __typename: 'Mutation', updateProductChannelListing: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ProductUpdateMutationVariables = Exact<{
  addStocks: Array<StockInput> | StockInput;
  removeStocks: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
  id: Scalars['ID']['input'];
  attributes?: InputMaybe<Array<ValueInput> | ValueInput>;
  sku?: InputMaybe<Scalars['String']['input']>;
  quantityLimitPerCustomer?: InputMaybe<Scalars['Int']['input']>;
  trackInventory: Scalars['Boolean']['input'];
  stocks: Array<StockInput> | StockInput;
  preorder?: InputMaybe<PreorderSettingsInput>;
  weight?: InputMaybe<Scalars['Weight']['input']>;
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
}>;


export type ProductUpdateMutation = { __typename: 'Mutation', deleteProductStocks: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'AbstractProduct', id: string, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | { __typename: 'ConcreteProduct', id: string, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } }, createProductStocks: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError', index: number, message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'AbstractProduct', id: string, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } | { __typename: 'ConcreteProduct', id: string, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }> } }, updateProductStocks: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError', index: number, message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ConcreteProduct', trackInventory: boolean, sku: string, quantityLimitPerCustomer: number, id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } }, updateProduct: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError', attributes?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, result: { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ConcreteProduct', trackInventory: boolean, sku: string, quantityLimitPerCustomer: number, id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type ProductMediaDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ProductMediaDeleteMutation = { __typename: 'Mutation', deleteProductMediaItem: { __typename: 'ProductMediaMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, product: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string }> } | { __typename: 'ConcreteProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string }> } } };

export type ProductMediaUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  alt: Scalars['String']['input'];
}>;


export type ProductMediaUpdateMutation = { __typename: 'Mutation', updateProductMedia: { __typename: 'ProductMediaMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, product: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> } } };

export type ProductMediaAssignMutationVariables = Exact<{
  productId: Scalars['ID']['input'];
  mediaItemId: Scalars['ID']['input'];
}>;


export type ProductMediaAssignMutation = { __typename: 'Mutation', assignProductMedia: { __typename: 'ProductMediaAssignmentMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, product: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, parent: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> }> } } | { __typename: 'ConcreteProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, parent: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> }> } } } };

export type ProductMediaUnassignMutationVariables = Exact<{
  productId: Scalars['ID']['input'];
  mediaItemId: Scalars['ID']['input'];
}>;


export type ProductMediaUnassignMutation = { __typename: 'Mutation', unassignProductMedia: { __typename: 'ProductMediaUnassignmentMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, product: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, parent: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> }> } } | { __typename: 'ConcreteProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, parent: { __typename: 'AbstractProduct', id: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }> }> } } } };

export type ProductBulkCreateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  inputs: Array<ProductBulkCreationInput> | ProductBulkCreationInput;
}>;


export type ProductBulkCreateMutation = { __typename: 'Mutation', createProducts: { __typename: 'ProductBulkMutationResult', errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError', index: number, channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null, objects: Array<{ __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }> } };

export type ProductBulkDeleteMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type ProductBulkDeleteMutation = { __typename: 'Mutation', deleteProducts: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ProductReorderMutationVariables = Exact<{
  move: ReorderInput;
  productId: Scalars['ID']['input'];
}>;


export type ProductReorderMutation = { __typename: 'Mutation', reorderProductVariants: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'AbstractProduct', id: string, variants: Array<{ __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }> } | { __typename: 'ConcreteProduct', id: string, variants: Array<{ __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }> } } };

export type ProductChannelListingUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: Array<ProductChannelListingAddInput> | ProductChannelListingAddInput;
}>;


export type ProductChannelListingUpdateMutation = { __typename: 'Mutation', updateProductChannelListing: { __typename: 'ProductMutationResult', result: { __typename: 'AbstractProduct', id: string, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', id: string, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }, errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError' } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ProductPreorderDeactivateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ProductPreorderDeactivateMutation = { __typename: 'Mutation', deactivateProductPreorder: { __typename: 'ProductPreorderDeactivationMutationResult', productVariant: { __typename: 'AbstractProduct', id: string, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null } | { __typename: 'ConcreteProduct', id: string, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null }, errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type InitialProductFilterAttributesQueryVariables = Exact<{ [key: string]: never; }>;


export type InitialProductFilterAttributesQuery = { __typename: 'Query', attributes: { __typename: 'AttributeConnection', edges: Array<{ __typename: 'AttributeEdge', node: { __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, slug: string } }> } };

export type InitialProductFilterCategoriesQueryVariables = Exact<{
  categories?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>;
}>;


export type InitialProductFilterCategoriesQuery = { __typename: 'Query', categories: { __typename: 'CategoryConnection', edges: Array<{ __typename: 'CategoryEdge', node: { __typename: 'Category', id: string, name: string } }> } };

export type InitialProductFilterCollectionsQueryVariables = Exact<{
  collections?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>;
}>;


export type InitialProductFilterCollectionsQuery = { __typename: 'Query', collections: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string } }> } };

export type InitialProductFilterProductKlassesQueryVariables = Exact<{
  productKlasses?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>;
}>;


export type InitialProductFilterProductKlassesQuery = { __typename: 'Query', productKlasses: { __typename: 'ProductKlassConnection', edges: Array<{ __typename: 'ProductKlassEdge', node: { __typename: 'ProductKlass', id: string, name: string } }> } };

export type ProductListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ProductFilter>;
  channel?: InputMaybe<Scalars['String']['input']>;
  sort?: InputMaybe<ProductOrderingInput>;
  hasChannel: Scalars['Boolean']['input'];
  hasSelectedAttributes: Scalars['Boolean']['input'];
}>;


export type ProductListQuery = { __typename: 'Query', products: { __typename: 'ProductConnection', totalCount: number, edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', updatedAt: string, id: string, name: string, attributes?: Array<{ __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, thumbnail?: { __typename: 'Image', url: string } | null, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean }, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', updatedAt: string, id: string, name: string, attributes?: Array<{ __typename: 'Attribute', id: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, thumbnail?: { __typename: 'Image', url: string } | null, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean }, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ProductCountQueryVariables = Exact<{
  filter?: InputMaybe<ProductFilter>;
  channel?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductCountQuery = { __typename: 'Query', products: { __typename: 'ProductConnection', totalCount: number } };

export type ProductDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  channel?: InputMaybe<Scalars['String']['input']>;
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductDetailsQuery = { __typename: 'Query', product: { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ConcreteProduct', trackInventory: boolean, sku: string, quantityLimitPerCustomer: number, id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type ProductKlassQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductKlassQuery = { __typename: 'Query', productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, productAttributes: Array<{ __typename: 'Attribute', id: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, slug: string, name: string, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null } };

export type ProductVariantDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductVariantDetailsQuery = { __typename: 'Query', productVariant: { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ConcreteProduct', trackInventory: boolean, sku: string, quantityLimitPerCustomer: number, id: string, name: string, slug: string, description?: string | null, seoTitle: string, seoDescription: string, rating: number, isAvailableForPurchase: boolean, weight: string | number, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, category?: { __typename: 'Category', id: string, name: string } | null, collections: Array<{ __typename: 'Collection', id: string, name: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string }, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null }>, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, alt: string, sortOrder: number, oembedData: string }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> } | { __typename: 'ConcreteProduct', sku: string, trackInventory: boolean, quantityLimitPerCustomer: number, id: string, name: string, attributes: Array<{ __typename: 'Attribute', id: string, name: string, values: { __typename: 'ValueConnection', edges: Array<{ __typename: 'ValueEdge', node: { __typename: 'Value', id: string, name: string } }> } }>, media: Array<{ __typename: 'ProductMediaItem', url: string }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, isAvailableForPurchase: boolean, visibleInListings: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } }, stop: { __typename: 'TaxedMoney', net: { __typename: 'Money', currency: Currency, amount: number } } } } | null, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }> }>, productKlass: { __typename: 'ProductKlass', id: string, name: string, hasVariants: boolean, variantAttributes: Array<{ __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }> }, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null, parent: { __typename: 'AbstractProduct', id: string, name: string, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string } | null, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, publishedAt: string, isPublished: boolean, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType, oembedData: string }> }> }, selectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, nonSelectionAttributes: Array<{ __typename: 'Attribute', id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, unit: MeasurementUnit, inputType: AttributeInputType }>, stocks: Array<{ __typename: 'Stock', id: string, quantity: number, quantityAllocated: number, warehouse: { __typename: 'Warehouse', id: string, name: string } }>, preorder?: { __typename: 'PreorderData', globalThreshold?: number | null, globalSoldUnits: number, endDate?: string | null } | null, attributes: Array<{ __typename: 'Attribute', id: string, slug: string, name: string, inputType: AttributeInputType, entityType?: AttributeEntityType | null, valueRequired: boolean, unit: MeasurementUnit, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', plainText?: string | null, richText?: string | null, id: string, name: string, slug: string, reference?: string | null, boolean?: boolean | null, date?: string | null, dateTime?: string | null, value: string, file?: { __typename: 'File', url: string, contentType: string } | null } }> } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type ProductCreateDataQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductCreateDataQuery = { __typename: 'Query', product: { __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, sortOrder: number, url: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, productKlass: { __typename: 'ProductKlass', id: string }, thumbnail?: { __typename: 'Image', url: string } | null, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType }> }> } | { __typename: 'ConcreteProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, sortOrder: number, url: string }>, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, isPublished: boolean, publishedAt: string, channel: { __typename: 'Channel', id: string, name: string, currencyCode: string } }>, productKlass: { __typename: 'ProductKlass', id: string }, thumbnail?: { __typename: 'Image', url: string } | null, defaultVariant: { __typename: 'AbstractProduct', id: string } | { __typename: 'ConcreteProduct', id: string }, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, type: MediaType }> }> } };

export type ProductMediaByIdQueryVariables = Exact<{
  productId: Scalars['ID']['input'];
  mediaItemId: Scalars['ID']['input'];
}>;


export type ProductMediaByIdQuery = { __typename: 'Query', product: { __typename: 'AbstractProduct', id: string, name: string, mainImage: { __typename: 'ProductMediaItem', id: string, alt: string, url: string, type: MediaType, oembedData: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, alt: string, type: MediaType, oembedData: string }> } | { __typename: 'ConcreteProduct', id: string, name: string, mainImage: { __typename: 'ProductMediaItem', id: string, alt: string, url: string, type: MediaType, oembedData: string }, media: Array<{ __typename: 'ProductMediaItem', id: string, url: string, alt: string, type: MediaType, oembedData: string }> } };

export type GridAttributesQueryVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type GridAttributesQuery = { __typename: 'Query', grid: { __typename: 'AttributeConnection', edges: Array<{ __typename: 'AttributeEdge', node: { __typename: 'Attribute', id: string, name: string } }> } };

export type SearchAvailableInGridAttributesQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  query: Scalars['String']['input'];
}>;


export type SearchAvailableInGridAttributesQuery = { __typename: 'Query', availableInGrid: { __typename: 'AttributeConnection', totalCount: number, edges: Array<{ __typename: 'AttributeEdge', node: { __typename: 'Attribute', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchAvailablePageAttributesQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchAvailablePageAttributesQuery = { __typename: 'Query', pageKlass: { __typename: 'PageKlass', id: string, availableAttributes: { __typename: 'AttributeConnection', edges: Array<{ __typename: 'AttributeEdge', node: { __typename: 'Attribute', id: string, name: string, slug: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } } };

export type SearchAvailableProductAttributesQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchAvailableProductAttributesQuery = { __typename: 'Query', productKlass: { __typename: 'ProductKlass', id: string, availableAttributes: { __typename: 'AttributeNodeConnection', edges: Array<{ __typename: 'AttributeNodeEdge', node: { __typename: 'Attribute', id: string, name: string, slug: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } } };

export type SearchCategoriesQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchCategoriesQuery = { __typename: 'Query', search: { __typename: 'CategoryConnection', edges: Array<{ __typename: 'CategoryEdge', node: { __typename: 'Category', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchCollectionsQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchCollectionsQuery = { __typename: 'Query', search: { __typename: 'CollectionConnection', edges: Array<{ __typename: 'CollectionEdge', node: { __typename: 'Collection', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchGiftCardTagsQueryVariables = Exact<{
  query: Scalars['String']['input'];
  first: Scalars['Int']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type SearchGiftCardTagsQuery = { __typename: 'Query', search: { __typename: 'GiftCardTagConnection', totalCount: number, edges: Array<{ __typename: 'GiftCardTagEdge', node: { __typename: 'GiftCardTag', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchGroupsQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchGroupsQuery = { __typename: 'Query', search: { __typename: 'GroupConnection', edges: Array<{ __typename: 'GroupEdge', node: { __typename: 'Group', id: string, name: string, userCanManage: boolean } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchMediaQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchMediaQuery = { __typename: 'Query', search: { __typename: 'MediaItemConnection', edges: Array<{ __typename: 'MediaItemEdge', node: { __typename: 'MediaItem', id: string, title: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchOrderVariantQueryVariables = Exact<{
  channel: Scalars['String']['input'];
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
  after?: InputMaybe<Scalars['String']['input']>;
  address?: InputMaybe<AddressUpdateInput>;
  isPublished?: InputMaybe<Scalars['Boolean']['input']>;
  stockAvailability?: InputMaybe<StockAvailability>;
}>;


export type SearchOrderVariantQuery = { __typename: 'Query', search: { __typename: 'ProductConnection', edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, pricing?: { __typename: 'ProductPricingInfo', onSale: boolean, priceUndiscounted: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, pricing?: { __typename: 'ProductPricingInfo', onSale: boolean, priceUndiscounted: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> } | { __typename: 'ConcreteProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, pricing?: { __typename: 'ProductPricingInfo', onSale: boolean, priceUndiscounted: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, pricing?: { __typename: 'ProductPricingInfo', onSale: boolean, priceUndiscounted: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } }, price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> } }>, pageInfo: { __typename: 'PageInfo', endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null } } };

export type SearchPageKlassesQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchPageKlassesQuery = { __typename: 'Query', search: { __typename: 'PageKlassConnection', edges: Array<{ __typename: 'PageKlassEdge', node: { __typename: 'PageKlass', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchPagesQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchPagesQuery = { __typename: 'Query', search: { __typename: 'PageConnection', edges: Array<{ __typename: 'PageEdge', node: { __typename: 'Page', id: string, title: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchProductKlassesQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchProductKlassesQuery = { __typename: 'Query', search: { __typename: 'ProductKlassConnection', edges: Array<{ __typename: 'ProductKlassEdge', node: { __typename: 'ProductKlass', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchProductsQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchProductsQuery = { __typename: 'Query', search: { __typename: 'ProductConnection', edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, channel: { __typename: 'Channel', id: string, isActive: boolean, name: string, currencyCode: string }, price: { __typename: 'Money', amount: number, currency: Currency } }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, channel: { __typename: 'Channel', id: string, isActive: boolean, name: string, currencyCode: string }, price: { __typename: 'Money', amount: number, currency: Currency } }> }>, collections: Array<{ __typename: 'Collection', id: string }> } | { __typename: 'ConcreteProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, channel: { __typename: 'Channel', id: string, isActive: boolean, name: string, currencyCode: string }, price: { __typename: 'Money', amount: number, currency: Currency } }> } | { __typename: 'ConcreteProduct', sku: string, id: string, name: string, channelListings: Array<{ __typename: 'ProductChannelListing', id: string, channel: { __typename: 'Channel', id: string, isActive: boolean, name: string, currencyCode: string }, price: { __typename: 'Money', amount: number, currency: Currency } }> }>, collections: Array<{ __typename: 'Collection', id: string }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchStaffMembersQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchStaffMembersQuery = { __typename: 'Query', search: { __typename: 'UserConnection', edges: Array<{ __typename: 'UserEdge', node: { __typename: 'User', id: string, email: string, firstName: string, lastName: string, isActive: boolean, avatar?: { __typename: 'Image', alt: string, url: string } | null } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SearchWarehousesQueryVariables = Exact<{
  after?: InputMaybe<Scalars['String']['input']>;
  first: Scalars['Int']['input'];
  query: Scalars['String']['input'];
}>;


export type SearchWarehousesQuery = { __typename: 'Query', search: { __typename: 'WarehouseConnection', totalCount: number, edges: Array<{ __typename: 'WarehouseEdge', node: { __typename: 'Warehouse', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type DeleteShippingZoneMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DeleteShippingZoneMutation = { __typename: 'Mutation', deleteShippingZone: { __typename: 'ShippingZoneMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type BulkDeleteShippingZoneMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type BulkDeleteShippingZoneMutation = { __typename: 'Mutation', deleteShippingZones: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type UpdateDefaultWeightUnitMutationVariables = Exact<{
  unit?: InputMaybe<WeightUnit>;
}>;


export type UpdateDefaultWeightUnitMutation = { __typename: 'Mutation', updateShopSettings: { __typename: 'SiteMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Site', defaultWeightUnit: WeightUnit } } };

export type CreateShippingZoneMutationVariables = Exact<{
  input: ShippingZoneCreationInput;
}>;


export type CreateShippingZoneMutation = { __typename: 'Mutation', createShippingZone: { __typename: 'ShippingZoneMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ShippingZone', id: string, name: string, countries: Array<{ __typename: 'Country', name: string, code: CountryCode }> } } };

export type UpdateShippingZoneMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ShippingZoneUpdateInput;
}>;


export type UpdateShippingZoneMutation = { __typename: 'Mutation', updateShippingZone: { __typename: 'ShippingZoneMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ShippingZone', id: string, name: string, countries: Array<{ __typename: 'Country', name: string, code: CountryCode }> } } };

export type UpdateShippingRateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ShippingPriceInput;
}>;


export type UpdateShippingRateMutation = { __typename: 'Mutation', updateShippingPrice: { __typename: 'ShippingPriceMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ShippingPrice', shippingMethod: { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } } } } };

export type CreateShippingRateMutationVariables = Exact<{
  input: ShippingPriceInput;
}>;


export type CreateShippingRateMutation = { __typename: 'Mutation', createShippingPrice: { __typename: 'ShippingPriceMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ShippingPrice', shippingZone: { __typename: 'ShippingZone', id: string, name: string, description: string, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } }>, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }, shippingMethod: { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } } } } };

export type DeleteShippingRateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DeleteShippingRateMutation = { __typename: 'Mutation', deleteShippingPrice: { __typename: 'ShippingPriceMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'ShippingPrice', shippingZone: { __typename: 'ShippingZone', id: string, name: string, description: string, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } }>, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } } };

export type BulkDeleteShippingRateMutationVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type BulkDeleteShippingRateMutation = { __typename: 'Mutation', deleteShippingPrices: { __typename: 'IDListMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ShippingMethodChannelListingUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ShippingMethodChannelListingInput;
}>;


export type ShippingMethodChannelListingUpdateMutation = { __typename: 'Mutation', updateShippingMethodChannelListing: { __typename: 'ShippingMethodChannelListingMutationResult', shippingMethod: { __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, price: { __typename: 'Money', currency: Currency, amount: number } }, errors?: Array<{ __typename: 'AccountError' } | { __typename: 'AppError' } | { __typename: 'BulkProductError' } | { __typename: 'BulkStockError' } | { __typename: 'ChannelError' } | { __typename: 'CheckoutError' } | { __typename: 'CollectionChannelListingError' } | { __typename: 'DiscountError' } | { __typename: 'Error' } | { __typename: 'GiftCardError' } | { __typename: 'GroupError' } | { __typename: 'MediaError' } | { __typename: 'OrderError' } | { __typename: 'PageError' } | { __typename: 'PaymentError' } | { __typename: 'ProductChannelListingError' } | { __typename: 'ProductError' } | { __typename: 'ProductWithoutVariantError' } | { __typename: 'ShippingError', channels?: Array<string> | null, message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError' } | { __typename: 'TaxClassCreateError' } | { __typename: 'TaxClassDeleteError' } | { __typename: 'TaxClassUpdateError' } | { __typename: 'TaxConfigurationUpdateError' } | { __typename: 'TaxCountryConfigurationUpdateError' } | { __typename: 'WarehouseError' }> | null } };

export type ShippingPriceExcludeProductMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: ShippingPriceExcludeProductsInput;
}>;


export type ShippingPriceExcludeProductMutation = { __typename: 'Mutation', excludeProductsFromShippingPrice: { __typename: 'ShippingMethodMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ShippingPriceRemoveProductFromExcludeMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  products: Array<Scalars['ID']['input']> | Scalars['ID']['input'];
}>;


export type ShippingPriceRemoveProductFromExcludeMutation = { __typename: 'Mutation', removeProductFromShippingPriceExclusionList: { __typename: 'ShippingPriceRemoveProductFromExcludeMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type ShippingZonesQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type ShippingZonesQuery = { __typename: 'Query', shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string, description: string, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ShippingZoneQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
}>;


export type ShippingZoneQuery = { __typename: 'Query', shippingZone: { __typename: 'ShippingZone', default: boolean, id: string, name: string, description: string, shippingMethods: Array<{ __typename: 'ShippingMethod', id: string, name: string, minimumDeliveryDays?: number | null, maximumDeliveryDays?: number | null, excludedProducts: { __typename: 'ProductConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, endCursor?: string | null, startCursor?: string | null }, edges: Array<{ __typename: 'ProductEdge', node: { __typename: 'AbstractProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null } | { __typename: 'ConcreteProduct', id: string, name: string, thumbnail?: { __typename: 'Image', url: string } | null } }> }, price: { __typename: 'Money', currency: Currency, amount: number } }>, channels: Array<{ __typename: 'Channel', id: string, name: string, currencyCode: string }>, warehouses: Array<{ __typename: 'Warehouse', id: string, name: string }>, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } };

export type ShippingZoneChannelsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ShippingZoneChannelsQuery = { __typename: 'Query', shippingZone: { __typename: 'ShippingZone', id: string, channels: Array<{ __typename: 'Channel', id: string, name: string, currencyCode: string }> } };

export type ChannelShippingZonesQueryVariables = Exact<{
  filter?: InputMaybe<ShippingZoneFilter>;
}>;


export type ChannelShippingZonesQuery = { __typename: 'Query', shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string } }> } };

export type ShippingZonesCountQueryVariables = Exact<{ [key: string]: never; }>;


export type ShippingZonesCountQuery = { __typename: 'Query', shippingZones: { __typename: 'ShippingZoneConnection', totalCount: number } };

export type ShopSettingsUpdateMutationVariables = Exact<{
  shopSettingsInput: ShopSettingsUpdateInput;
  addressInput: AddressUpdateInput;
}>;


export type ShopSettingsUpdateMutation = { __typename: 'Mutation', updateShopSettings: { __typename: 'SiteMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Site', customerSetPasswordUrl?: string | null, defaultMailSenderAddress: string, defaultMailSenderName: string, description: string, domain: string, name: string, reserveStockDurationAnonymousUser?: number | null, reserveStockDurationAuthenticatedUser?: number | null, maxItemCountPerCheckout?: number | null, companyAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }> } }, updateShopAddress: { __typename: 'SiteMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Site', companyAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null } } };

export type SiteSettingsQueryVariables = Exact<{ [key: string]: never; }>;


export type SiteSettingsQuery = { __typename: 'Query', shop: { __typename: 'Site', customerSetPasswordUrl?: string | null, defaultMailSenderAddress: string, defaultMailSenderName: string, description: string, domain: string, name: string, reserveStockDurationAnonymousUser?: number | null, reserveStockDurationAuthenticatedUser?: number | null, maxItemCountPerCheckout?: number | null, companyAddress?: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null } | null, countries: Array<{ __typename: 'Country', code: CountryCode, name: string }> } };

export type StaffMemberAddMutationVariables = Exact<{
  input: StaffCreationInput;
}>;


export type StaffMemberAddMutation = { __typename: 'Mutation', createStaffMember: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'User', id: string, email: string, firstName: string, isActive: boolean, lastName: string, groups: Array<{ __typename: 'Group', id: string, name: string, userCanManage: boolean }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } } };

export type StaffMemberUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: StaffUpdateInput;
}>;


export type StaffMemberUpdateMutation = { __typename: 'Mutation', updateStaffMember: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'User', id: string, email: string, firstName: string, isActive: boolean, lastName: string, groups: Array<{ __typename: 'Group', id: string, name: string, userCanManage: boolean }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } } };

export type StaffMemberDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type StaffMemberDeleteMutation = { __typename: 'Mutation', deleteStaffMember: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type StaffAvatarUpdateMutationVariables = Exact<{
  image: Scalars['Upload']['input'];
}>;


export type StaffAvatarUpdateMutation = { __typename: 'Mutation', updateUserAvatar: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'User', id: string, avatar?: { __typename: 'Image', url: string } | null } } };

export type StaffAvatarDeleteMutationVariables = Exact<{ [key: string]: never; }>;


export type StaffAvatarDeleteMutation = { __typename: 'Mutation', deleteUserAvatar: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'User', id: string, avatar?: { __typename: 'Image', url: string } | null } } };

export type ChangeStaffPasswordMutationVariables = Exact<{
  newPassword: Scalars['String']['input'];
  oldPassword: Scalars['String']['input'];
}>;


export type ChangeStaffPasswordMutation = { __typename: 'Mutation', changePassword: { __typename: 'UserMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type StaffListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<StaffUserFilter>;
  sort?: InputMaybe<UserOrderingInput>;
}>;


export type StaffListQuery = { __typename: 'Query', staffUsers: { __typename: 'UserConnection', edges: Array<{ __typename: 'UserEdge', cursor: string, node: { __typename: 'User', id: string, email: string, firstName: string, isActive: boolean, lastName: string, avatar?: { __typename: 'Image', url: string } | null } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type StaffMemberDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type StaffMemberDetailsQuery = { __typename: 'Query', user: { __typename: 'User', id: string, email: string, firstName: string, isActive: boolean, lastName: string, groups: Array<{ __typename: 'Group', id: string, name: string, userCanManage: boolean }>, userPermissions: Array<{ __typename: 'UserPermission', code: PermissionCode, name: string }>, avatar?: { __typename: 'Image', url: string } | null } };

export type TaxConfigurationUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: TaxConfigurationUpdateInput;
}>;


export type TaxConfigurationUpdateMutation = { __typename: 'Mutation', updateTaxConfiguration: { __typename: 'TaxConfigurationMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'TaxConfiguration', id: string, displayGrossPrices: boolean, pricesEnteredWithTax: boolean, chargeTaxes: boolean, taxCalculationStrategy?: TaxCalculationStrategy | null, channel: { __typename: 'Channel', id: string, name: string }, countries: Array<{ __typename: 'TaxConfigurationPerCountry', chargeTaxes: boolean, taxCalculationStrategy?: TaxCalculationStrategy | null, displayGrossPrices: boolean, country: { __typename: 'Country', name: string, code: CountryCode } }> } } };

export type TaxCountryConfigurationUpdateMutationVariables = Exact<{
  countryCode: CountryCode;
  updateTaxClassRates: Array<TaxClassRateInput> | TaxClassRateInput;
}>;


export type TaxCountryConfigurationUpdateMutation = { __typename: 'Mutation', updateTaxCountryConfiguration: { __typename: 'TaxCountryConfigurationMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'TaxCountryConfiguration', country: { __typename: 'Country', name: string, code: CountryCode }, taxClassCountryRates: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null }> } } };

export type TaxCountryConfigurationDeleteMutationVariables = Exact<{
  countryCode: CountryCode;
}>;


export type TaxCountryConfigurationDeleteMutation = { __typename: 'Mutation', deleteTaxCountryConfiguration: { __typename: 'TaxCountryConfigurationMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'TaxCountryConfiguration', country: { __typename: 'Country', name: string, code: CountryCode }, taxClassCountryRates: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null }> } } };

export type TaxClassUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: TaxClassUpdateInput;
}>;


export type TaxClassUpdateMutation = { __typename: 'Mutation', updateTaxClass: { __typename: 'TaxClassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'TaxClass', id: string, name: string, countries: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, country: { __typename: 'Country', name: string, code: CountryCode } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type TaxClassCreateMutationVariables = Exact<{
  input: TaxClassCreationInput;
}>;


export type TaxClassCreateMutation = { __typename: 'Mutation', createTaxClass: { __typename: 'TaxClassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'TaxClass', id: string, name: string, countries: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, country: { __typename: 'Country', name: string, code: CountryCode } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type TaxClassDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type TaxClassDeleteMutation = { __typename: 'Mutation', deleteTaxClass: { __typename: 'TaxClassMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type TaxConfigurationsListQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<TaxConfigurationFilter>;
}>;


export type TaxConfigurationsListQuery = { __typename: 'Query', taxConfigurations: { __typename: 'TaxConfigurationConnection', edges: Array<{ __typename: 'TaxConfigurationEdge', node: { __typename: 'TaxConfiguration', id: string, displayGrossPrices: boolean, pricesEnteredWithTax: boolean, chargeTaxes: boolean, taxCalculationStrategy?: TaxCalculationStrategy | null, channel: { __typename: 'Channel', id: string, name: string }, countries: Array<{ __typename: 'TaxConfigurationPerCountry', chargeTaxes: boolean, taxCalculationStrategy?: TaxCalculationStrategy | null, displayGrossPrices: boolean, country: { __typename: 'Country', name: string, code: CountryCode } }> } }> } };

export type TaxCountriesListQueryVariables = Exact<{ [key: string]: never; }>;


export type TaxCountriesListQuery = { __typename: 'Query', taxCountryConfigurations: Array<{ __typename: 'TaxCountryConfiguration', country: { __typename: 'Country', name: string, code: CountryCode }, taxClassCountryRates: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, taxClass?: { __typename: 'TaxClass', id: string, name: string } | null }> }> };

export type TaxClassesListQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<TaxClassFilter>;
  sortBy?: InputMaybe<TaxClassOrderingInput>;
}>;


export type TaxClassesListQuery = { __typename: 'Query', taxClasses: { __typename: 'TaxClassConnection', edges: Array<{ __typename: 'TaxClassEdge', node: { __typename: 'TaxClass', id: string, name: string, countries: Array<{ __typename: 'TaxClassCountryRate', rate: string | number, country: { __typename: 'Country', name: string, code: CountryCode } }>, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } }> } };

export type TaxClassAssignQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
}>;


export type TaxClassAssignQuery = { __typename: 'Query', taxClasses: { __typename: 'TaxClassConnection', edges: Array<{ __typename: 'TaxClassEdge', node: { __typename: 'TaxClass', id: string, name: string } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, endCursor?: string | null } } };

export type UpdateProductTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: TranslationInput;
  language: LanguageCode;
}>;


export type UpdateProductTranslationsMutation = { __typename: 'Mutation', translateProduct: { __typename: 'ProductMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'AbstractProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null } | null } | { __typename: 'ConcreteProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null } | null } } };

export type UpdateCategoryTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: TranslationInput;
  language: LanguageCode;
}>;


export type UpdateCategoryTranslationsMutation = { __typename: 'Mutation', translateCategory: { __typename: 'CategoryMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Category', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string, translation?: { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, language?: { __typename: 'LanguageDisplay', language: string } | null } | null } } };

export type UpdateCollectionTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: TranslationInput;
  language: LanguageCode;
}>;


export type UpdateCollectionTranslationsMutation = { __typename: 'Mutation', translateCollection: { __typename: 'CollectionMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Collection', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string, translation?: { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, language?: { __typename: 'LanguageDisplay', language: string } | null } | null } } };

export type UpdatePageTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: PageTranslationInput;
  language: LanguageCode;
}>;


export type UpdatePageTranslationsMutation = { __typename: 'Mutation', translatePage: { __typename: 'PageMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Page', translation?: { __typename: 'PageTranslation', id: string, content: string, seoDescription: string, seoTitle: string, title: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, page: { __typename: 'Page', id: string, content: string, seoDescription: string, seoTitle: string, title: string } } | null } } };

export type UpdateAttributeTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: NameTranslationInput;
  language: LanguageCode;
}>;


export type UpdateAttributeTranslationsMutation = { __typename: 'Mutation', translateAttribute: { __typename: 'AttributeMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Attribute', id: string, name: string, translation: { __typename: 'AttributeTranslation', id: string, name: string } } } };

export type UpdateMenuItemTranslationsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: NameTranslationInput;
  language: LanguageCode;
}>;


export type UpdateMenuItemTranslationsMutation = { __typename: 'Mutation', translateMenuItem: { __typename: 'MenuItemMutationResult', errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string } | { __typename: 'AppError', field?: string | null, message: string } | { __typename: 'BulkProductError', field?: string | null, message: string } | { __typename: 'BulkStockError', field?: string | null, message: string } | { __typename: 'ChannelError', field?: string | null, message: string } | { __typename: 'CheckoutError', field?: string | null, message: string } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string } | { __typename: 'DiscountError', field?: string | null, message: string } | { __typename: 'Error', field?: string | null, message: string } | { __typename: 'GiftCardError', field?: string | null, message: string } | { __typename: 'GroupError', field?: string | null, message: string } | { __typename: 'MediaError', field?: string | null, message: string } | { __typename: 'OrderError', field?: string | null, message: string } | { __typename: 'PageError', field?: string | null, message: string } | { __typename: 'PaymentError', field?: string | null, message: string } | { __typename: 'ProductChannelListingError', field?: string | null, message: string } | { __typename: 'ProductError', field?: string | null, message: string } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string } | { __typename: 'ShippingError', field?: string | null, message: string } | { __typename: 'StaffError', field?: string | null, message: string } | { __typename: 'TaxClassCreateError', field?: string | null, message: string } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string } | { __typename: 'WarehouseError', field?: string | null, message: string }> | null, result: { __typename: 'MenuItem', id: string, name: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', language: string } | null } | null } } };

export type CategoryTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type CategoryTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, language?: { __typename: 'LanguageDisplay', language: string } | null, category: { __typename: 'Category', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string } } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type CollectionTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, collection: { __typename: 'Collection', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string }, language?: { __typename: 'LanguageDisplay', language: string } | null } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ProductTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProductTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation', id: string, seoTitle: string, seoDescription: string, name: string, description?: string | null, product: { __typename: 'AbstractProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string } | { __typename: 'ConcreteProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string }, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type PageTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type PageTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation', id: string, content: string, seoDescription: string, seoTitle: string, title: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, page: { __typename: 'Page', id: string, content: string, seoDescription: string, seoTitle: string, title: string } } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type VoucherTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type VoucherTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, voucher: { __typename: 'Voucher', id: string, name: string } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type SaleTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type SaleTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, sale: { __typename: 'Sale', id: string, name: string } } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type AttributeTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type AttributeTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation', id: string, name: string, attribute: { __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType } } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ShippingMethodTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type ShippingMethodTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, shippingMethod: { __typename: 'ShippingMethod', id: string } } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type MenuItemTranslationsQueryVariables = Exact<{
  language: LanguageCode;
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
}>;


export type MenuItemTranslationsQuery = { __typename: 'Query', translations: { __typename: 'TranslatableItemConnection', edges: Array<{ __typename: 'TranslatableItemEdge', node: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', language: string } | null, menuItem: { __typename: 'MenuItem', id: string, name: string } } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type ProductTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type ProductTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation', id: string, seoTitle: string, seoDescription: string, name: string, description?: string | null, product: { __typename: 'AbstractProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string } | { __typename: 'ConcreteProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string }, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type ProductVariantListQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ProductVariantListQuery = { __typename: 'Query', product: { __typename: 'AbstractProduct', id: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string }> } | { __typename: 'ConcreteProduct', id: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string }> } };

export type ProductVariantTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type ProductVariantTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation', id: string, seoTitle: string, seoDescription: string, name: string, description?: string | null, product: { __typename: 'AbstractProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string } | { __typename: 'ConcreteProduct', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string }, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type CategoryTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type CategoryTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, language?: { __typename: 'LanguageDisplay', language: string } | null, category: { __typename: 'Category', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string } } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type CollectionTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type CollectionTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation', id: string, description?: string | null, name: string, seoDescription: string, seoTitle: string, collection: { __typename: 'Collection', id: string, name: string, description?: string | null, seoDescription: string, seoTitle: string }, language?: { __typename: 'LanguageDisplay', language: string } | null } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type PageTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type PageTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation', id: string, content: string, seoDescription: string, seoTitle: string, title: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, page: { __typename: 'Page', id: string, content: string, seoDescription: string, seoTitle: string, title: string } } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type SaleTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type SaleTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, sale: { __typename: 'Sale', id: string, name: string } } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type VoucherTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type VoucherTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, voucher: { __typename: 'Voucher', id: string, name: string } } };

export type AttributeTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
  firstValues?: InputMaybe<Scalars['Int']['input']>;
  afterValues?: InputMaybe<Scalars['String']['input']>;
  lastValues?: InputMaybe<Scalars['Int']['input']>;
  beforeValues?: InputMaybe<Scalars['String']['input']>;
}>;


export type AttributeTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation', id: string, name: string, attribute: { __typename: 'Attribute', id: string, name: string, inputType: AttributeInputType, withChoices: boolean, values: { __typename: 'ValueConnection', pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'ValueEdge', cursor: string, node: { __typename: 'Value', id: string, name: string, plainText?: string | null, richText?: string | null, inputType: AttributeInputType, translation?: { __typename: 'ValueTranslation', id: string, name: string, plainText: string, richText: string } | null } }> } } } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type ShippingMethodTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type ShippingMethodTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation' } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation', id: string, name: string, description?: string | null, language?: { __typename: 'LanguageDisplay', code: LanguageCode, language: string } | null, shippingMethod: { __typename: 'ShippingMethod', id: string } } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type MenuItemTranslationDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  language: LanguageCode;
}>;


export type MenuItemTranslationDetailsQuery = { __typename: 'Query', translation: { __typename: 'AttributeTranslation' } | { __typename: 'CategoryTranslation' } | { __typename: 'CollectionTranslation' } | { __typename: 'MenuItemTranslation', id: string, name: string, language?: { __typename: 'LanguageDisplay', language: string } | null, menuItem: { __typename: 'MenuItem', id: string, name: string } } | { __typename: 'PageTranslation' } | { __typename: 'ProductTranslation' } | { __typename: 'SaleTranslation' } | { __typename: 'ShippingMethodTranslation' } | { __typename: 'ValueTranslation' } | { __typename: 'VoucherTranslation' } };

export type UpdateMetadataMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: Array<MetadataInput> | MetadataInput;
  keysToDelete: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type UpdateMetadataMutation = { __typename: 'Mutation', updateMetadata: { __typename: 'ObjectWithMetadataMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'AbstractProduct', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'App', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Attribute', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Category', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Checkout', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'CheckoutLine', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Collection', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ConcreteProduct', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'DigitalContent', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Fulfillment', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'GiftCard', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Invoice', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'MediaItem', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Menu', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'MenuItem', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Order', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'OrderLine', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Page', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'PageKlass', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Payment', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ProductKlass', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Sale', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ShippingMethod', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ShippingZone', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'TaxClass', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'TaxConfiguration', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'TransactionItem', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'User', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Voucher', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Warehouse', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } }, deleteMetadata: { __typename: 'ObjectWithMetadataMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'AbstractProduct', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'App', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Attribute', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Category', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Checkout', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'CheckoutLine', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Collection', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ConcreteProduct', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'DigitalContent', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Fulfillment', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'GiftCard', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Invoice', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'MediaItem', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Menu', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'MenuItem', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Order', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'OrderLine', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Page', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'PageKlass', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Payment', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ProductKlass', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Sale', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ShippingMethod', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'ShippingZone', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'TaxClass', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'TaxConfiguration', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'TransactionItem', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'User', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Voucher', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } | { __typename: 'Warehouse', id: string, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> } } };

export type WarehouseDeleteMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type WarehouseDeleteMutation = { __typename: 'Mutation', deleteWarehouse: { __typename: 'WarehouseMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null } };

export type WarehouseCreateMutationVariables = Exact<{
  input: WarehouseCreationInput;
}>;


export type WarehouseCreateMutation = { __typename: 'Mutation', createWarehouse: { __typename: 'WarehouseMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Warehouse', isPrivate: boolean, clickAndCollectOption: WarehouseClickAndCollectOption, id: string, name: string, address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string } }> } } } };

export type WarehouseUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  input: WarehouseUpdateInput;
}>;


export type WarehouseUpdateMutation = { __typename: 'Mutation', updateWarehouse: { __typename: 'WarehouseMutationResult', errors?: Array<{ __typename: 'AccountError', message: string, field?: string | null, code?: string | null } | { __typename: 'AppError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'BulkStockError', message: string, field?: string | null, code?: string | null } | { __typename: 'ChannelError', message: string, field?: string | null, code?: string | null } | { __typename: 'CheckoutError', message: string, field?: string | null, code?: string | null } | { __typename: 'CollectionChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'DiscountError', message: string, field?: string | null, code?: string | null } | { __typename: 'Error', message: string, field?: string | null, code?: string | null } | { __typename: 'GiftCardError', message: string, field?: string | null, code?: string | null } | { __typename: 'GroupError', message: string, field?: string | null, code?: string | null } | { __typename: 'MediaError', message: string, field?: string | null, code?: string | null } | { __typename: 'OrderError', message: string, field?: string | null, code?: string | null } | { __typename: 'PageError', message: string, field?: string | null, code?: string | null } | { __typename: 'PaymentError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductChannelListingError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductError', message: string, field?: string | null, code?: string | null } | { __typename: 'ProductWithoutVariantError', message: string, field?: string | null, code?: string | null } | { __typename: 'ShippingError', message: string, field?: string | null, code?: string | null } | { __typename: 'StaffError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassCreateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassDeleteError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxClassUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', message: string, field?: string | null, code?: string | null } | { __typename: 'WarehouseError', message: string, field?: string | null, code?: string | null }> | null, result: { __typename: 'Warehouse', isPrivate: boolean, clickAndCollectOption: WarehouseClickAndCollectOption, id: string, name: string, address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string } }> } } } };

export type WarehouseListQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<WarehouseFilter>;
  sort?: InputMaybe<WarehouseOrderingInput>;
}>;


export type WarehouseListQuery = { __typename: 'Query', warehouses: { __typename: 'WarehouseConnection', edges: Array<{ __typename: 'WarehouseEdge', node: { __typename: 'Warehouse', id: string, name: string, shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string } }> } } }>, pageInfo: { __typename: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type WarehouseDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type WarehouseDetailsQuery = { __typename: 'Query', warehouse: { __typename: 'Warehouse', isPrivate: boolean, clickAndCollectOption: WarehouseClickAndCollectOption, id: string, name: string, address: { __typename: 'Address', id: string, phone?: string | null, firstName?: string | null, lastName?: string | null, companyName?: string | null, streetAddress1: string, streetAddress2?: string | null, city: string, cityArea?: string | null, postalCode: string, isDefaultBillingAddress?: boolean | null, isDefaultShippingAddress?: boolean | null, countryArea?: string | null, country: { __typename: 'Country', code: CountryCode, name: string }, coordinates?: { __typename: 'Coordinates', latitude: number, longitude: number } | null }, shippingZones: { __typename: 'ShippingZoneConnection', edges: Array<{ __typename: 'ShippingZoneEdge', node: { __typename: 'ShippingZone', id: string, name: string } }> } } };

export type WarehousesCountQueryVariables = Exact<{ [key: string]: never; }>;


export type WarehousesCountQuery = { __typename: 'Query', warehouses: { __typename: 'WarehouseConnection', totalCount: number } };

export type ShopSettingsFragment = { __typename: 'Site', allowedStates: Array<StateCode>, defaultWeightUnit: WeightUnit, domain: string, name: string, trackInventoryByDefault: boolean, maxItemCountPerCheckout?: number | null, countries: Array<{ __typename: 'Country', name: string, code: CountryCode }>, defaultCountry: { __typename: 'Country', name: string, code: CountryCode }, languages: Array<{ __typename: 'LanguageDisplay', code: LanguageCode, language: string }>, logo?: { __typename: 'Image', url: string, alt: string, height?: number | null, width?: number | null } | null };

export type ShopInfoQueryVariables = Exact<{ [key: string]: never; }>;


export type ShopInfoQuery = { __typename: 'Query', shop: { __typename: 'Site', id: string, allowedStates: Array<StateCode>, defaultWeightUnit: WeightUnit, domain: string, name: string, trackInventoryByDefault: boolean, maxItemCountPerCheckout?: number | null, permissions: Array<{ __typename: 'Permission', code: PermissionCode, name: string }>, countries: Array<{ __typename: 'Country', name: string, code: CountryCode }>, defaultCountry: { __typename: 'Country', name: string, code: CountryCode }, languages: Array<{ __typename: 'LanguageDisplay', code: LanguageCode, language: string }>, logo?: { __typename: 'Image', url: string, alt: string, height?: number | null, width?: number | null } | null } };

export type MainMenuQueryVariables = Exact<{
  channel: Scalars['String']['input'];
}>;


export type MainMenuQuery = { __typename: 'Query', menu: { __typename: 'Menu', id: string, items: Array<{ __typename: 'MenuItem', id: string, name: string, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, children?: Array<{ __typename: 'MenuItem', id: string, name: string, level: number, url: string, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null, translation?: { __typename: 'MenuItemTranslation', id: string, name: string } | null, category?: { __typename: 'Category', id: string, slug: string } | null, collection?: { __typename: 'Collection', id: string, slug: string } | null, page?: { __typename: 'Page', id: string, slug: string } | null }> | null }> } };

export type GalleryMediaQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GalleryMediaQuery = { __typename: 'Query', media: { __typename: 'MediaItemConnection', totalCount: number, edges: Array<{ __typename: 'MediaItemEdge', node: { __typename: 'MediaItem', id: string, type: MediaType, title: string, alt: string, width?: number | null, height?: number | null, aspectRatio?: number | null, placeholder?: string | null, file: { __typename: 'File', url: string, contentType: string } } }>, pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null } } };

export type CreateCheckoutMutationVariables = Exact<{
  email?: InputMaybe<Scalars['String']['input']>;
  lines: Array<CheckoutLineInput> | CheckoutLineInput;
  channel: Scalars['String']['input'];
}>;


export type CreateCheckoutMutation = { __typename: 'Mutation', createCheckout: { __typename: 'CheckoutMutationResult', result: { __typename: 'Checkout', id: string }, errors?: Array<{ __typename: 'AccountError', field?: string | null, message: string, code?: string | null } | { __typename: 'AppError', field?: string | null, message: string, code?: string | null } | { __typename: 'BulkProductError', field?: string | null, message: string, code?: string | null } | { __typename: 'BulkStockError', field?: string | null, message: string, code?: string | null } | { __typename: 'ChannelError', field?: string | null, message: string, code?: string | null } | { __typename: 'CheckoutError', field?: string | null, message: string, code?: string | null } | { __typename: 'CollectionChannelListingError', field?: string | null, message: string, code?: string | null } | { __typename: 'DiscountError', field?: string | null, message: string, code?: string | null } | { __typename: 'Error', field?: string | null, message: string, code?: string | null } | { __typename: 'GiftCardError', field?: string | null, message: string, code?: string | null } | { __typename: 'GroupError', field?: string | null, message: string, code?: string | null } | { __typename: 'MediaError', field?: string | null, message: string, code?: string | null } | { __typename: 'OrderError', field?: string | null, message: string, code?: string | null } | { __typename: 'PageError', field?: string | null, message: string, code?: string | null } | { __typename: 'PaymentError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductChannelListingError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductError', field?: string | null, message: string, code?: string | null } | { __typename: 'ProductWithoutVariantError', field?: string | null, message: string, code?: string | null } | { __typename: 'ShippingError', field?: string | null, message: string, code?: string | null } | { __typename: 'StaffError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassCreateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassDeleteError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxClassUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxConfigurationUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'TaxCountryConfigurationUpdateError', field?: string | null, message: string, code?: string | null } | { __typename: 'WarehouseError', field?: string | null, message: string, code?: string | null }> | null } };

export type ProductBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
  channel: Scalars['String']['input'];
}>;


export type ProductBySlugQuery = { __typename: 'Query', product: { __typename: 'AbstractProduct', id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, pricing?: { __typename: 'ProductPricingInfo', priceRange: { __typename: 'TaxedMoneyRange', start: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } } | null, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }>, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null } | { __typename: 'ConcreteProduct', quantityAvailable?: number | null, id: string, name: string, slug: string, description?: string | null, seoDescription: string, seoTitle: string, isAvailableForPurchase: boolean, ancestors: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, variants: Array<{ __typename: 'AbstractProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null } | { __typename: 'ConcreteProduct', id: string, name: string, slug: string, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null }> }>, pricing?: { __typename: 'ProductPricingInfo', price: { __typename: 'TaxedMoney', gross: { __typename: 'Money', currency: Currency, amount: number } } } | null, translation?: { __typename: 'ProductTranslation', id: string, description?: string | null, name: string } | null, attributes: Array<{ __typename: 'Attribute', availableInGrid: boolean, inputType: AttributeInputType, entityType?: AttributeEntityType | null, unit: MeasurementUnit, storefrontSearchPosition: number, valueRequired: boolean, id: string, name: string, slug: string, type: AttributeType, visibleInStorefront: boolean, filterableInDashboard: boolean, filterableInStorefront: boolean, metadata: Array<{ __typename: 'MetadataItem', key: string, value: string }>, privateMetadata: Array<{ __typename: 'MetadataItem', key: string, value: string }> }>, category?: { __typename: 'Category', name: string, id: string, slug: string, translation?: { __typename: 'CategoryTranslation', id: string, name: string } | null } | null, media: Array<{ __typename: 'ProductMediaItem', id: string, alt: string, sortOrder: number, url: string, type: MediaType, oembedData: string }>, thumbnail?: { __typename: 'Image', url: string, alt: string } | null } };

export const TransactionActionPayloadFragmentDoc = gql`
    fragment TransactionActionPayload on TransactionActionRequest {
  transaction {
    id
    reference
    type
    amountAuthorized {
      amount
      currency
    }
    amountCharged {
      amount
    }
    amountVoided {
      amount
    }
    amountRefunded {
      amount
    }
  }
  action {
    actionType
    amount
  }
}
    `;
export const AttributeFilterChoiceFragmentDoc = gql`
    fragment AttributeFilterChoice on Value {
  id
  name
  slug
  translation {
    name
  }
}
    `;
export const AttributeFilterFragmentDoc = gql`
    fragment AttributeFilter on Attribute {
  id
  inputType
  name
  translation {
    id
    name
  }
  slug
  withChoices
  values(first: 20) {
    edges {
      node {
        ...AttributeFilterChoice
      }
      cursor
    }
  }
}
    `;
export const CategoryBasicFragmentDoc = gql`
    fragment CategoryBasic on Category {
  id
  name
  slug
  translation {
    id
    name
  }
}
    `;
export const ImageFragmentDoc = gql`
    fragment Image on Image {
  url
  alt
}
    `;
export const MetadataItemFragmentDoc = gql`
    fragment MetadataItem on MetadataItem {
  key
  value
}
    `;
export const MetadataFragmentDoc = gql`
    fragment Metadata on ObjectWithMetadata {
  metadata {
    ...MetadataItem
  }
  privateMetadata {
    ...MetadataItem
  }
}
    `;
export const CategoryDetailsFragmentDoc = gql`
    fragment CategoryDetails on Category {
  id
  ...CategoryBasic
  seoTitle
  seoDescription
  description
  translation {
    id
    description
  }
  backgroundImage {
    ...Image
  }
  ancestors(first: 5) {
    edges {
      node {
        ...CategoryBasic
      }
    }
  }
  ...Metadata
}
    `;
export const CheckoutErrorFragmentDoc = gql`
    fragment CheckoutError on CheckoutError {
  message
  field
  code
}
    `;
export const AddressFragmentDoc = gql`
    fragment Address on Address {
  id
  phone
  firstName
  lastName
  companyName
  streetAddress1
  streetAddress2
  city
  cityArea
  postalCode
  isDefaultBillingAddress
  isDefaultShippingAddress
  countryArea
  country {
    code
    name
  }
  coordinates {
    latitude
    longitude
  }
}
    `;
export const MoneyFragmentDoc = gql`
    fragment Money on Money {
  currency
  amount
}
    `;
export const FulfillmentMethodFragmentDoc = gql`
    fragment FulfillmentMethod on FulfillmentMethod {
  ... on ShippingMethod {
    id
    name
    description
    translation {
      id
      name
      description
    }
    price {
      ...Money
    }
    minimumDeliveryDays
    maximumDeliveryDays
  }
  ... on Warehouse {
    id
    name
  }
}
    `;
export const CheckoutLineFragmentDoc = gql`
    fragment CheckoutLine on CheckoutLine {
  id
  totalPrice {
    gross {
      ...Money
    }
  }
  unitPrice {
    gross {
      ...Money
    }
  }
  undiscountedUnitPrice {
    ...Money
  }
  product {
    id
    name
    translation {
      id
      name
    }
    slug
    thumbnail {
      ...Image
    }
    media {
      alt
      type
      url(size: 72)
    }
    parent {
      id
      name
    }
    attributes(variantSelection: ALL) {
      values {
        edges {
          node {
            name
          }
        }
      }
    }
    pricing {
      price {
        gross {
          ...Money
        }
      }
    }
    translation {
      id
      name
    }
    media {
      alt
      type
      url(size: 72)
    }
  }
  quantity
}
    `;
export const GiftCardFragmentDoc = gql`
    fragment GiftCard on GiftCard {
  displayCode
  id
  currentBalance {
    ...Money
  }
}
    `;
export const PointOfContactFragmentDoc = gql`
    fragment PointOfContact on PointOfContact {
  id
  firstName
  lastName
  email
  phone
  notes
}
    `;
export const CheckoutFragmentDoc = gql`
    fragment Checkout on Checkout {
  id
  customerEmail
  customerFirstName
  customerLastName
  customerPhone
  voucherCode
  billingAddress {
    ...Address
  }
  shippingAddress {
    ...Address
  }
  fulfillmentMethod {
    ...FulfillmentMethod
  }
  isShippingRequired
  availableShippingMethods {
    ...FulfillmentMethod
  }
  availablePaymentGateways {
    id
    name
    config {
      field
      value
    }
  }
  lines {
    ...CheckoutLine
  }
  discount {
    ...Money
  }
  discountName
  translatedDiscountName
  giftCards {
    ...GiftCard
  }
  subtotalPrice {
    gross {
      ...Money
    }
    net {
      ...Money
    }
    tax {
      ...Money
    }
  }
  shippingPrice {
    gross {
      ...Money
    }
  }
  totalPrice {
    gross {
      ...Money
    }
    tax {
      ...Money
    }
  }
  channel {
    id
    slug
  }
  user {
    id
    email
    firstName
    lastName
  }
  fulfillmentDeadline
  pointsOfContact {
    ...PointOfContact
  }
  validationErrors {
    field
    message
  }
}
    `;
export const CollectionBasicFragmentDoc = gql`
    fragment CollectionBasic on Collection {
  id
  name
  translation {
    id
    name
  }
  slug
}
    `;
export const CollectionDetailsFragmentDoc = gql`
    fragment CollectionDetails on Collection {
  id
  ...CollectionBasic
  seoTitle
  seoDescription
  description
  translation {
    id
    description
  }
  backgroundImage {
    ...Image
  }
  ...Metadata
  channelListings {
    id
    isPublished
    publishedAt
    channel {
      id
      name
    }
  }
}
    `;
export const ErrorDetailsFragmentDoc = gql`
    fragment ErrorDetails on CheckoutError {
  field
  message
  code
}
    `;
export const HomepageBlockFragmentDoc = gql`
    fragment HomepageBlock on MenuItem {
  id
  name
  translation {
    id
    name
  }
  category {
    id
    slug
  }
  collection {
    id
    slug
  }
  page {
    id
    slug
  }
  page {
    id
    content
    title
    translation {
      content
      title
    }
  }
}
    `;
export const MenuItemFragmentDoc = gql`
    fragment MenuItem on MenuItem {
  id
  name
  level
  translation {
    id
    name
  }
  category {
    id
    slug
  }
  collection {
    id
    slug
  }
  page {
    id
    slug
  }
  url
}
    `;
export const MenuItemWithChildrenFragmentDoc = gql`
    fragment MenuItemWithChildren on MenuItem {
  id
  name
  translation {
    id
    name
  }
  category {
    id
    slug
  }
  collection {
    id
    slug
  }
  page {
    id
    slug
  }
  children {
    ...MenuItem
    children {
      ...MenuItem
    }
  }
  url
}
    `;
export const ShippingMethodFragmentDoc = gql`
    fragment ShippingMethod on ShippingMethod {
  id
  name
  minimumDeliveryDays
  maximumDeliveryDays
  price {
    ...Money
  }
}
    `;
export const WarehouseFragmentDoc = gql`
    fragment Warehouse on Warehouse {
  id
  name
}
    `;
export const StockFragmentDoc = gql`
    fragment Stock on Stock {
  id
  quantity
  quantityAllocated
  warehouse {
    ...Warehouse
  }
}
    `;
export const OrderLineFragmentDoc = gql`
    fragment OrderLine on OrderLine {
  id
  isShippingRequired
  productName
  quantity
  taxRate
  quantity
  quantityFulfilled
  quantityToFulfill
  allocations {
    id
    quantity
    warehouse {
      id
      name
    }
  }
  product {
    id
    name
    sku
    preorder {
      endDate
    }
    category {
      name
    }
    productKlass {
      isDigital
      kind
    }
    trackInventory
    stocks {
      ...Stock
    }
  }
  unitPrice {
    gross {
      ...Money
    }
  }
  undiscountedUnitPrice {
    gross {
      ...Money
    }
  }
  totalPrice {
    gross {
      ...Money
    }
    tax {
      ...Money
    }
  }
  thumbnail(size: 64) {
    alt
    url
  }
}
    `;
export const OrderFragmentDoc = gql`
    fragment Order on Order {
  id
  createdAt
  number
  status
  userEmail
  isPaid
  shippingTaxRate
  shippingMethodName
  privateMetafield(key: "payment")
  discounts {
    type
    name
    amount {
      ...Money
    }
  }
  shippingAddress {
    ...Address
  }
  billingAddress {
    ...Address
  }
  fulfillmentMethod {
    ...ShippingMethod
  }
  total {
    currency
    gross {
      ...Money
    }
    tax {
      ...Money
    }
  }
  voucher {
    code
  }
  shippingPrice {
    gross {
      ...Money
    }
    net {
      ...Money
    }
    tax {
      ...Money
    }
  }
  subtotal {
    gross {
      ...Money
    }
    net {
      ...Money
    }
  }
  lines {
    ...OrderLine
  }
  totalBalance {
    ...Money
  }
  totalCaptured {
    ...Money
  }
}
    `;
export const ProductCardFragmentDoc = gql`
    fragment ProductCard on Product {
  id
  slug
  name
  translation {
    id
    name
  }
  thumbnail {
    ...Image
  }
  category {
    id
    name
    translation {
      id
      name
    }
  }
  media {
    url
    alt
    type
  }
  attributes {
    slug
    values {
      edges {
        node {
          name
        }
      }
    }
  }
}
    `;
export const AttributeFragmentDoc = gql`
    fragment Attribute on Attribute {
  id
  name
  slug
  type
  visibleInStorefront
  filterableInDashboard
  filterableInStorefront
  unit
  inputType
}
    `;
export const AttributeDetailsFragmentDoc = gql`
    fragment AttributeDetails on Attribute {
  ...Attribute
  ...Metadata
  availableInGrid
  inputType
  entityType
  unit
  storefrontSearchPosition
  valueRequired
}
    `;
export const ProductMediaItemFragmentDoc = gql`
    fragment ProductMediaItem on ProductMediaItem {
  id
  alt
  sortOrder
  url
  type
  oembedData
}
    `;
export const BaseProductDetailsFragmentDoc = gql`
    fragment BaseProductDetails on Product {
  id
  name
  slug
  description
  seoDescription
  seoTitle
  isAvailableForPurchase
  translation {
    id
    description
    name
  }
  attributes {
    ...AttributeDetails
  }
  category {
    ...CategoryBasic
  }
  media {
    ...ProductMediaItem
  }
  thumbnail {
    ...Image
  }
  category {
    name
  }
}
    `;
export const ProductVariantFragmentDoc = gql`
    fragment ProductVariant on Product {
  id
  name
  slug
  pricing {
    price {
      gross {
        ...Money
      }
    }
  }
}
    `;
export const ProductAncestorFragmentDoc = gql`
    fragment ProductAncestor on AbstractProduct {
  id
  name
  slug
  variants {
    ...ProductVariant
  }
}
    `;
export const ConcreteProductDetailsFragmentDoc = gql`
    fragment ConcreteProductDetails on ConcreteProduct {
  ...BaseProductDetails
  quantityAvailable
  ancestors {
    ...ProductAncestor
  }
  pricing {
    price {
      gross {
        ...Money
      }
    }
  }
}
    `;
export const AbstractProductDetailsFragmentDoc = gql`
    fragment AbstractProductDetails on AbstractProduct {
  ...BaseProductDetails
  pricing {
    priceRange {
      start {
        gross {
          ...Money
        }
      }
    }
  }
  ancestors {
    ...ProductAncestor
  }
  variants {
    ...ProductVariant
  }
}
    `;
export const ProductDetailsFragmentDoc = gql`
    fragment ProductDetails on Product {
  ... on ConcreteProduct {
    ...ConcreteProductDetails
  }
  ... on AbstractProduct {
    ...AbstractProductDetails
  }
}
    `;
export const SelectedAttributeDetailsFragmentDoc = gql`
    fragment SelectedAttributeDetails on Attribute {
  id
  name
  translation {
    id
    name
  }
  type
  unit
  values {
    edges {
      node {
        id
        name
        translation {
          id
          name
          richText
        }
        value
      }
    }
  }
}
    `;
export const TransactionEventFragmentDoc = gql`
    fragment TransactionEvent on TransactionEvent {
  name
  reference
}
    `;
export const TransactionItemFragmentDoc = gql`
    fragment TransactionItem on TransactionItem {
  id
  reference
  amountVoided {
    ...Money
  }
  amountRefunded {
    ...Money
  }
  amountCharged {
    ...Money
  }
  amountAuthorized {
    ...Money
  }
  events {
    ...TransactionEvent
  }
}
    `;
export const UserPermissionFragmentDoc = gql`
    fragment UserPermission on UserPermission {
  code
  name
}
    `;
export const UserBaseFragmentDoc = gql`
    fragment UserBase on User {
  id
  email
  firstName
  lastName
  isStaff
  userPermissions {
    ...UserPermission
  }
  avatar {
    url
  }
}
    `;
export const UserDetailsFragmentDoc = gql`
    fragment UserDetails on User {
  ...UserBase
  metadata {
    key
    value
  }
  defaultShippingAddress {
    ...Address
  }
  defaultBillingAddress {
    ...Address
  }
  addresses {
    ...Address
  }
}
    `;
export const ValidationRulesFragmentDoc = gql`
    fragment ValidationRules on AddressValidationData {
  addressFormat
  allowedFields
  requiredFields
  countryAreaType
  postalCodeType
  cityType
  countryAreaChoices {
    raw
    verbose
  }
}
    `;
export const ActivityFragmentDoc = gql`
    fragment Activity on OrderEvent {
  date
  type
  relatedOrder {
    id
    number
  }
  user {
    id
    email
    firstName
    lastName
  }
  message
}
    `;
export const TopProductFragmentDoc = gql`
    fragment TopProduct on Product {
  id
  name
  thumbnail {
    url
  }
  revenue(period: TODAY) {
    gross {
      amount
      currency
    }
  }
  attributes {
    values {
      edges {
        node {
          id
          name
        }
      }
    }
  }
  quantityOrdered
}
    `;
export const WebhookFragmentDoc = gql`
    fragment Webhook on Webhook {
  id
  name
  isActive
  app {
    id
    name
  }
}
    `;
export const AppFragmentDoc = gql`
    fragment App on App {
  id
  name
  createdAt
  isActive
  type
  homepageUrl
  appUrl
  manifestUrl
  configurationUrl
  supportUrl
  version
  accessToken
  privateMetadata {
    key
    value
  }
  metadata {
    key
    value
  }
  tokens {
    authToken
    id
    name
  }
  webhooks {
    ...Webhook
  }
}
    `;
export const AppPermissionFragmentDoc = gql`
    fragment AppPermission on Permission {
  name
  code
}
    `;
export const AppListItemFragmentDoc = gql`
    fragment AppListItem on App {
  id
  name
  isActive
  type
  appUrl
  manifestUrl
  permissions {
    ...AppPermission
  }
}
    `;
export const AvailableAttributeFragmentDoc = gql`
    fragment AvailableAttribute on Attribute {
  id
  name
  slug
}
    `;
export const UserFragmentDoc = gql`
    fragment User on User {
  id
  email
  firstName
  lastName
  isStaff
  userPermissions {
    ...UserPermission
  }
  avatar {
    url
  }
}
    `;
export const CategoryFragmentDoc = gql`
    fragment Category on Category {
  id
  name
  children {
    totalCount
  }
  products {
    totalCount
  }
}
    `;
export const ChannelErrorFragmentDoc = gql`
    fragment ChannelError on ChannelError {
  code
  field
  message
}
    `;
export const ChannelFragmentDoc = gql`
    fragment Channel on Channel {
  id
  name
  slug
  countries {
    code
  }
  isActive
  currencyCode
  defaultCountry {
    code
    name
  }
  stockSettings {
    allocationStrategy
  }
}
    `;
export const ChannelDetailsFragmentDoc = gql`
    fragment ChannelDetails on Channel {
  ...Channel
  hasOrders
  warehouses {
    ...Warehouse
  }
}
    `;
export const CollectionFragmentDoc = gql`
    fragment Collection on Collection {
  id
  name
  channelListings {
    id
    isPublished
    publishedAt
    channel {
      id
      name
    }
  }
}
    `;
export const ChannelListingProductWithoutPricingFragmentDoc = gql`
    fragment ChannelListingProductWithoutPricing on ProductChannelListing {
  id
  isPublished
  publishedAt
  isAvailableForPurchase
  visibleInListings
  channel {
    id
    name
    currencyCode
  }
}
    `;
export const CollectionProductFragmentDoc = gql`
    fragment CollectionProduct on Product {
  id
  name
  productKlass {
    id
    name
  }
  thumbnail {
    url
  }
  channelListings {
    ...ChannelListingProductWithoutPricing
  }
}
    `;
export const CustomerFragmentDoc = gql`
    fragment Customer on User {
  id
  email
  firstName
  lastName
}
    `;
export const CustomerDetailsFragmentDoc = gql`
    fragment CustomerDetails on User {
  ...Customer
  ...Metadata
  dateJoined
  lastLogin
  defaultShippingAddress {
    ...Address
  }
  defaultBillingAddress {
    ...Address
  }
  note
  isActive
}
    `;
export const CustomerAddressesFragmentDoc = gql`
    fragment CustomerAddresses on User {
  ...Customer
  addresses {
    ...Address
  }
  defaultBillingAddress {
    id
  }
  defaultShippingAddress {
    id
  }
}
    `;
export const SaleFragmentDoc = gql`
    fragment Sale on Sale {
  ...Metadata
  id
  name
  type
  startDate
  endDate
  channelListings {
    id
    channel {
      id
      name
      currencyCode
    }
    discountValue
    currency
  }
}
    `;
export const PageInfoFragmentDoc = gql`
    fragment PageInfo on PageInfo {
  hasNextPage
  hasPreviousPage
  startCursor
  endCursor
}
    `;
export const SaleDetailsFragmentDoc = gql`
    fragment SaleDetails on Sale {
  ...Sale
  productsCount: products {
    totalCount
  }
  collectionsCount: collections {
    totalCount
  }
  categoriesCount: categories {
    totalCount
  }
  products(after: $after, before: $before, first: $first, last: $last) @include(if: $includeProducts) {
    edges {
      node {
        id
        name
        productKlass {
          id
          name
        }
        thumbnail {
          url
        }
        channelListings {
          ...ChannelListingProductWithoutPricing
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
  categories(after: $after, before: $before, first: $first, last: $last) @include(if: $includeCategories) {
    edges {
      node {
        id
        name
        products {
          totalCount
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
  collections(after: $after, before: $before, first: $first, last: $last) @include(if: $includeCollections) {
    edges {
      node {
        id
        name
        products {
          totalCount
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    `;
export const VoucherFragmentDoc = gql`
    fragment Voucher on Voucher {
  ...Metadata
  id
  code
  startDate
  endDate
  usageLimit
  type
  discountValueType
  countries {
    code
    name
  }
  minCheckoutItemsQuantity
  channelListings {
    id
    channel {
      id
      name
      currencyCode
    }
    discountValue
    currency
    minSpent {
      amount
      currency
    }
  }
}
    `;
export const VoucherDetailsFragmentDoc = gql`
    fragment VoucherDetails on Voucher {
  ...Voucher
  code
  usageLimit
  used
  applyOncePerOrder
  applyOncePerCustomer
  onlyForStaff
  productsCount: products {
    totalCount
  }
  collectionsCount: collections {
    totalCount
  }
  categoriesCount: categories {
    totalCount
  }
  products(after: $after, before: $before, first: $first, last: $last) @include(if: $includeProducts) {
    edges {
      node {
        id
        name
        productKlass {
          id
          name
        }
        thumbnail {
          url
        }
        channelListings {
          ...ChannelListingProductWithoutPricing
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
  collections(after: $after, before: $before, first: $first, last: $last) @include(if: $includeCollections) {
    edges {
      node {
        id
        name
        products {
          totalCount
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
  categories(after: $after, before: $before, first: $first, last: $last) @include(if: $includeCategories) {
    edges {
      node {
        id
        name
        products {
          totalCount
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    `;
export const ErrorFragmentDoc = gql`
    fragment Error on ErrorInterface {
  message
  field
  code
}
    `;
export const ProductErrorWithAttributesFragmentDoc = gql`
    fragment ProductErrorWithAttributes on ProductError {
  ...Error
  attributes
}
    `;
export const ProductChannelListingErrorFragmentDoc = gql`
    fragment ProductChannelListingError on ProductChannelListingError {
  ...Error
  channels
}
    `;
export const CollectionChannelListingErrorFragmentDoc = gql`
    fragment CollectionChannelListingError on CollectionChannelListingError {
  ...Error
  channels
}
    `;
export const AccountErrorFragmentDoc = gql`
    fragment AccountError on AccountError {
  ...Error
  addressType
}
    `;
export const DiscountErrorFragmentDoc = gql`
    fragment DiscountError on DiscountError {
  ...Error
  channels
}
    `;
export const OrderErrorFragmentDoc = gql`
    fragment OrderError on OrderError {
  ...Error
  addressType
  orderLines
}
    `;
export const PageErrorWithAttributesFragmentDoc = gql`
    fragment PageErrorWithAttributes on PageError {
  ...Error
  attributes
}
    `;
export const BulkProductErrorFragmentDoc = gql`
    fragment BulkProductError on BulkProductError {
  ...Error
  index
  channels
}
    `;
export const BulkStockErrorFragmentDoc = gql`
    fragment BulkStockError on BulkStockError {
  ...Error
  index
}
    `;
export const ShippingChannelsErrorFragmentDoc = gql`
    fragment ShippingChannelsError on ShippingError {
  ...Error
  channels
}
    `;
export const AppErrorFragmentDoc = gql`
    fragment AppError on AppError {
  ...Error
  permissions
}
    `;
export const ProductAttributeAssignmentUpdateErrorFragmentDoc = gql`
    fragment ProductAttributeAssignmentUpdateError on ProductError {
  ...Error
  attributes
}
    `;
export const GiftCardsSettingsFragmentDoc = gql`
    fragment GiftCardsSettings on GiftCardSettings {
  expiryType
  expiryPeriod {
    type
    amount
  }
}
    `;
export const GiftCardEventFragmentDoc = gql`
    fragment GiftCardEvent on GiftCardEvent {
  expiryDate
  oldExpiryDate
  id
  date
  type
  user {
    ...UserBase
    email
  }
  app {
    id
    name
  }
  message
  email
  orderId
  orderNumber
  tags
  oldTags
  balance {
    initialBalance {
      ...Money
    }
    currentBalance {
      ...Money
    }
    oldInitialBalance {
      ...Money
    }
    oldCurrentBalance {
      ...Money
    }
  }
}
    `;
export const GiftCardDataFragmentDoc = gql`
    fragment GiftCardData on GiftCard {
  ...Metadata
  last4CodeChars
  boughtInChannel
  createdBy {
    ...UserBase
  }
  product {
    id
    name
  }
  createdBy {
    ...UserBase
  }
  usedBy {
    ...UserBase
  }
  usedByEmail
  createdByEmail
  app {
    id
    name
  }
  createdAt
  expiryDate
  lastUsedOn
  isActive
  initialBalance {
    ...Money
  }
  currentBalance {
    ...Money
  }
  id
  tags {
    name
  }
}
    `;
export const CustomerGiftCardFragmentDoc = gql`
    fragment CustomerGiftCard on GiftCard {
  id
  last4CodeChars
  expiryDate
  isActive
  currentBalance {
    ...Money
  }
}
    `;
export const GroupFragmentDoc = gql`
    fragment Group on Group {
  id
  name
  userCanManage
  users {
    id
    firstName
    lastName
  }
}
    `;
export const PermissionFragmentDoc = gql`
    fragment Permission on Permission {
  code
  name
}
    `;
export const StaffMemberFragmentDoc = gql`
    fragment StaffMember on User {
  id
  email
  firstName
  isActive
  lastName
}
    `;
export const GroupMemberFragmentDoc = gql`
    fragment GroupMember on User {
  ...StaffMember
  avatar(size: 48) {
    url
  }
}
    `;
export const GroupDetailsFragmentDoc = gql`
    fragment GroupDetails on Group {
  ...Group
  permissions {
    ...Permission
  }
  users {
    ...GroupMember
  }
}
    `;
export const MediaItemFragmentDoc = gql`
    fragment MediaItem on MediaItem {
  id
  title
  alt
  file {
    url
  }
  placeholder
  isPublished
  type
}
    `;
export const MediaItemDetailsFragmentDoc = gql`
    fragment MediaItemDetails on MediaItem {
  ...MediaItem
  ...Metadata
  file {
    __typename
    url
    contentType
  }
  description
  publishedAt
}
    `;
export const MenuFragmentDoc = gql`
    fragment Menu on Menu {
  id
  name
  items {
    id
  }
}
    `;
export const MenuItemNestedFragmentDoc = gql`
    fragment MenuItemNested on MenuItem {
  ...MenuItem
  children {
    ...MenuItem
    children {
      ...MenuItem
      children {
        ...MenuItem
        children {
          ...MenuItem
          children {
            ...MenuItem
            children {
              ...MenuItem
            }
          }
        }
      }
    }
  }
}
    `;
export const MenuDetailsFragmentDoc = gql`
    fragment MenuDetails on Menu {
  id
  items {
    ...MenuItemNested
  }
  name
}
    `;
export const OrderLine_FragmentDoc = gql`
    fragment OrderLine_ on OrderLine {
  id
  isShippingRequired
  allocations {
    id
    quantity
    warehouse {
      id
      name
    }
  }
  product {
    id
    quantityAvailable
    preorder {
      endDate
    }
    stocks {
      ...Stock
    }
    parent {
      id
      isAvailableForPurchase
    }
  }
  productName
  productSku
  quantity
  quantityFulfilled
  quantityToFulfill
  unitDiscount {
    amount
    currency
  }
  unitDiscountValue
  unitDiscountReason
  unitDiscountType
  undiscountedUnitPrice {
    currency
    gross {
      amount
      currency
    }
    net {
      amount
      currency
    }
  }
  unitPrice {
    gross {
      amount
      currency
    }
    net {
      amount
      currency
    }
  }
  thumbnail(size: 64) {
    url
  }
}
    `;
export const RefundOrderLineFragmentDoc = gql`
    fragment RefundOrderLine on OrderLine {
  id
  productName
  quantity
  unitPrice {
    gross {
      ...Money
    }
  }
  thumbnail(size: 64) {
    url
  }
}
    `;
export const OrderEventFragmentDoc = gql`
    fragment OrderEvent on OrderEvent {
  id
  amount
  shippingCostsIncluded
  date
  email
  emailType
  invoiceNumber
  discount {
    valueType
    value
    reason
    amount {
      amount
      currency
    }
  }
  relatedOrder {
    id
    number
  }
  message
  quantity
  transactionReference
  type
  user {
    id
    email
    firstName
    lastName
  }
  app {
    id
    name
    appUrl
  }
  lines {
    quantity
    itemName
    discount {
      valueType
      value
      reason
      amount {
        amount
        currency
      }
    }
    orderLine {
      id
      productName
    }
  }
}
    `;
export const FulfillmentFragmentDoc = gql`
    fragment Fulfillment on Fulfillment {
  id
  lines {
    id
    quantity
    orderLine {
      ...OrderLine
    }
  }
  fulfillmentOrder
  status
  trackingNumber
  warehouse {
    id
    name
  }
}
    `;
export const OrderFulfillmentLineFragmentDoc = gql`
    fragment OrderFulfillmentLine on OrderLine {
  id
  isShippingRequired
  productName
  quantity
  allocations {
    id
    quantity
    warehouse {
      id
      name
    }
  }
  quantityFulfilled
  quantityToFulfill
  product {
    id
    name
    sku
    preorder {
      endDate
    }
    attributes {
      values {
        edges {
          node {
            id
            name
          }
        }
      }
    }
    stocks {
      ...Stock
    }
    trackInventory
  }
  thumbnail(size: 64) {
    url
  }
}
    `;
export const InvoiceFragmentDoc = gql`
    fragment Invoice on Invoice {
  id
  number
  createdAt
  url
  status
}
    `;
export const OrderDetailsFragmentDoc = gql`
    fragment OrderDetails on Order {
  id
  ...Metadata
  billingAddress {
    ...Address
  }
  giftCards {
    events {
      id
      type
      orderId
      balance {
        initialBalance {
          ...Money
        }
        currentBalance {
          ...Money
        }
        oldInitialBalance {
          ...Money
        }
        oldCurrentBalance {
          ...Money
        }
      }
    }
  }
  isShippingRequired
  canFinalize
  createdAt
  customerNote
  discounts {
    id
    type
    calculationMode: valueType
    value
    reason
    amount {
      ...Money
    }
  }
  events {
    ...OrderEvent
  }
  fulfillments {
    ...Fulfillment
  }
  lines {
    ...OrderLine
    ...OrderFulfillmentLine
  }
  number
  isPaid
  paymentStatus
  shippingAddress {
    ...Address
  }
  fulfillmentMethod {
    __typename
    ... on ShippingMethod {
      id
    }
    ... on Warehouse {
      id
      clickAndCollectOption
    }
  }
  shippingMethod {
    id
  }
  shippingMethodName
  collectionPointName
  shippingPrice {
    gross {
      amount
      currency
    }
  }
  status
  subtotal {
    gross {
      ...Money
    }
    net {
      ...Money
    }
  }
  total {
    gross {
      ...Money
    }
    net {
      ...Money
    }
    tax {
      ...Money
    }
  }
  actions
  totalAuthorized {
    ...Money
  }
  totalCaptured {
    ...Money
  }
  totalBalance {
    ...Money
  }
  undiscountedTotal {
    net {
      ...Money
    }
    gross {
      ...Money
    }
  }
  user {
    id
    email
  }
  userEmail
  shippingMethods {
    id
    name
    price {
      ...Money
    }
    active
    message
  }
  invoices {
    ...Invoice
  }
  channel {
    isActive
    id
    name
    currencyCode
    slug
    defaultCountry {
      code
    }
  }
  isPaid
}
    `;
export const OrderSettingsFragmentDoc = gql`
    fragment OrderSettings on OrderSettings {
  autoConfirmAllNewOrders
  autoFulfillNonShippableGiftCard
}
    `;
export const ShopOrderSettingsFragmentDoc = gql`
    fragment ShopOrderSettings on Site {
  autoApproveFulfillment
  fulfillmentAllowUnpaid
}
    `;
export const OrderLineStockDataFragmentDoc = gql`
    fragment OrderLineStockData on OrderLine {
  id
  allocations {
    quantity
    warehouse {
      id
    }
  }
  quantity
  quantityToFulfill
  product {
    stocks {
      ...Stock
    }
  }
}
    `;
export const PageKlassFragmentDoc = gql`
    fragment PageKlass on PageKlass {
  id
  name
  hasPages
}
    `;
export const PageKlassDetailsFragmentDoc = gql`
    fragment PageKlassDetails on PageKlass {
  ...PageKlass
  ...Metadata
  attributes {
    ...Attribute
  }
}
    `;
export const PageFragmentDoc = gql`
    fragment Page on Page {
  id
  title
  slug
  isPublished
  content
}
    `;
export const FileFragmentDoc = gql`
    fragment File on File {
  url
  contentType
}
    `;
export const ValueFragmentDoc = gql`
    fragment Value on Value {
  id
  name
  slug
  file {
    ...File
  }
  reference
  boolean
  date
  dateTime
  value
}
    `;
export const ValueDetailsFragmentDoc = gql`
    fragment ValueDetails on Value {
  ...Value
  plainText
  richText
}
    `;
export const ValueListFragmentDoc = gql`
    fragment ValueList on ValueConnection {
  pageInfo {
    ...PageInfo
  }
  edges {
    cursor
    node {
      ...ValueDetails
    }
  }
}
    `;
export const PageSelectedAttributeFragmentDoc = gql`
    fragment PageSelectedAttribute on Attribute {
  id
  slug
  name
  inputType
  entityType
  valueRequired
  unit
  values(
    first: $firstValues
    after: $afterValues
    last: $lastValues
    before: $beforeValues
  ) {
    ...ValueList
  }
}
    `;
export const PageAttributesFragmentDoc = gql`
    fragment PageAttributes on Page {
  attributes {
    ...PageSelectedAttribute
  }
  pageKlass {
    id
    name
    attributes {
      id
      name
      inputType
      entityType
      valueRequired
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        ...ValueList
      }
    }
  }
}
    `;
export const PageDetailsFragmentDoc = gql`
    fragment PageDetails on Page {
  ...Page
  ...PageAttributes
  ...Metadata
  content
  seoTitle
  seoDescription
  publishedAt
}
    `;
export const PluginConfigurationBaseFragmentDoc = gql`
    fragment PluginConfigurationBase on PluginConfiguration {
  active
  channel {
    id
    name
    slug
  }
}
    `;
export const PluginBaseFragmentDoc = gql`
    fragment PluginBase on Plugin {
  id
  name
  description
  channelConfigurations {
    ...PluginConfigurationBase
  }
  globalConfiguration {
    ...PluginConfigurationBase
  }
}
    `;
export const ConfigurationItemFragmentDoc = gql`
    fragment ConfigurationItem on ConfigurationItem {
  name
  value
  type
  helpText
  label
}
    `;
export const PluginConfigurationExtendedFragmentDoc = gql`
    fragment PluginConfigurationExtended on PluginConfiguration {
  ...PluginConfigurationBase
  configuration {
    ...ConfigurationItem
  }
}
    `;
export const PluginsDetailsFragmentDoc = gql`
    fragment PluginsDetails on Plugin {
  id
  name
  description
  globalConfiguration {
    ...PluginConfigurationExtended
  }
  channelConfigurations {
    ...PluginConfigurationExtended
  }
}
    `;
export const ProductKlassFragmentDoc = gql`
    fragment ProductKlass on ProductKlass {
  id
  name
  kind
  hasVariants
  isShippingRequired
  taxClass {
    id
    name
  }
}
    `;
export const ProductKlassDetailsFragmentDoc = gql`
    fragment ProductKlassDetails on ProductKlass {
  ...ProductKlass
  ...Metadata
  productAttributes {
    ...Attribute
  }
  variantAttributes {
    ...Attribute
  }
  productVariantAttributeAssignments {
    attribute {
      ...Attribute
    }
    variantSelection
  }
  weight
}
    `;
export const PriceRangeFragmentDoc = gql`
    fragment PriceRange on TaxedMoneyRange {
  start {
    net {
      ...Money
    }
  }
  stop {
    net {
      ...Money
    }
  }
}
    `;
export const ProductWithChannelListingsFragmentDoc = gql`
    fragment ProductWithChannelListings on Product {
  id
  name
  thumbnail {
    url
  }
  productKlass {
    id
    name
    hasVariants
  }
  channelListings {
    ...ChannelListingProductWithoutPricing
    pricing @include(if: $hasChannel) {
      priceRange {
        ...PriceRange
      }
    }
  }
}
    `;
export const ProductAttributesFragmentDoc = gql`
    fragment ProductAttributes on Product {
  id
  attributes {
    id
    slug
    name
    inputType
    entityType
    valueRequired
    unit
    values(
      first: $firstValues
      after: $afterValues
      last: $lastValues
      before: $beforeValues
    ) {
      ...ValueList
    }
  }
  productKlass {
    id
    variantAttributes {
      id
      name
      inputType
      valueRequired
      unit
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        ...ValueList
      }
    }
  }
  channelListings {
    id
    channel {
      id
      name
      currencyCode
    }
  }
}
    `;
export const PreorderFragmentDoc = gql`
    fragment Preorder on PreorderData {
  globalThreshold
  globalSoldUnits
  endDate
}
    `;
export const ChannelListingProductFragmentDoc = gql`
    fragment ChannelListingProduct on ProductChannelListing {
  ...ChannelListingProductWithoutPricing
  pricing {
    priceRange {
      ...PriceRange
    }
  }
}
    `;
export const ProductDetailsVariantFragmentDoc = gql`
    fragment ProductDetailsVariant on Product {
  id
  ... on ConcreteProduct {
    sku
    trackInventory
    quantityLimitPerCustomer
  }
  name
  attributes {
    id
    name
    values {
      edges {
        node {
          id
          name
        }
      }
    }
  }
  media {
    url(size: 200)
  }
  stocks {
    ...Stock
  }
  preorder {
    ...Preorder
  }
  channelListings {
    ...ChannelListingProduct
  }
}
    `;
export const ProductFragmentDoc = gql`
    fragment Product on Product {
  id
  ...ProductAttributes
  ...Metadata
  name
  slug
  description
  seoTitle
  seoDescription
  rating
  defaultVariant {
    id
  }
  category {
    id
    name
  }
  collections {
    id
    name
  }
  channelListings {
    ...ChannelListingProductWithoutPricing
  }
  media {
    ...ProductMediaItem
  }
  isAvailableForPurchase
  variants {
    ...ProductDetailsVariant
  }
  productKlass {
    id
    name
    hasVariants
  }
  weight
  taxClass {
    id
    name
  }
  name
  parent {
    id
    defaultVariant {
      id
    }
    media {
      ...ProductMediaItem
    }
    name
    thumbnail {
      url
    }
    channelListings {
      id
      publishedAt
      isPublished
      channel {
        id
        name
        currencyCode
      }
    }
    variants {
      id
      name
      ... on ConcreteProduct {
        sku
      }
      media {
        id
        url
        type
        oembedData
      }
    }
    defaultVariant {
      id
    }
  }
  selectionAttributes: attributes(variantSelection: VARIANT_SELECTION) {
    ...Attribute
  }
  nonSelectionAttributes: attributes(variantSelection: NOT_VARIANT_SELECTION) {
    ...Attribute
  }
  media {
    id
    url
    type
  }
  channelListings {
    ...ChannelListingProduct
  }
  ... on ConcreteProduct {
    trackInventory
    sku
    quantityLimitPerCustomer
  }
  stocks {
    ...Stock
  }
  preorder {
    ...Preorder
  }
}
    `;
export const ProductAttributeFragmentDoc = gql`
    fragment ProductAttribute on Attribute {
  id
  name
  slug
  inputType
  entityType
  valueRequired
  unit
  values(
    first: $firstValues
    after: $afterValues
    last: $lastValues
    before: $beforeValues
  ) {
    ...ValueList
  }
}
    `;
export const ExportFileFragmentDoc = gql`
    fragment ExportFile on ExportFile {
  id
  status
  url
}
    `;
export const ProductListAttributeFragmentDoc = gql`
    fragment ProductListAttribute on Attribute {
  id
  values {
    edges {
      node {
        ...Value
      }
    }
  }
}
    `;
export const ShippingMethodWithPostalCodesFragmentDoc = gql`
    fragment ShippingMethodWithPostalCodes on ShippingMethod {
  id
  postalCodeRules {
    id
    inclusionType
    start
    end
  }
}
    `;
export const ShippingMethod_FragmentDoc = gql`
    fragment ShippingMethod_ on ShippingMethod {
  ...ShippingMethodWithPostalCodes
  ...Metadata
  taxClass {
    name
    id
  }
  minimumOrderWeight
  maximumOrderWeight
  minimumDeliveryDays
  maximumDeliveryDays
  name
  description
  channelListings {
    id
    channel {
      id
      name
      currencyCode
    }
    price {
      ...Money
    }
    minimumOrderPrice {
      ...Money
    }
    maximumOrderPrice {
      ...Money
    }
  }
}
    `;
export const ShippingMethodWithExcludedProductsFragmentDoc = gql`
    fragment ShippingMethodWithExcludedProducts on ShippingMethod {
  ...ShippingMethod
  excludedProducts(before: $before, after: $after, first: $first, last: $last) {
    pageInfo {
      hasNextPage
      hasPreviousPage
      endCursor
      startCursor
    }
    edges {
      node {
        id
        name
        thumbnail {
          url
        }
      }
    }
  }
}
    `;
export const ShippingZoneFragmentDoc = gql`
    fragment ShippingZone on ShippingZone {
  ...Metadata
  id
  countries {
    code
    name
  }
  name
  description
}
    `;
export const ShippingZoneDetailsFragmentDoc = gql`
    fragment ShippingZoneDetails on ShippingZone {
  ...ShippingZone
  shippingMethods {
    ...ShippingMethod
  }
  warehouses {
    id
    name
  }
}
    `;
export const LimitInfoFragmentDoc = gql`
    fragment LimitInfo on Limits {
  channels @include(if: $channels)
  orders @include(if: $orders)
  productVariants @include(if: $productVariants)
  staffUsers @include(if: $staffUsers)
  warehouses @include(if: $warehouses)
}
    `;
export const ShopLimitFragmentDoc = gql`
    fragment ShopLimit on Site {
  limits {
    currentUsage {
      ...LimitInfo
    }
    allowedUsage {
      ...LimitInfo
    }
  }
}
    `;
export const ShopFragmentDoc = gql`
    fragment Shop on Site {
  companyAddress {
    ...Address
  }
  countries {
    code
    name
  }
  customerSetPasswordUrl
  defaultMailSenderAddress
  defaultMailSenderName
  description
  domain
  name
  reserveStockDurationAnonymousUser
  reserveStockDurationAuthenticatedUser
  maxItemCountPerCheckout
}
    `;
export const StaffMemberDetailsFragmentDoc = gql`
    fragment StaffMemberDetails on User {
  ...StaffMember
  groups {
    id
    name
    userCanManage
  }
  userPermissions {
    code
    name
  }
  avatar(size: 120) {
    url
  }
}
    `;
export const TaxedMoneyFragmentDoc = gql`
    fragment TaxedMoney on TaxedMoney {
  net {
    ...Money
  }
  gross {
    ...Money
  }
}
    `;
export const CountryWithCodeFragmentDoc = gql`
    fragment CountryWithCode on Country {
  name
  code
}
    `;
export const TaxConfigurationPerCountryFragmentDoc = gql`
    fragment TaxConfigurationPerCountry on TaxConfigurationPerCountry {
  country {
    ...CountryWithCode
  }
  chargeTaxes
  taxCalculationStrategy
  displayGrossPrices
}
    `;
export const TaxConfigurationFragmentDoc = gql`
    fragment TaxConfiguration on TaxConfiguration {
  id
  channel {
    id
    name
  }
  displayGrossPrices
  pricesEnteredWithTax
  chargeTaxes
  taxCalculationStrategy
  countries {
    ...TaxConfigurationPerCountry
  }
}
    `;
export const TaxCountryConfigurationFragmentDoc = gql`
    fragment TaxCountryConfiguration on TaxCountryConfiguration {
  country {
    ...CountryWithCode
  }
  taxClassCountryRates {
    rate
    taxClass {
      id
      name
    }
  }
}
    `;
export const TaxClassBaseFragmentDoc = gql`
    fragment TaxClassBase on TaxClass {
  id
  name
}
    `;
export const TaxRateFragmentDoc = gql`
    fragment TaxRate on TaxClassCountryRate {
  country {
    ...CountryWithCode
  }
  rate
}
    `;
export const TaxClassFragmentDoc = gql`
    fragment TaxClass on TaxClass {
  ...TaxClassBase
  countries {
    ...TaxRate
  }
  ...Metadata
}
    `;
export const TimePeriodFragmentDoc = gql`
    fragment TimePeriod on TimePeriod {
  amount
  type
}
    `;
export const ValueTranslatableFragmentDoc = gql`
    fragment ValueTranslatable on ValueTranslation {
  id
  name
  plainText
  richText
  value {
    id
    name
  }
  attribute {
    id
    name
  }
}
    `;
export const CategoryTranslationFragmentDoc = gql`
    fragment CategoryTranslation on CategoryTranslation {
  id
  description
  language {
    language
  }
  name
  seoDescription
  seoTitle
  category {
    id
    name
    description
    seoDescription
    seoTitle
  }
}
    `;
export const CollectionTranslationFragmentDoc = gql`
    fragment CollectionTranslation on CollectionTranslation {
  collection {
    id
    name
    description
    seoDescription
    seoTitle
  }
  id
  description
  language {
    language
  }
  name
  seoDescription
  seoTitle
}
    `;
export const ProductTranslationFragmentDoc = gql`
    fragment ProductTranslation on ProductTranslation {
  product {
    id
    name
    description
    seoDescription
    seoTitle
  }
  id
  seoTitle
  seoDescription
  name
  description
  language {
    code
    language
  }
}
    `;
export const ProductVariantTranslationFragmentDoc = gql`
    fragment ProductVariantTranslation on ProductTranslation {
  id
  name
  language {
    code
    language
  }
  product {
    id
    name
  }
}
    `;
export const SaleTranslationFragmentDoc = gql`
    fragment SaleTranslation on SaleTranslation {
  id
  name
  language {
    code
    language
  }
  sale {
    id
    name
  }
}
    `;
export const VoucherTranslationFragmentDoc = gql`
    fragment VoucherTranslation on VoucherTranslation {
  id
  language {
    code
    language
  }
  name
  voucher {
    id
    name
  }
}
    `;
export const ShippingMethodTranslationFragmentDoc = gql`
    fragment ShippingMethodTranslation on ShippingMethodTranslation {
  id
  language {
    code
    language
  }
  name
  description
  shippingMethod {
    id
  }
}
    `;
export const PageTranslationFragmentDoc = gql`
    fragment PageTranslation on PageTranslation {
  id
  content
  seoDescription
  seoTitle
  title
  language {
    code
    language
  }
  page {
    id
    content
    seoDescription
    seoTitle
    title
  }
}
    `;
export const PageTranslatableFragmentDoc = gql`
    fragment PageTranslatable on PageTranslation {
  id
  content
  seoDescription
  seoTitle
  title
  language {
    code
    language
  }
}
    `;
export const AttributeTranslationFragmentDoc = gql`
    fragment AttributeTranslation on AttributeTranslation {
  id
  name
  attribute {
    id
    name
    inputType
  }
}
    `;
export const AttributeChoicesTranslationFragmentDoc = gql`
    fragment AttributeChoicesTranslation on ValueConnection {
  pageInfo {
    ...PageInfo
  }
  edges {
    cursor
    node {
      id
      name
      plainText
      richText
      inputType
      translation(languageCode: $language) {
        id
        name
        plainText
        richText
      }
    }
  }
}
    `;
export const AttributeTranslationDetailsFragmentDoc = gql`
    fragment AttributeTranslationDetails on AttributeTranslation {
  id
  name
  attribute {
    id
    name
    inputType
    withChoices
    values(
      first: $firstValues
      after: $afterValues
      last: $lastValues
      before: $beforeValues
    ) {
      ...AttributeChoicesTranslation
    }
  }
}
    `;
export const MenuItemTranslationFragmentDoc = gql`
    fragment MenuItemTranslation on MenuItemTranslation {
  id
  language {
    language
  }
  name
  menuItem {
    id
    name
  }
}
    `;
export const WarehouseWithShippingFragmentDoc = gql`
    fragment WarehouseWithShipping on Warehouse {
  ...Warehouse
  shippingZones(first: 100) {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;
export const WarehouseDetailsFragmentDoc = gql`
    fragment WarehouseDetails on Warehouse {
  isPrivate
  clickAndCollectOption
  ...WarehouseWithShipping
  address {
    ...Address
  }
}
    `;
export const WebhookDetailsFragmentDoc = gql`
    fragment WebhookDetails on Webhook {
  ...Webhook
  syncEvents {
    eventType
  }
  asyncEvents {
    eventType
  }
  secretKey
  targetUrl
}
    `;
export const CountryFragmentDoc = gql`
    fragment Country on Country {
  name
  code
}
    `;
export const LanguageFragmentDoc = gql`
    fragment Language on LanguageDisplay {
  code
  language
}
    `;
export const ShopSettingsFragmentDoc = gql`
    fragment ShopSettings on Site {
  countries {
    ...Country
  }
  allowedStates
  defaultCountry {
    ...Country
  }
  defaultWeightUnit
  domain
  languages {
    ...Language
  }
  logo {
    url
    alt
    height
    width
  }
  name
  trackInventoryByDefault
  maxItemCountPerCheckout
}
    `;
export const LoginDocument = gql`
    mutation login($email: String!, $password: String!) {
  obtainToken(authInput: {email: $email, password: $password}) {
    result {
      accessToken
      refreshToken
      csrfToken
      user {
        ...UserDetails
      }
    }
    errors {
      message
      field
      code
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}`;
export const AvailableExternalAuthenticationsDocument = gql`
    query AvailableExternalAuthentications {
  shop {
    id
    availableExternalAuthentications {
      id
      name
    }
  }
}
    `;
export const FileUploadDocument = gql`
    mutation FileUpload($file: Upload!) {
  uploadFile(file: $file) {
    result {
      ...File
    }
    errors {
      ...Error
    }
  }
}
    ${FileFragmentDoc}
${ErrorFragmentDoc}`;
export const PublicMetafieldsDocument = gql`
    query PublicMetafields($id: ID!, $keys: [String!]!) {
  app(id: $id) {
    id
    metafields(keys: $keys)
  }
}
    `;
export const PrivateMetafieldsDocument = gql`
    query PrivateMetafields($id: ID!, $keys: [String!]!) {
  app(id: $id) {
    id
    privateMetafields(keys: $keys)
  }
}
    `;
export const PublicMetafieldsInferredDocument = gql`
    query PublicMetafieldsInferred($keys: [String!]!) {
  app {
    id
    metafields(keys: $keys)
  }
}
    `;
export const PrivateMetafieldsInferredDocument = gql`
    query PrivateMetafieldsInferred($keys: [String!]!) {
  app {
    id
    privateMetafields(keys: $keys)
  }
}
    `;
export const UpdatePublicMetadataDocument = gql`
    mutation UpdatePublicMetadata($id: ID!, $input: [MetadataInput!]!, $keys: [String!]!) {
  updateMetadata(id: $id, data: $input) {
    result {
      metafields(keys: $keys)
    }
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdatePrivateMetadataDocument = gql`
    mutation UpdatePrivateMetadata($id: ID!, $input: [MetadataInput!]!, $keys: [String!]!) {
  updatePrivateMetadata(id: $id, data: $input) {
    result {
      privateMetafields(keys: $keys)
    }
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const TransactionProcessedEventsDocument = gql`
    query TransactionProcessedEvents($id: ID!) {
  transaction(id: $id) {
    processedEvents: metafield(key: "processedEvents")
  }
}
    `;
export const TransactionUpdateProcessedEventsDocument = gql`
    mutation TransactionUpdateProcessedEvents($id: ID!, $input: String!) {
  updateMetadata(id: $id, data: {key: "processedEvents", value: $input}) {
    __typename
    errors {
      field
      message
    }
  }
}
    `;
export const TransactionActionRequestSubscriptionDocument = gql`
    subscription TransactionActionRequestSubscription {
  event {
    ... on TransactionActionRequest {
      transaction {
        id
        reference
        type
        amountAuthorized {
          amount
          currency
        }
        amountCharged {
          amount
        }
        amountVoided {
          amount
        }
        amountRefunded {
          amount
        }
      }
      action {
        actionType
        amount
      }
    }
  }
}
    `;
export const CreateWebhooksDocument = gql`
    mutation CreateWebhooks($targetUrl: String!, $query: String) {
  createWebhook(
    data: {name: "Checkout app payment notifications", targetUrl: $targetUrl, events: [TRANSACTION_ACTION_REQUEST], isActive: true, query: $query}
  ) {
    __typename
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const CheckWebhooksDocument = gql`
    query CheckWebhooks {
  app {
    webhooks {
      id
      targetUrl
    }
  }
}
    `;
export const AddressDeleteDocument = gql`
    mutation AddressDelete($id: ID!) {
  deleteAddress(id: $id) {
    user {
      addresses {
        ...Address
      }
    }
  }
}
    ${AddressFragmentDoc}`;
export const AddressSetDefaultDocument = gql`
    mutation AddressSetDefault($addressID: ID!, $userID: ID!, $addressType: AddressType!) {
  setDefaultAddress(addressId: $addressID, type: $addressType, userId: $userID) {
    __typename
    errors {
      field
      message
      code
    }
  }
}
    `;
export const CheckoutAddProductLineDocument = gql`
    mutation CheckoutAddProductLine($checkoutId: ID!, $productId: ID!) {
  addCheckoutLines(id: $checkoutId, lines: [{quantity: 1, productId: $productId}]) {
    result {
      ...Checkout
    }
    errors {
      message
      ... on CheckoutError {
        code
        field
      }
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CheckoutAddPromoCodeDocument = gql`
    mutation CheckoutAddPromoCode($id: ID!, $promoCode: String!) {
  addPromoCodeToCheckout(id: $id, promoCode: $promoCode) {
    result {
      ...Checkout
    }
    errors {
      message
      field
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CheckoutBillingAddressUpdateDocument = gql`
    mutation CheckoutBillingAddressUpdate($id: ID!, $address: AddressUpdateInput!) {
  updateCheckoutBillingAddress(data: $address, id: $id) {
    result {
      ...Checkout
    }
    errors {
      field
      message
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CompleteCheckoutDocument = gql`
    mutation completeCheckout($checkoutId: ID!, $paymentData: JSONString) {
  completeCheckout(id: $checkoutId, paymentData: $paymentData) {
    order {
      id
      status
      billingAddress {
        id
        ...Address
      }
      shippingAddress {
        id
        ...Address
      }
    }
    confirmationNeeded
    confirmationData
    errors {
      field
      message
    }
  }
}
    ${AddressFragmentDoc}`;
export const CheckoutContactInfoUpdateDocument = gql`
    mutation CheckoutContactInfoUpdate($id: ID!, $input: CheckoutContactInfoUpdateInput!) {
  updateCheckoutContactInfo(data: $input, id: $id) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CreateCheckoutPaymentDocument = gql`
    mutation createCheckoutPayment($checkoutId: ID!, $paymentInput: PaymentInput!) {
  createCheckoutPayment(id: $checkoutId, data: $paymentInput) {
    payment {
      id
      total {
        ...Money
      }
    }
    errors {
      field
      message
      code
    }
  }
}
    ${MoneyFragmentDoc}`;
export const AttachCustomerToCheckoutDocument = gql`
    mutation attachCustomerToCheckout($id: ID!) {
  attachCustomerToCheckout(id: $id) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const DetachCustomerFromCheckoutDocument = gql`
    mutation detachCustomerFromCheckout($id: ID!) {
  detachCustomerFromCheckout(id: $id) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const UpdateCheckoutFulfillmentMethodDocument = gql`
    mutation updateCheckoutFulfillmentMethod($id: ID!, $fulfillmentMethodId: ID!, $fulfillmentDeadline: DateTime) {
  updateCheckoutFulfillmentMethod(
    id: $id
    fulfillmentMethodId: $fulfillmentMethodId
    fulfillmentDeadline: $fulfillmentDeadline
  ) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CheckoutLineDeleteDocument = gql`
    mutation CheckoutLineDelete($checkoutId: ID!, $lineId: ID!) {
  deleteCheckoutLine(id: $checkoutId, lineId: $lineId) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CheckoutLineUpdateDocument = gql`
    mutation CheckoutLineUpdate($id: ID!, $lines: [CheckoutLineUpdateInput!]!) {
  updateCheckoutLines(id: $id, lines: $lines) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const UpdateCheckoutLinesDocument = gql`
    mutation updateCheckoutLines($checkoutId: ID!, $lines: [CheckoutLineUpdateInput!]!) {
  updateCheckoutLines(id: $checkoutId, lines: $lines) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const RemovePromoCodeFromCheckoutDocument = gql`
    mutation removePromoCodeFromCheckout($id: ID!, $promoCode: String, $promoCodeId: ID) {
  removePromoCodeFromCheckout(
    id: $id
    promoCode: $promoCode
    promoCodeId: $promoCodeId
  ) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CheckoutShippingAddressUpdateDocument = gql`
    mutation CheckoutShippingAddressUpdate($id: ID!, $address: AddressUpdateInput!) {
  updateCheckoutShippingAddress(data: $address, id: $id) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CheckoutShippingMethodUpdateDocument = gql`
    mutation CheckoutShippingMethodUpdate($id: ID!, $shippingMethodId: ID!) {
  updateCheckoutShippingMethod(shippingMethodId: $shippingMethodId, id: $id) {
    result {
      ...Checkout
    }
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const AccountConfirmDocument = gql`
    mutation accountConfirm($email: String!, $token: String!) {
  confirmAccount(email: $email, token: $token) {
    result {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const ConfirmEmailChangeDocument = gql`
    mutation confirmEmailChange($token: String!, $channel: String) {
  confirmEmailChange(token: $token, channel: $channel) {
    result {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const CreateAccountAddressDocument = gql`
    mutation createAccountAddress($input: AddressUpdateInput!) {
  addAddress(data: $input) {
    address {
      ...Address
    }
    user {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${AddressFragmentDoc}
${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${ErrorFragmentDoc}`;
export const CreateOrderDocument = gql`
    mutation CreateOrder($id: ID!) {
  createOrderFromCheckout(id: $id) {
    result {
      ...Order
    }
  }
}
    ${OrderFragmentDoc}
${MoneyFragmentDoc}
${AddressFragmentDoc}
${ShippingMethodFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}`;
export const SetAddressDefaultDocument = gql`
    mutation SetAddressDefault($id: ID!, $type: AddressType!) {
  setDefaultAddress(addressId: $id, type: $type) {
    result {
      addresses {
        ...Address
      }
    }
    errors {
      code
      message
    }
  }
}
    ${AddressFragmentDoc}`;
export const DeleteAccountDocument = gql`
    mutation deleteAccount($token: String!) {
  deleteAccount(token: $token) {
    result {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const DeleteAddressDocument = gql`
    mutation deleteAddress($addressId: ID!) {
  deleteAddress(id: $addressId) {
    user {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const ExternalAuthenticationUrlDocument = gql`
    mutation externalAuthenticationUrl($pluginId: String = "mirumee.authentication.openidconnect", $input: JSONString!) {
  externalAuthenticationUrl(pluginInput: {pluginId: $pluginId, data: $input}) {
    data
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const RefreshExternalTokenDocument = gql`
    mutation refreshExternalToken($pluginId: String = "mirumee.authentication.openidconnect", $input: JSONString!) {
  refreshToken(pluginInput: {pluginId: $pluginId, data: $input}) {
    errors {
      ...Error
    }
    result {
      accessToken
      csrfToken
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ExternalRefreshWithUserDocument = gql`
    mutation externalRefreshWithUser($pluginId: String = "mirumee.authentication.openidconnect", $input: JSONString!) {
  refreshToken(pluginInput: {pluginId: $pluginId, data: $input}) {
    result {
      accessToken
      csrfToken
      user {
        ...UserDetails
      }
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const VerifyExternalTokenDocument = gql`
    mutation verifyExternalToken($pluginId: String = "mirumee.authentication.openidconnect", $input: JSONString!) {
  verifyToken(token: "", pluginInput: {pluginId: $pluginId, data: $input}) {
    isValid
    payload {
      __typename
    }
    user {
      ...UserDetails
      userPermissions {
        code
        name
      }
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const LoginWithoutDetailsDocument = gql`
    mutation loginWithoutDetails($email: String!, $password: String!) {
  obtainToken(authInput: {email: $email, password: $password}) {
    result {
      accessToken
      csrfToken
      user {
        ...UserBase
      }
    }
    errors {
      message
      field
      code
    }
  }
}
    ${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}`;
export const LogoutDocument = gql`
    mutation logout($input: AuthPluginInput) {
  logout(pluginInput: $input) {
    data
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ObtainExternalAccessTokensDocument = gql`
    mutation ObtainExternalAccessTokens($pluginId: String = "mirumee.authentication.openidconnect", $input: JSONString!) {
  obtainToken(pluginInput: {pluginId: $pluginId, data: $input}) {
    result {
      accessToken
      csrfToken
      user {
        ...UserDetails
      }
    }
    errors {
      message
      field
      code
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}`;
export const OrderUpdatePaymentMetafieldDocument = gql`
    mutation OrderUpdatePaymentMetafield($orderId: ID!, $data: String!) {
  updatePrivateMetadata(id: $orderId, data: {key: "payment", value: $data}) {
    __typename
  }
}
    `;
export const PasswordChangeDocument = gql`
    mutation PasswordChange($newPassword: String!, $oldPassword: String!) {
  changePassword(newPassword: $newPassword, oldPassword: $oldPassword) {
    __typename
    errors {
      field
      message
    }
  }
}
    `;
export const RefreshTokenDocument = gql`
    mutation refreshToken($csrfToken: String!, $refreshToken: String, $pluginInput: AuthPluginInput) {
  refreshToken(
    csrfToken: $csrfToken
    refreshToken: $refreshToken
    pluginInput: $pluginInput
  ) {
    result {
      accessToken
      csrfToken
    }
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const RefreshTokenWithUserDocument = gql`
    mutation refreshTokenWithUser($csrfToken: String!) {
  refreshToken(csrfToken: $csrfToken) {
    result {
      accessToken
      user {
        ...UserDetails
      }
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const RegisterDocument = gql`
    mutation register($input: UserCreationInput!) {
  createUser(data: $input) {
    errors {
      ...Error
    }
    requiresConfirmation
  }
}
    ${ErrorFragmentDoc}`;
export const RequestAccountDeletionDocument = gql`
    mutation requestAccountDeletion($channel: String!) {
  requestAccountDeletion(channel: $channel) {
    __typename
  }
}
    `;
export const RequestEmailChangeDocument = gql`
    mutation RequestEmailChange($newEmail: String!, $password: String!, $channel: String) {
  requestEmailChange(newEmail: $newEmail, password: $password, channel: $channel) {
    result {
      email
    }
    errors {
      code
      field
      message
    }
  }
}
    `;
export const RequestPasswordResetDocument = gql`
    mutation requestPasswordReset($email: String!, $channel: String!) {
  requestPasswordReset(email: $email, channel: $channel)
}
    `;
export const SetAccountDefaultAddressDocument = gql`
    mutation setAccountDefaultAddress($id: ID!, $type: AddressType!) {
  setDefaultAddress(addressId: $id, type: $type) {
    result {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const SetPasswordDocument = gql`
    mutation setPassword($token: String!, $email: String!, $password: String!) {
  setPassword(token: $token, email: $email, password: $password) {
    result {
      accessToken
      csrfToken
      user {
        ...UserDetails
      }
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const TransactionCreateDocument = gql`
    mutation TransactionCreate($id: ID!, $transaction: TransactionCreationInput!, $transactionEvent: TransactionEventInput) {
  createTransaction(
    id: $id
    transaction: $transaction
    transactionEvent: $transactionEvent
  ) {
    result {
      id
    }
  }
}
    `;
export const TransactionUpdateDocument = gql`
    mutation TransactionUpdate($id: ID!, $transaction: TransactionUpdateInput!, $transactionEvent: TransactionEventInput) {
  updateTransaction(
    id: $id
    transaction: $transaction
    transactionEvent: $transactionEvent
  ) {
    result {
      id
    }
  }
}
    `;
export const UpdateUserDocument = gql`
    mutation updateUser($input: UserUpdateInput!) {
  updateUser(data: $input) {
    result {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const UpdateUserAddressDocument = gql`
    mutation updateUserAddress($input: AddressUpdateInput!, $id: ID!) {
  updateAddress(data: $input, id: $id) {
    address {
      ...Address
    }
    user {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${AddressFragmentDoc}
${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${ErrorFragmentDoc}`;
export const UserAddressCreateDocument = gql`
    mutation userAddressCreate($address: AddressUpdateInput!, $type: AddressType) {
  addAddress(type: $type, data: $address) {
    address {
      ...Address
    }
    errors {
      ...Error
    }
  }
}
    ${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const UserAddressDeleteDocument = gql`
    mutation userAddressDelete($id: ID!) {
  deleteAddress(id: $id) {
    address {
      ...Address
    }
    errors {
      ...Error
    }
  }
}
    ${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const UserAddressUpdateDocument = gql`
    mutation userAddressUpdate($id: ID!, $address: AddressUpdateInput!) {
  updateAddress(id: $id, data: $address) {
    address {
      ...Address
    }
    errors {
      ...Error
    }
  }
}
    ${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const VerifyTokenDocument = gql`
    mutation verifyToken($token: String!) {
  verifyToken(token: $token) {
    isValid
    payload {
      accessToken
      refreshToken
    }
    user {
      ...UserDetails
    }
    errors {
      ...Error
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${ErrorFragmentDoc}`;
export const AddressValidationRulesDocument = gql`
    query addressValidationRules($countryCode: CountryCode!) {
  addressValidationRules(countryCode: $countryCode) {
    ...ValidationRules
  }
}
    ${ValidationRulesFragmentDoc}`;
export const AppDocument = gql`
    query App {
  app {
    id
    name
  }
}
    `;
export const AvailableShippingMethodsDocument = gql`
    query AvailableShippingMethods($channel: String) {
  shop {
    id
    availableShippingMethods(channelSlug: $channel) {
      id
      translation {
        id
        name
      }
      price {
        ...Money
      }
    }
  }
}
    ${MoneyFragmentDoc}`;
export const CategoryBySlugDocument = gql`
    query CategoryBySlug($slug: String!) {
  category(slug: $slug) {
    ...CategoryDetails
  }
}
    ${CategoryDetailsFragmentDoc}
${CategoryBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const CategoryPathsDocument = gql`
    query CategoryPaths($after: String) {
  categories(first: 100, after: $after) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        slug
      }
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const ChannelDocument = gql`
    query Channel($id: ID!) {
  channel(id: $id) {
    ...Channel
  }
}
    ${ChannelFragmentDoc}`;
export const ChannelBySlugDocument = gql`
    query ChannelBySlug($slug: String!) {
  channel(slug: $slug) {
    ...Channel
  }
}
    ${ChannelFragmentDoc}`;
export const ChannelsDocument = gql`
    query Channels {
  channels {
    ...Channel
  }
}
    ${ChannelFragmentDoc}`;
export const CheckoutDocument = gql`
    query Checkout($id: ID!) {
  checkout(id: $id) {
    ...Checkout
  }
}
    ${CheckoutFragmentDoc}
${AddressFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const CollectionBySlugDocument = gql`
    query CollectionBySlug($slug: String!, $channel: String) {
  collection(slug: $slug, channel: $channel) {
    id
    ...CollectionDetails
    backgroundImage {
      ...Image
    }
  }
}
    ${CollectionDetailsFragmentDoc}
${CollectionBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const CollectionPathsDocument = gql`
    query CollectionPaths($after: String, $channel: String) {
  collections(first: 20, channel: $channel, after: $after) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        slug
      }
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const CurrentUserDetailsDocument = gql`
    query CurrentUserDetails {
  me {
    id
    lastLogin
    dateJoined
    email
    firstName
    lastName
    avatar {
      ...Image
    }
    orders {
      totalCount
    }
  }
}
    ${ImageFragmentDoc}`;
export const FilteringAttributesDocument = gql`
    query FilteringAttributes($filter: AttributeFilter!, $channel: String!) {
  attributes(filters: $filter, first: 100, channel: $channel) {
    totalCount
    edges {
      node {
        ...AttributeFilter
      }
    }
  }
}
    ${AttributeFilterFragmentDoc}
${AttributeFilterChoiceFragmentDoc}`;
export const FooterMenuDocument = gql`
    query FooterMenu($channel: String) {
  menu(slug: "footer", channel: $channel) {
    id
    items {
      children {
        ...MenuItem
      }
      ...MenuItem
    }
  }
}
    ${MenuItemFragmentDoc}`;
export const HomepageBlocksDocument = gql`
    query HomepageBlocks($slug: String!, $channel: String) {
  menu(channel: $channel, slug: $slug) {
    id
    name
    slug
    items {
      ...HomepageBlock
    }
  }
}
    ${HomepageBlockFragmentDoc}`;
export const OrderDocument = gql`
    query Order($id: ID!) {
  order(id: $id) {
    ...Order
  }
}
    ${OrderFragmentDoc}
${MoneyFragmentDoc}
${AddressFragmentDoc}
${ShippingMethodFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}`;
export const OrderPaymentDetailsDocument = gql`
    query OrderPaymentDetails($id: ID!) {
  order(id: $id) {
    authorizeStatus
    chargeStatus
    isPaid
    status
    privateMetafield(key: "payment")
  }
}
    `;
export const OrderTransactionsDocument = gql`
    query OrderTransactions($id: ID!) {
  order(id: $id) {
    transactions {
      ...TransactionItem
    }
  }
}
    ${TransactionItemFragmentDoc}
${MoneyFragmentDoc}
${TransactionEventFragmentDoc}`;
export const OrdersDocument = gql`
    query Orders($before: String, $after: String) {
  me {
    orders(first: 10, before: $before, after: $after) {
      edges {
        cursor
        node {
          ...Order
        }
      }
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
      totalCount
    }
  }
}
    ${OrderFragmentDoc}
${MoneyFragmentDoc}
${AddressFragmentDoc}
${ShippingMethodFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}`;
export const PageDocument = gql`
    query Page($slug: String!) {
  page(slug: $slug) {
    ...Page
    translation {
      id
      title
      content
    }
    seoTitle
    seoDescription
    createdAt
  }
}
    ${PageFragmentDoc}`;
export const PagePathsDocument = gql`
    query PagePaths($after: String) {
  pages(first: 100, after: $after) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        slug
      }
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const ProductByIdDocument = gql`
    query ProductById($id: ID!, $channel: String) {
  product(id: $id, channel: $channel) {
    ...ProductDetails
  }
}
    ${ProductDetailsFragmentDoc}
${ConcreteProductDetailsFragmentDoc}
${BaseProductDetailsFragmentDoc}
${AttributeDetailsFragmentDoc}
${AttributeFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${CategoryBasicFragmentDoc}
${ProductMediaItemFragmentDoc}
${ImageFragmentDoc}
${ProductAncestorFragmentDoc}
${ProductVariantFragmentDoc}
${MoneyFragmentDoc}
${AbstractProductDetailsFragmentDoc}`;
export const ProductCollectionDocument = gql`
    query ProductCollection($before: String, $after: String, $first: Int = 4, $filter: ProductFilter, $sortBy: ProductOrderingInput, $channel: String!) {
  products(
    first: $first
    channel: $channel
    after: $after
    before: $before
    filters: $filter
    sortBy: $sortBy
  ) {
    totalCount
    edges {
      cursor
      node {
        ...ProductCard
      }
    }
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
  }
}
    ${ProductCardFragmentDoc}
${ImageFragmentDoc}`;
export const ProductPathsDocument = gql`
    query ProductPaths($after: String, $channel: String) {
  products(first: 100, channel: $channel, after: $after) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        slug
      }
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const UserDocument = gql`
    query User {
  me {
    ...UserDetails
    checkout {
      ...Checkout
    }
  }
}
    ${UserDetailsFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${AddressFragmentDoc}
${CheckoutFragmentDoc}
${FulfillmentMethodFragmentDoc}
${MoneyFragmentDoc}
${CheckoutLineFragmentDoc}
${ImageFragmentDoc}
${GiftCardFragmentDoc}
${PointOfContactFragmentDoc}`;
export const UserWithoutDetailsDocument = gql`
    query UserWithoutDetails {
  me {
    ...UserBase
  }
}
    ${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}`;
export const CurrentUserAddressesDocument = gql`
    query CurrentUserAddresses {
  me {
    id
    addresses {
      ...Address
    }
  }
}
    ${AddressFragmentDoc}`;
export const DeleteProductsDocument = gql`
    mutation DeleteProducts($ids: [ID!]!) {
  deleteProducts(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductCreateDocument = gql`
    mutation ProductCreate($input: ProductCreationInput!) {
  createProduct(data: $input) {
    errors {
      ...ProductErrorWithAttributes
    }
    result {
      id
    }
  }
}
    ${ProductErrorWithAttributesFragmentDoc}
${ErrorFragmentDoc}`;
export const SearchValuesDocument = gql`
    query SearchValues($id: ID, $after: String, $first: Int!, $query: String!) {
  attribute(id: $id) {
    id
    values(after: $after, first: $first, filters: {search: $query}) {
      edges {
        node {
          ...ValueDetails
        }
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
    ${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${PageInfoFragmentDoc}`;
export const SearchAttributesDocument = gql`
    query SearchAttributes($after: String, $first: Int!, $query: String!) {
  search: attributes(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const ProductExportDocument = gql`
    mutation ProductExport($input: ExportProductsInput!) {
  exportProducts(data: $input) {
    result {
      ...ExportFile
    }
    errors {
      ...Error
    }
  }
}
    ${ExportFileFragmentDoc}
${ErrorFragmentDoc}`;
export const UpdateValueTranslationsDocument = gql`
    mutation UpdateValueTranslations($id: ID!, $input: ValueTranslationInput!, $language: LanguageCode!) {
  translateValue(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      richText
      translation(languageCode: $language) {
        id
        name
        richText
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdateSaleTranslationsDocument = gql`
    mutation UpdateSaleTranslations($id: ID!, $input: NameTranslationInput!, $language: LanguageCode!) {
  translateSale(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      translation(languageCode: $language) {
        id
        language {
          code
          language
        }
        name
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdateShippingMethodTranslationsDocument = gql`
    mutation UpdateShippingMethodTranslations($id: ID!, $input: ShippingPriceTranslationInput!, $language: LanguageCode!) {
  translateShippingPrice(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      description
      translation(languageCode: $language) {
        id
        language {
          language
        }
        name
        description
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdateVoucherTranslationsDocument = gql`
    mutation UpdateVoucherTranslations($id: ID!, $input: NameTranslationInput!, $language: LanguageCode!) {
  translateVoucher(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      translation(languageCode: $language) {
        id
        language {
          code
          language
        }
        name
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const HomeDocument = gql`
    query Home($channel: String!, $datePeriod: DateRangeInput!, $PERMISSION_MANAGE_PRODUCTS: Boolean!, $PERMISSION_MANAGE_ORDERS: Boolean!) {
  salesToday: ordersTotal(period: TODAY, channel: $channel) @include(if: $PERMISSION_MANAGE_ORDERS) {
    gross {
      amount
      currency
    }
  }
  ordersToday: orders(filters: {created: $datePeriod}, channel: $channel) @include(if: $PERMISSION_MANAGE_ORDERS) {
    totalCount
  }
  ordersToConfirm: orders(filters: {status: UNCONFIRMED}, channel: $channel) @include(if: $PERMISSION_MANAGE_ORDERS) {
    totalCount
  }
  ordersToFulfill: orders(filters: {status: READY_TO_FULFILL}, channel: $channel) @include(if: $PERMISSION_MANAGE_ORDERS) {
    totalCount
  }
  ordersToCapture: orders(filters: {status: READY_TO_CAPTURE}, channel: $channel) @include(if: $PERMISSION_MANAGE_ORDERS) {
    totalCount
  }
  productsOutOfStock: products(
    filters: {stockAvailability: OUT_OF_STOCK}
    channel: $channel
  ) {
    totalCount
  }
  productTopToday: reportProductSales(period: TODAY, first: 5, channel: $channel) @include(if: $PERMISSION_MANAGE_PRODUCTS) {
    edges {
      node {
        ...TopProduct
      }
    }
  }
  activities: homepageEvents(last: 10) @include(if: $PERMISSION_MANAGE_ORDERS) {
    edges {
      node {
        ...Activity
        amount
        date
        email
        emailType
        id
        message
        orderNumber
        oversoldItems
        quantity
      }
    }
  }
}
    ${TopProductFragmentDoc}
${ActivityFragmentDoc}`;
export const ShopCountriesDocument = gql`
    query ShopCountries($filter: CountryFilter) {
  shop {
    id
    countries(filters: $filter) {
      code
      name
    }
  }
}
    `;
export const RefreshLimitsDocument = gql`
    query RefreshLimits($channels: Boolean!, $orders: Boolean!, $productVariants: Boolean!, $staffUsers: Boolean!, $warehouses: Boolean!) {
  shop {
    id
    ...ShopLimit
  }
}
    ${ShopLimitFragmentDoc}
${LimitInfoFragmentDoc}`;
export const CustomerGiftCardListDocument = gql`
    query CustomerGiftCardList($first: Int, $filter: GiftCardFilter) {
  giftCards(first: $first, filters: $filter) {
    edges {
      node {
        ...CustomerGiftCard
      }
    }
  }
}
    ${CustomerGiftCardFragmentDoc}
${MoneyFragmentDoc}`;
export const CheckIfOrderExistsDocument = gql`
    query CheckIfOrderExists($id: ID!) {
  order(id: $id) {
    id
    status
  }
}
    `;
export const SearchCatalogDocument = gql`
    query SearchCatalog($first: Int!, $query: String!) {
  categories(first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
      }
    }
  }
  collections(first: $first, filters: {search: $query}) {
    edges {
      node {
        ...Collection
      }
    }
  }
  products(first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        category {
          id
          name
        }
        name
      }
    }
  }
}
    ${CollectionFragmentDoc}`;
export const SearchCustomersDocument = gql`
    query SearchCustomers($after: String, $first: Int!, $query: String!) {
  search: customers(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        email
        firstName
        lastName
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const AttributeBulkDeleteDocument = gql`
    mutation AttributeBulkDelete($ids: [ID!]!) {
  deleteAttributes(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const AttributeDeleteDocument = gql`
    mutation AttributeDelete($id: ID!) {
  deleteAttribute(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const AttributeUpdateDocument = gql`
    mutation AttributeUpdate($id: ID!, $input: AttributeUpdateInput!) {
  updateAttribute(id: $id, data: $input) {
    result {
      ...AttributeDetails
    }
    errors {
      ...Error
    }
  }
}
    ${AttributeDetailsFragmentDoc}
${AttributeFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ErrorFragmentDoc}`;
export const ValueDeleteDocument = gql`
    mutation ValueDelete($id: ID!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  deleteValue(id: $id) {
    result {
      id
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        ...ValueList
      }
    }
    errors {
      ...Error
    }
  }
}
    ${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${ErrorFragmentDoc}`;
export const ValueUpdateDocument = gql`
    mutation ValueUpdate($id: ID!, $input: ValueUpdateInput!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  updateValue(id: $id, data: $input) {
    result {
      id
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        ...ValueList
      }
    }
    errors {
      ...Error
    }
  }
}
    ${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${ErrorFragmentDoc}`;
export const ValueCreateDocument = gql`
    mutation ValueCreate($id: ID!, $input: ValueCreationInput!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  createValue(attributeId: $id, data: $input) {
    result {
      id
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        ...ValueList
      }
    }
    errors {
      ...Error
    }
  }
}
    ${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${ErrorFragmentDoc}`;
export const AttributeCreateDocument = gql`
    mutation AttributeCreate($input: AttributeCreationInput!) {
  createAttribute(data: $input) {
    result {
      id
    }
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ValueReorderDocument = gql`
    mutation ValueReorder($id: ID!, $move: ReorderInput!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  reorderValues(attributeId: $id, moves: [$move]) {
    result {
      id
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        pageInfo {
          ...PageInfo
        }
        edges {
          cursor
          node {
            id
          }
        }
      }
    }
    errors {
      ...Error
    }
  }
}
    ${PageInfoFragmentDoc}
${ErrorFragmentDoc}`;
export const AttributeDetailsDocument = gql`
    query AttributeDetails($id: ID!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  attribute(id: $id) {
    ...AttributeDetails
    values(
      first: $firstValues
      after: $afterValues
      last: $lastValues
      before: $beforeValues
    ) {
      ...ValueList
    }
  }
}
    ${AttributeDetailsFragmentDoc}
${AttributeFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}`;
export const AttributeListDocument = gql`
    query AttributeList($filter: AttributeFilter, $before: String, $after: String, $first: Int, $last: Int, $sort: AttributeOrderingInput) {
  attributes(
    filters: $filter
    before: $before
    after: $after
    first: $first
    last: $last
    sortBy: $sort
  ) {
    edges {
      node {
        ...Attribute
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${AttributeFragmentDoc}
${PageInfoFragmentDoc}`;
export const CategoryDeleteDocument = gql`
    mutation CategoryDelete($id: ID!) {
  deleteCategory(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const CategoryCreateDocument = gql`
    mutation CategoryCreate($parentId: ID, $input: CategoryInput!) {
  createCategory(parentId: $parentId, data: $input) {
    result {
      ...CategoryDetails
    }
    errors {
      ...Error
    }
  }
}
    ${CategoryDetailsFragmentDoc}
${CategoryBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ErrorFragmentDoc}`;
export const CategoryUpdateDocument = gql`
    mutation CategoryUpdate($id: ID!, $input: CategoryInput!) {
  updateCategory(id: $id, data: $input) {
    result {
      ...CategoryDetails
    }
    errors {
      ...Error
    }
  }
}
    ${CategoryDetailsFragmentDoc}
${CategoryBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ErrorFragmentDoc}`;
export const CategoryBulkDeleteDocument = gql`
    mutation CategoryBulkDelete($ids: [ID!]!) {
  deleteCategories(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const RootCategoriesDocument = gql`
    query RootCategories($first: Int, $after: String, $last: Int, $before: String, $filter: CategoryFilter, $sort: CategoryOrderingInput) {
  categories(
    level: 0
    first: $first
    after: $after
    last: $last
    before: $before
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        ...Category
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${CategoryFragmentDoc}
${PageInfoFragmentDoc}`;
export const CategoryDetailsDocument = gql`
    query CategoryDetails($id: ID!, $first: Int, $after: String, $last: Int, $before: String) {
  category(id: $id) {
    ...CategoryDetails
    children(first: $first, after: $after, last: $last, before: $before) {
      edges {
        node {
          ...Category
        }
      }
      pageInfo {
        ...PageInfo
      }
    }
    products(first: $first, after: $after, last: $last, before: $before) {
      pageInfo {
        ...PageInfo
      }
      edges {
        cursor
        node {
          id
          name
          thumbnail {
            url
          }
        }
      }
    }
  }
}
    ${CategoryDetailsFragmentDoc}
${CategoryBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${CategoryFragmentDoc}
${PageInfoFragmentDoc}`;
export const ChannelCreateDocument = gql`
    mutation ChannelCreate($input: ChannelCreationInput!) {
  createChannel(data: $input) {
    result {
      ...ChannelDetails
    }
    errors {
      ...ChannelError
    }
  }
}
    ${ChannelDetailsFragmentDoc}
${ChannelFragmentDoc}
${WarehouseFragmentDoc}
${ChannelErrorFragmentDoc}`;
export const ChannelUpdateDocument = gql`
    mutation ChannelUpdate($id: ID!, $input: ChannelUpdateInput!) {
  updateChannel(id: $id, data: $input) {
    result {
      ...ChannelDetails
    }
    errors {
      ...ChannelError
    }
  }
}
    ${ChannelDetailsFragmentDoc}
${ChannelFragmentDoc}
${WarehouseFragmentDoc}
${ChannelErrorFragmentDoc}`;
export const ChannelDeleteDocument = gql`
    mutation ChannelDelete($id: ID!, $input: ChannelDeleteInput) {
  deleteChannel(id: $id, data: $input) {
    errors {
      ...ChannelError
    }
  }
}
    ${ChannelErrorFragmentDoc}`;
export const ChannelActivateDocument = gql`
    mutation ChannelActivate($id: ID!) {
  activateChannel(id: $id) {
    result {
      ...ChannelDetails
    }
    errors {
      ...ChannelError
    }
  }
}
    ${ChannelDetailsFragmentDoc}
${ChannelFragmentDoc}
${WarehouseFragmentDoc}
${ChannelErrorFragmentDoc}`;
export const ChannelDeactivateDocument = gql`
    mutation ChannelDeactivate($id: ID!) {
  deactivateChannel(id: $id) {
    result {
      ...ChannelDetails
    }
    errors {
      ...ChannelError
    }
  }
}
    ${ChannelDetailsFragmentDoc}
${ChannelFragmentDoc}
${WarehouseFragmentDoc}
${ChannelErrorFragmentDoc}`;
export const ChannelReorderWarehousesDocument = gql`
    mutation ChannelReorderWarehouses($channelId: ID!, $moves: [ReorderInput!]!) {
  reorderChannelWarehouses(channelId: $channelId, moves: $moves) {
    channel {
      ...ChannelDetails
    }
    errors {
      ...ChannelError
    }
  }
}
    ${ChannelDetailsFragmentDoc}
${ChannelFragmentDoc}
${WarehouseFragmentDoc}
${ChannelErrorFragmentDoc}`;
export const BaseChannelsDocument = gql`
    query BaseChannels {
  channels {
    ...Channel
  }
}
    ${ChannelFragmentDoc}`;
export const CollectionUpdateDocument = gql`
    mutation CollectionUpdate($id: ID!, $input: CollectionInput!) {
  updateCollection(id: $id, data: $input) {
    result {
      ...CollectionDetails
    }
    errors {
      ...Error
    }
  }
}
    ${CollectionDetailsFragmentDoc}
${CollectionBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ErrorFragmentDoc}`;
export const CollectionAssignProductDocument = gql`
    mutation CollectionAssignProduct($collectionId: ID!, $productIds: [ID!]!, $first: Int, $after: String, $last: Int, $before: String) {
  addProductsToCollection(collectionId: $collectionId, products: $productIds) {
    result {
      id
      products(first: $first, after: $after, before: $before, last: $last) {
        edges {
          node {
            ...CollectionProduct
          }
        }
        pageInfo {
          endCursor
          hasNextPage
          hasPreviousPage
          startCursor
        }
      }
    }
    errors {
      ...Error
    }
  }
}
    ${CollectionProductFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${ErrorFragmentDoc}`;
export const CreateCollectionDocument = gql`
    mutation CreateCollection($input: CollectionCreationInput!) {
  createCollection(data: $input) {
    result {
      ...CollectionDetails
    }
    errors {
      ...Error
    }
  }
}
    ${CollectionDetailsFragmentDoc}
${CollectionBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ErrorFragmentDoc}`;
export const RemoveCollectionDocument = gql`
    mutation RemoveCollection($id: ID!) {
  deleteCollection(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UnassignCollectionProductDocument = gql`
    mutation UnassignCollectionProduct($collectionId: ID!, $productIds: [ID!]!, $first: Int, $after: String, $last: Int, $before: String) {
  removeProductsFromCollection(collectionId: $collectionId, products: $productIds) {
    result {
      id
      products(first: $first, after: $after, before: $before, last: $last) {
        edges {
          node {
            id
            name
            productKlass {
              id
              name
            }
            thumbnail {
              url
            }
          }
        }
        pageInfo {
          endCursor
          hasNextPage
          hasPreviousPage
          startCursor
        }
      }
    }
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const CollectionBulkDeleteDocument = gql`
    mutation CollectionBulkDelete($ids: [ID!]!) {
  deleteCollections(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const CollectionChannelListingUpdateDocument = gql`
    mutation CollectionChannelListingUpdate($id: ID!, $input: CollectionChannelListingUpdateInput!) {
  updateCollectionChannelListing(id: $id, data: $input) {
    errors {
      ...CollectionChannelListingError
    }
  }
}
    ${CollectionChannelListingErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const CollectionListDocument = gql`
    query CollectionList($first: Int, $after: String, $last: Int, $before: String, $filter: CollectionFilter, $sort: CollectionOrderingInput, $channel: String) {
  collections(
    first: $first
    after: $after
    before: $before
    last: $last
    filters: $filter
    sortBy: $sort
    channel: $channel
  ) {
    edges {
      node {
        ...Collection
        products {
          totalCount
        }
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}
    ${CollectionFragmentDoc}`;
export const CollectionDetailsDocument = gql`
    query CollectionDetails($id: ID!, $first: Int, $after: String, $last: Int, $before: String) {
  collection(id: $id) {
    ...CollectionDetails
    products(first: $first, after: $after, before: $before, last: $last) {
      edges {
        node {
          ...CollectionProduct
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}
    ${CollectionDetailsFragmentDoc}
${CollectionBasicFragmentDoc}
${ImageFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${CollectionProductFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}`;
export const CheckExportFileStatusDocument = gql`
    query CheckExportFileStatus($id: ID!) {
  exportFile(id: $id) {
    id
    status
  }
}
    `;
export const CheckOrderInvoicesStatusDocument = gql`
    query CheckOrderInvoicesStatus($id: ID!) {
  order(id: $id) {
    id
    invoices {
      ...Invoice
    }
  }
}
    ${InvoiceFragmentDoc}`;
export const UpdateCustomerDocument = gql`
    mutation UpdateCustomer($id: ID!, $input: UserUpdateInput!) {
  updateUser(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...CustomerDetails
    }
  }
}
    ${ErrorFragmentDoc}
${CustomerDetailsFragmentDoc}
${CustomerFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}`;
export const CreateCustomerDocument = gql`
    mutation CreateCustomer($input: UserCreationInput!) {
  createUser(data: $input) {
    errors {
      ...Error
    }
    user {
      id
    }
  }
}
    ${ErrorFragmentDoc}`;
export const RemoveCustomerDocument = gql`
    mutation RemoveCustomer($id: ID!) {
  deleteCustomer(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const SetCustomerDefaultAddressDocument = gql`
    mutation SetCustomerDefaultAddress($addressId: ID!, $userId: ID!, $type: AddressType!) {
  setDefaultAddress(addressId: $addressId, userId: $userId, type: $type) {
    errors {
      ...Error
    }
    result {
      ...CustomerAddresses
    }
  }
}
    ${ErrorFragmentDoc}
${CustomerAddressesFragmentDoc}
${CustomerFragmentDoc}
${AddressFragmentDoc}`;
export const CreateCustomerAddressDocument = gql`
    mutation CreateCustomerAddress($id: ID!, $input: AddressUpdateInput!) {
  addAddress(userId: $id, data: $input) {
    errors {
      ...Error
    }
    address {
      ...Address
    }
    user {
      ...CustomerAddresses
    }
  }
}
    ${ErrorFragmentDoc}
${AddressFragmentDoc}
${CustomerAddressesFragmentDoc}
${CustomerFragmentDoc}`;
export const UpdateCustomerAddressDocument = gql`
    mutation UpdateCustomerAddress($id: ID!, $input: AddressUpdateInput!) {
  updateAddress(id: $id, data: $input) {
    errors {
      ...Error
    }
    address {
      ...Address
    }
  }
}
    ${ErrorFragmentDoc}
${AddressFragmentDoc}`;
export const RemoveCustomerAddressDocument = gql`
    mutation RemoveCustomerAddress($id: ID!) {
  deleteAddress(id: $id) {
    errors {
      ...Error
    }
    user {
      ...CustomerAddresses
    }
  }
}
    ${ErrorFragmentDoc}
${CustomerAddressesFragmentDoc}
${CustomerFragmentDoc}
${AddressFragmentDoc}`;
export const BulkRemoveCustomersDocument = gql`
    mutation BulkRemoveCustomers($ids: [ID!]!) {
  deleteCustomers(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ListCustomersDocument = gql`
    query ListCustomers($after: String, $before: String, $first: Int, $last: Int, $filter: CustomerFilter, $sort: UserOrderingInput, $PERMISSION_MANAGE_ORDERS: Boolean!) {
  customers(
    after: $after
    before: $before
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        ...Customer
        orders @include(if: $PERMISSION_MANAGE_ORDERS) {
          totalCount
        }
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}
    ${CustomerFragmentDoc}`;
export const CustomerDetailsDocument = gql`
    query CustomerDetails($id: ID!, $PERMISSION_MANAGE_ORDERS: Boolean!) {
  user(id: $id) {
    ...CustomerDetails
    orders(last: 5) @include(if: $PERMISSION_MANAGE_ORDERS) {
      edges {
        node {
          id
          createdAt
          number
          paymentStatus
          total {
            gross {
              currency
              amount
            }
          }
        }
      }
    }
    lastPlacedOrder: orders(last: 1) @include(if: $PERMISSION_MANAGE_ORDERS) {
      edges {
        node {
          id
          createdAt
        }
      }
    }
  }
}
    ${CustomerDetailsFragmentDoc}
${CustomerFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}`;
export const CustomerAddressesDocument = gql`
    query CustomerAddresses($id: ID!) {
  user(id: $id) {
    ...CustomerAddresses
  }
}
    ${CustomerAddressesFragmentDoc}
${CustomerFragmentDoc}
${AddressFragmentDoc}`;
export const CustomerCreateDataDocument = gql`
    query CustomerCreateData {
  shop {
    id
    countries {
      code
      name
    }
  }
}
    `;
export const SaleUpdateDocument = gql`
    mutation SaleUpdate($input: SaleInput!, $id: ID!, $channelInput: SaleChannelListingInput!) {
  updateSale(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
  }
  updateSaleChannelListing(id: $id, data: $channelInput) {
    errors {
      ...DiscountError
    }
    result {
      ...Sale
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${SaleFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const SaleCataloguesAddDocument = gql`
    mutation SaleCataloguesAdd($input: CatalogueInput!, $id: ID!, $after: String, $before: String, $first: Int, $last: Int, $includeVariants: Boolean!, $includeProducts: Boolean!, $includeCollections: Boolean!, $includeCategories: Boolean!) {
  addCataloguesToSale(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...SaleDetails
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${SaleDetailsFragmentDoc}
${SaleFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PageInfoFragmentDoc}`;
export const SaleCataloguesRemoveDocument = gql`
    mutation SaleCataloguesRemove($input: CatalogueInput!, $id: ID!, $after: String, $before: String, $first: Int, $last: Int, $includeVariants: Boolean!, $includeProducts: Boolean!, $includeCollections: Boolean!, $includeCategories: Boolean!) {
  removeCataloguesFromSale(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...SaleDetails
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${SaleDetailsFragmentDoc}
${SaleFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PageInfoFragmentDoc}`;
export const SaleCreateDocument = gql`
    mutation SaleCreate($input: SaleInput!) {
  createSale(data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...Sale
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${SaleFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const SaleDeleteDocument = gql`
    mutation SaleDelete($id: ID!) {
  deleteSale(id: $id) {
    errors {
      ...DiscountError
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const SaleBulkDeleteDocument = gql`
    mutation SaleBulkDelete($ids: [ID!]!) {
  deleteSales(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const SaleChannelListingUpdateDocument = gql`
    mutation SaleChannelListingUpdate($id: ID!, $input: SaleChannelListingInput!) {
  updateSaleChannelListing(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...Sale
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${SaleFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const VoucherChannelListingUpdateDocument = gql`
    mutation VoucherChannelListingUpdate($id: ID!, $input: VoucherChannelListingInput!) {
  updateVoucherChannelListing(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...Voucher
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${VoucherFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const VoucherUpdateDocument = gql`
    mutation VoucherUpdate($input: VoucherInput!, $id: ID!) {
  updateVoucher(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...Voucher
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${VoucherFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const VoucherCataloguesAddDocument = gql`
    mutation VoucherCataloguesAdd($input: CatalogueInput!, $id: ID!, $after: String, $before: String, $first: Int, $last: Int, $includeProducts: Boolean!, $includeCollections: Boolean!, $includeCategories: Boolean!) {
  addCataloguesToVoucher(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...VoucherDetails
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${VoucherDetailsFragmentDoc}
${VoucherFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PageInfoFragmentDoc}`;
export const VoucherCataloguesRemoveDocument = gql`
    mutation VoucherCataloguesRemove($input: CatalogueInput!, $id: ID!, $after: String, $before: String, $first: Int, $last: Int, $includeProducts: Boolean!, $includeCollections: Boolean!, $includeCategories: Boolean!) {
  removeCataloguesFromVoucher(id: $id, data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...VoucherDetails
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${VoucherDetailsFragmentDoc}
${VoucherFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PageInfoFragmentDoc}`;
export const VoucherCreateDocument = gql`
    mutation VoucherCreate($input: VoucherInput!) {
  createVoucher(data: $input) {
    errors {
      ...DiscountError
    }
    result {
      ...Voucher
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}
${VoucherFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const VoucherDeleteDocument = gql`
    mutation VoucherDelete($id: ID!) {
  deleteVoucher(id: $id) {
    errors {
      ...DiscountError
    }
  }
}
    ${DiscountErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const VoucherBulkDeleteDocument = gql`
    mutation VoucherBulkDelete($ids: [ID!]!) {
  deleteVouchers(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const SaleListDocument = gql`
    query SaleList($after: String, $before: String, $first: Int, $last: Int, $filter: SaleFilter, $sort: SaleOrderingInput, $channel: String) {
  sales(
    after: $after
    before: $before
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
    channel: $channel
  ) {
    edges {
      node {
        ...Sale
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${SaleFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${PageInfoFragmentDoc}`;
export const VoucherListDocument = gql`
    query VoucherList($after: String, $before: String, $first: Int, $last: Int, $filter: VoucherFilter, $sort: VoucherOrderingInput, $channel: String) {
  vouchers(
    after: $after
    before: $before
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
    channel: $channel
  ) {
    edges {
      node {
        ...Voucher
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${VoucherFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${PageInfoFragmentDoc}`;
export const SaleDetailsDocument = gql`
    query SaleDetails($id: ID!, $after: String, $before: String, $first: Int, $last: Int, $includeVariants: Boolean!, $includeProducts: Boolean!, $includeCollections: Boolean!, $includeCategories: Boolean!) {
  sale(id: $id) {
    ...SaleDetails
  }
}
    ${SaleDetailsFragmentDoc}
${SaleFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PageInfoFragmentDoc}`;
export const VoucherDetailsDocument = gql`
    query VoucherDetails($id: ID!, $after: String, $before: String, $first: Int, $last: Int, $includeProducts: Boolean!, $includeCollections: Boolean!, $includeCategories: Boolean!) {
  voucher(id: $id) {
    ...VoucherDetails
  }
}
    ${VoucherDetailsFragmentDoc}
${VoucherFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PageInfoFragmentDoc}`;
export const GiftCardBulkCreateDocument = gql`
    mutation GiftCardBulkCreate($input: GiftCardBulkCreationInput!) {
  createGiftCards(data: $input) {
    objects {
      id
    }
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const GiftCardCreateDocument = gql`
    mutation GiftCardCreate($input: GiftCardCreationInput!) {
  createGiftCard(data: $input) {
    result {
      code
    }
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ChannelCurrenciesDocument = gql`
    query ChannelCurrencies {
  shop {
    id
    channelCurrencies
  }
}
    `;
export const ExportGiftCardsDocument = gql`
    mutation ExportGiftCards($input: ExportGiftCardsInput!) {
  exportGiftCards(data: $input) {
    errors {
      ...Error
    }
    result {
      id
    }
  }
}
    ${ErrorFragmentDoc}`;
export const GiftCardSettingsUpdateDocument = gql`
    mutation GiftCardSettingsUpdate($input: GiftCardSettingsUpdateInput!) {
  updateGiftCardSettings(data: $input) {
    errors {
      ...Error
    }
    result {
      ...GiftCardsSettings
    }
  }
}
    ${ErrorFragmentDoc}
${GiftCardsSettingsFragmentDoc}`;
export const GiftCardSettingsDocument = gql`
    query GiftCardSettings {
  giftCardSettings {
    ...GiftCardsSettings
  }
}
    ${GiftCardsSettingsFragmentDoc}`;
export const GiftCardResendDocument = gql`
    mutation GiftCardResend($input: GiftCardResendInput!) {
  resendGiftCard(data: $input) {
    errors {
      ...Error
    }
    result {
      ...GiftCardData
    }
  }
}
    ${ErrorFragmentDoc}
${GiftCardDataFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${MoneyFragmentDoc}`;
export const GiftCardActivateDocument = gql`
    mutation GiftCardActivate($id: ID!) {
  activateGiftCard(id: $id) {
    errors {
      ...Error
    }
    result {
      ...GiftCardData
    }
  }
}
    ${ErrorFragmentDoc}
${GiftCardDataFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${MoneyFragmentDoc}`;
export const GiftCardDeactivateDocument = gql`
    mutation GiftCardDeactivate($id: ID!) {
  deactivateGiftCard(id: $id) {
    errors {
      ...Error
    }
    result {
      ...GiftCardData
    }
  }
}
    ${ErrorFragmentDoc}
${GiftCardDataFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${MoneyFragmentDoc}`;
export const GiftCardUpdateDocument = gql`
    mutation GiftCardUpdate($id: ID!, $input: GiftCardUpdateInput!) {
  updateGiftCard(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...GiftCardData
      events {
        ...GiftCardEvent
      }
    }
  }
}
    ${ErrorFragmentDoc}
${GiftCardDataFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${MoneyFragmentDoc}
${GiftCardEventFragmentDoc}`;
export const GiftCardAddNoteDocument = gql`
    mutation GiftCardAddNote($id: ID!, $input: GiftCardAddNoteInput!) {
  addNoteToGiftCard(id: $id, data: $input) {
    errors {
      ...Error
    }
    giftCard {
      ...GiftCardData
    }
    event {
      ...GiftCardEvent
    }
  }
}
    ${ErrorFragmentDoc}
${GiftCardDataFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${MoneyFragmentDoc}
${GiftCardEventFragmentDoc}`;
export const GiftCardDetailsDocument = gql`
    query GiftCardDetails($id: ID!) {
  giftCard(id: $id) {
    ...GiftCardData
    events {
      ...GiftCardEvent
    }
  }
}
    ${GiftCardDataFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${MoneyFragmentDoc}
${GiftCardEventFragmentDoc}`;
export const GiftCardCurrenciesDocument = gql`
    query GiftCardCurrencies {
  giftCardCurrencies
}
    `;
export const GiftCardBulkActivateDocument = gql`
    mutation GiftCardBulkActivate($ids: [ID!]!) {
  activateGiftCards(ids: $ids) {
    errors {
      ...Error
    }
    count
  }
}
    ${ErrorFragmentDoc}`;
export const GiftCardBulkDeactivateDocument = gql`
    mutation GiftCardBulkDeactivate($ids: [ID!]!) {
  deactivateGiftCards(ids: $ids) {
    errors {
      ...Error
    }
    count
  }
}
    ${ErrorFragmentDoc}`;
export const DeleteGiftCardDocument = gql`
    mutation DeleteGiftCard($id: ID!) {
  deleteGiftCard(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const BulkDeleteGiftCardDocument = gql`
    mutation BulkDeleteGiftCard($ids: [ID!]!) {
  deleteGiftCards(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const GiftCardListDocument = gql`
    query GiftCardList($first: Int, $after: String, $last: Int, $before: String, $filter: GiftCardFilter, $sort: GiftCardOrderingInput) {
  giftCards(
    first: $first
    after: $after
    before: $before
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        id
        usedByEmail
        last4CodeChars
        isActive
        expiryDate
        product {
          id
          name
        }
        tags {
          name
        }
        usedBy {
          ...UserBase
        }
        currentBalance {
          ...Money
        }
      }
    }
    totalCount
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}
    ${UserBaseFragmentDoc}
${UserPermissionFragmentDoc}
${MoneyFragmentDoc}`;
export const GiftCardTotalCountDocument = gql`
    query GiftCardTotalCount {
  giftCards {
    totalCount
  }
}
    `;
export const GiftCardProductsCountDocument = gql`
    query GiftCardProductsCount {
  giftCardProductKlasses: productKlasses(filters: {kind: GIFT_CARD}) {
    totalCount
  }
  giftCardProducts: products(filters: {isGiftCard: true}) {
    totalCount
  }
}
    `;
export const GroupDeleteDocument = gql`
    mutation GroupDelete($id: ID!) {
  deleteGroup(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const GroupCreateDocument = gql`
    mutation GroupCreate($input: GroupCreationInput!) {
  createGroup(data: $input) {
    errors {
      ...Error
    }
    result {
      ...GroupDetails
    }
  }
}
    ${ErrorFragmentDoc}
${GroupDetailsFragmentDoc}
${GroupFragmentDoc}
${PermissionFragmentDoc}
${GroupMemberFragmentDoc}
${StaffMemberFragmentDoc}`;
export const GroupUpdateDocument = gql`
    mutation GroupUpdate($id: ID!, $input: GroupUpdateInput!) {
  updateGroup(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...GroupDetails
    }
  }
}
    ${ErrorFragmentDoc}
${GroupDetailsFragmentDoc}
${GroupFragmentDoc}
${PermissionFragmentDoc}
${GroupMemberFragmentDoc}
${StaffMemberFragmentDoc}`;
export const GroupListDocument = gql`
    query GroupList($after: String, $before: String, $first: Int, $last: Int, $filter: GroupFilter, $sort: GroupOrderingInput) {
  groups(
    after: $after
    before: $before
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        ...Group
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${GroupFragmentDoc}
${PageInfoFragmentDoc}`;
export const GroupDetailsDocument = gql`
    query GroupDetails($id: ID!, $userId: ID!) {
  group(id: $id) {
    ...GroupDetails
  }
  user(id: $userId) {
    editableGroups {
      id
    }
    userPermissions {
      code
      sourceGroups(userId: $userId) {
        id
      }
    }
  }
}
    ${GroupDetailsFragmentDoc}
${GroupFragmentDoc}
${PermissionFragmentDoc}
${GroupMemberFragmentDoc}
${StaffMemberFragmentDoc}`;
export const MediaCreateDocument = gql`
    mutation MediaCreate($input: MediaCreationInput!) {
  createMedia(data: $input) {
    errors {
      ...Error
    }
    result {
      id
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MediaUpdateDocument = gql`
    mutation MediaUpdate($id: ID!, $input: MediaInput!) {
  updateMedia(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...MediaItemDetails
    }
  }
}
    ${ErrorFragmentDoc}
${MediaItemDetailsFragmentDoc}
${MediaItemFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const MediaRemoveDocument = gql`
    mutation MediaRemove($id: ID!) {
  deleteMediaItem(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MediaBulkPublishDocument = gql`
    mutation MediaBulkPublish($ids: [ID!]!, $isPublished: Boolean!) {
  publishMediaItems(ids: $ids, isPublished: $isPublished) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MediaBulkRemoveDocument = gql`
    mutation MediaBulkRemove($ids: [ID!]!) {
  deleteMediaItems(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MediaListDocument = gql`
    query MediaList($first: Int, $after: String, $last: Int, $before: String, $sort: MediaOrderingInput, $filter: MediaFilter) {
  media(
    before: $before
    after: $after
    first: $first
    last: $last
    sortBy: $sort
    filters: $filter
  ) {
    edges {
      node {
        ...MediaItem
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
  }
}
    ${MediaItemFragmentDoc}`;
export const MediaItemDetailsDocument = gql`
    query MediaItemDetails($id: ID!) {
  mediaItem(id: $id) {
    ...MediaItemDetails
  }
}
    ${MediaItemDetailsFragmentDoc}
${MediaItemFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const MediaCountDocument = gql`
    query MediaCount($filter: MediaFilter) {
  media(filters: $filter) {
    totalCount
  }
}
    `;
export const MenuCreateDocument = gql`
    mutation MenuCreate($input: MenuCreationInput!) {
  createMenu(data: $input) {
    errors {
      ...Error
    }
    result {
      id
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MenuBulkDeleteDocument = gql`
    mutation MenuBulkDelete($ids: [ID!]!) {
  deleteMenus(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MenuDeleteDocument = gql`
    mutation MenuDelete($id: ID!) {
  deleteMenu(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MenuItemCreateDocument = gql`
    mutation MenuItemCreate($input: MenuItemCreationInput!) {
  createMenuItem(data: $input) {
    errors {
      ...Error
    }
    result {
      menu {
        id
        items {
          ...MenuItemNested
        }
      }
    }
  }
}
    ${ErrorFragmentDoc}
${MenuItemNestedFragmentDoc}
${MenuItemFragmentDoc}`;
export const MenuUpdateDocument = gql`
    mutation MenuUpdate($id: ID!, $name: String!, $moves: [MenuItemMoveInput!]!, $removeIds: [ID!]!) {
  updateMenu(id: $id, data: {name: $name}) {
    errors {
      ...Error
    }
  }
  moveMenuItem(menuId: $id, moves: $moves) {
    errors {
      ...Error
    }
  }
  deleteMenuItems(ids: $removeIds) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const MenuItemUpdateDocument = gql`
    mutation MenuItemUpdate($id: ID!, $input: MenuItemInput!) {
  updateMenuItem(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...MenuItem
    }
  }
}
    ${ErrorFragmentDoc}
${MenuItemFragmentDoc}`;
export const MenuListDocument = gql`
    query MenuList($first: Int, $after: String, $last: Int, $before: String, $sort: MenuOrderingInput) {
  menus(first: $first, after: $after, before: $before, last: $last, sortBy: $sort) {
    edges {
      node {
        ...Menu
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${MenuFragmentDoc}
${PageInfoFragmentDoc}`;
export const MenuDetailsDocument = gql`
    query MenuDetails($id: ID!) {
  menu(id: $id) {
    ...MenuDetails
  }
}
    ${MenuDetailsFragmentDoc}
${MenuItemNestedFragmentDoc}
${MenuItemFragmentDoc}`;
export const OrderCancelDocument = gql`
    mutation OrderCancel($id: ID!) {
  cancelOrder(id: $id) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDiscountAddDocument = gql`
    mutation OrderDiscountAdd($input: OrderDiscountCommonInput!, $orderId: ID!) {
  addDiscountToOrder(data: $input, orderId: $orderId) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDiscountDeleteDocument = gql`
    mutation OrderDiscountDelete($discountId: ID!) {
  deleteOrderDiscount(discountId: $discountId) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderLineDiscountRemoveDocument = gql`
    mutation OrderLineDiscountRemove($orderLineId: ID!) {
  removeOrderLineDiscount(orderLineId: $orderLineId) {
    errors {
      ...OrderError
    }
    order {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderLineDiscountUpdateDocument = gql`
    mutation OrderLineDiscountUpdate($input: OrderDiscountCommonInput!, $orderLineId: ID!) {
  updateOrderLineDiscount(data: $input, orderLineId: $orderLineId) {
    errors {
      ...OrderError
    }
    order {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDiscountUpdateDocument = gql`
    mutation OrderDiscountUpdate($input: OrderDiscountCommonInput!, $discountId: ID!) {
  updateOrderDiscount(data: $input, discountId: $discountId) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDraftCancelDocument = gql`
    mutation OrderDraftCancel($id: ID!) {
  deleteOrderDraft(id: $id) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDraftBulkCancelDocument = gql`
    mutation OrderDraftBulkCancel($ids: [ID!]!) {
  deleteOrderDrafts(ids: $ids) {
    errors {
      ...OrderError
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const OrderConfirmDocument = gql`
    mutation OrderConfirm($id: ID!) {
  confirmOrder(id: $id) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDraftFinalizeDocument = gql`
    mutation OrderDraftFinalize($id: ID!) {
  completeOrderDraft(id: $id) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const FulfillmentReturnProductsDocument = gql`
    mutation FulfillmentReturnProducts($id: ID!, $input: OrderReturnProductsInput!) {
  returnFulfilledProducts(data: $input, order: $id) {
    errors {
      ...OrderError
    }
    result {
      fulfillment {
        id
      }
      order {
        id
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const OrderRefundDocument = gql`
    mutation OrderRefund($id: ID!, $amount: PositiveDecimal!) {
  refundOrder(id: $id, amount: $amount) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderFulfillmentRefundProductsDocument = gql`
    mutation OrderFulfillmentRefundProducts($input: OrderRefundProductsInput!, $order: ID!) {
  refundFulfilledProducts(data: $input, order: $order) {
    errors {
      ...OrderError
    }
    result {
      order {
        ...OrderDetails
      }
      fulfillment {
        ...Fulfillment
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderVoidDocument = gql`
    mutation OrderVoid($id: ID!) {
  voidOrder(id: $id) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderMarkAsPaidDocument = gql`
    mutation OrderMarkAsPaid($id: ID!, $transactionReference: String) {
  markOrderAsPaid(id: $id, transactionReference: $transactionReference) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderCaptureDocument = gql`
    mutation OrderCapture($id: ID!, $amount: PositiveDecimal!) {
  captureOrder(id: $id, amount: $amount) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderFulfillmentUpdateTrackingDocument = gql`
    mutation OrderFulfillmentUpdateTracking($id: ID!, $input: FulfillmentUpdateTrackingInput!) {
  updateFulfillmentTracking(id: $id, data: $input) {
    errors {
      ...OrderError
    }
    result {
      order {
        ...OrderDetails
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderFulfillmentApproveDocument = gql`
    mutation OrderFulfillmentApprove($id: ID!, $notifyCustomer: Boolean!, $allowStockToBeExceeded: Boolean) {
  approveFulfillment(
    id: $id
    notifyCustomer: $notifyCustomer
    allowStockToBeExceeded: $allowStockToBeExceeded
  ) {
    errors {
      ...OrderError
    }
    result {
      order {
        ...OrderDetails
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderFulfillmentCancelDocument = gql`
    mutation OrderFulfillmentCancel($id: ID!, $input: FulfillmentCancelInput!) {
  cancelFulfillment(id: $id, data: $input) {
    errors {
      ...OrderError
    }
    result {
      order {
        ...OrderDetails
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderAddNoteDocument = gql`
    mutation OrderAddNote($orderId: ID!, $input: OrderAddNoteInput!) {
  addNoteToOrder(id: $orderId, data: $input) {
    errors {
      ...OrderError
    }
    order {
      id
      events {
        ...OrderEvent
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderEventFragmentDoc}`;
export const OrderUpdateDocument = gql`
    mutation OrderUpdate($id: ID!, $input: OrderUpdateInput!) {
  updateOrder(id: $id, data: $input) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDraftUpdateDocument = gql`
    mutation OrderDraftUpdate($id: ID!, $input: DraftOrderInput!) {
  updateDraftOrder(id: $id, data: $input) {
    errors {
      ...OrderError
    }
    result {
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderShippingMethodUpdateDocument = gql`
    mutation OrderShippingMethodUpdate($id: ID!, $input: OrderUpdateShippingInput!) {
  updateOrderShipping(orderId: $id, data: $input) {
    errors {
      ...OrderError
    }
    result {
      shippingMethods {
        id
        name
      }
      total {
        tax {
          amount
          currency
        }
        gross {
          amount
          currency
        }
      }
      id
      shippingMethod {
        id
        name
        price {
          amount
          currency
        }
      }
      shippingMethodName
      shippingPrice {
        gross {
          amount
          currency
        }
      }
      ...OrderDetails
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderDraftCreateDocument = gql`
    mutation OrderDraftCreate($input: DraftOrderCreationInput!) {
  createDraftOrder(data: $input) {
    errors {
      ...OrderError
    }
    result {
      id
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const OrderLineDeleteDocument = gql`
    mutation OrderLineDelete($id: ID!) {
  deleteOrderLine(id: $id) {
    errors {
      ...OrderError
    }
    order {
      id
      lines {
        ...OrderLine
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${MoneyFragmentDoc}`;
export const OrderLinesAddDocument = gql`
    mutation OrderLinesAdd($id: ID!, $input: [OrderLineCreationInput!]!) {
  createOrderLines(id: $id, data: $input) {
    errors {
      ...OrderError
    }
    order {
      id
      lines {
        ...OrderLine
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${MoneyFragmentDoc}`;
export const OrderLineUpdateDocument = gql`
    mutation OrderLineUpdate($id: ID!, $input: OrderLineInput!) {
  updateOrderLine(id: $id, data: $input) {
    errors {
      ...OrderError
    }
    orderLine {
      ...OrderLine
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${MoneyFragmentDoc}`;
export const FulfillOrderDocument = gql`
    mutation FulfillOrder($orderId: ID!, $input: OrderFulfillInput!) {
  fulfillOrder(order: $orderId, data: $input) {
    errors {
      ...OrderError
      ... on OrderError {
        warehouse
      }
    }
    result {
      order {
        ...OrderDetails
      }
    }
  }
}
    ${OrderErrorFragmentDoc}
${ErrorFragmentDoc}
${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const InvoiceRequestDocument = gql`
    mutation InvoiceRequest($orderId: ID!) {
  requestInvoice(orderId: $orderId) {
    errors {
      ...Error
    }
    invoice {
      ...Invoice
    }
    order {
      id
      invoices {
        ...Invoice
      }
    }
  }
}
    ${ErrorFragmentDoc}
${InvoiceFragmentDoc}`;
export const InvoiceEmailSendDocument = gql`
    mutation InvoiceEmailSend($id: ID!) {
  sendInvoiceNotification(id: $id) {
    errors {
      ...Error
    }
    result {
      ...Invoice
    }
  }
}
    ${ErrorFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderSettingsUpdateDocument = gql`
    mutation OrderSettingsUpdate($orderSettingsInput: OrderSettingsUpdateInput!, $shopSettingsInput: ShopSettingsUpdateInput!) {
  updateOrderSettings(data: $orderSettingsInput) {
    errors {
      ...Error
    }
    result {
      ...OrderSettings
    }
  }
  updateShopSettings(data: $shopSettingsInput) {
    errors {
      ...Error
    }
    result {
      ...ShopOrderSettings
    }
  }
}
    ${ErrorFragmentDoc}
${OrderSettingsFragmentDoc}
${ShopOrderSettingsFragmentDoc}`;
export const OrderListDocument = gql`
    query OrderList($first: Int, $after: String, $last: Int, $before: String, $filter: OrderFilter, $sort: OrderOrderingInput) {
  orders(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        __typename
        billingAddress {
          ...Address
        }
        createdAt
        id
        number
        paymentStatus
        status
        total {
          __typename
          gross {
            __typename
            amount
            currency
          }
        }
        userEmail
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
  }
}
    ${AddressFragmentDoc}`;
export const OrderDraftListDocument = gql`
    query OrderDraftList($first: Int, $after: String, $last: Int, $before: String, $filter: OrderDraftFilter, $sort: OrderOrderingInput) {
  orderDrafts(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        __typename
        billingAddress {
          ...Address
        }
        createdAt
        id
        number
        paymentStatus
        status
        total {
          __typename
          gross {
            __typename
            amount
            currency
          }
        }
        userEmail
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
  }
}
    ${AddressFragmentDoc}`;
export const OrderDetailsDocument = gql`
    query OrderDetails($id: ID!) {
  order(id: $id) {
    ...OrderDetails
  }
  shop {
    id
    countries {
      code
      name
    }
    defaultWeightUnit
    fulfillmentAllowUnpaid
    autoApproveFulfillment
  }
}
    ${OrderDetailsFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AddressFragmentDoc}
${MoneyFragmentDoc}
${OrderEventFragmentDoc}
${FulfillmentFragmentDoc}
${OrderLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${OrderFulfillmentLineFragmentDoc}
${InvoiceFragmentDoc}`;
export const OrderFulfillDataDocument = gql`
    query OrderFulfillData($orderId: ID!) {
  order(id: $orderId) {
    id
    isPaid
    fulfillmentMethod {
      __typename
      ... on ShippingMethod {
        id
      }
      ... on Warehouse {
        id
        clickAndCollectOption
      }
    }
    lines {
      ...OrderFulfillmentLine
    }
    number
  }
}
    ${OrderFulfillmentLineFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}`;
export const OrderFulfillSettingsDocument = gql`
    query OrderFulfillSettings {
  shop {
    ...ShopOrderSettings
  }
}
    ${ShopOrderSettingsFragmentDoc}`;
export const OrderSettingsDocument = gql`
    query OrderSettings {
  orderSettings {
    ...OrderSettings
  }
  shop {
    ...ShopOrderSettings
  }
}
    ${OrderSettingsFragmentDoc}
${ShopOrderSettingsFragmentDoc}`;
export const OrderRefundDataDocument = gql`
    query OrderRefundData($orderId: ID!) {
  order(id: $orderId) {
    id
    number
    total {
      gross {
        ...Money
      }
    }
    totalCaptured {
      ...Money
    }
    shippingPrice {
      gross {
        ...Money
      }
    }
    lines {
      ...RefundOrderLine
      quantityToFulfill
    }
    fulfillments {
      id
      status
      fulfillmentOrder
      lines {
        id
        quantity
        orderLine {
          ...RefundOrderLine
        }
      }
    }
  }
}
    ${MoneyFragmentDoc}
${RefundOrderLineFragmentDoc}`;
export const ChannelUsabilityDataDocument = gql`
    query ChannelUsabilityData($channel: String!) {
  products(channel: $channel) {
    totalCount
  }
}
    `;
export const PageKlassUpdateDocument = gql`
    mutation PageKlassUpdate($id: ID!, $input: PageKlassUpdateInput!) {
  updatePageKlass(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...PageKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${PageKlassDetailsFragmentDoc}
${PageKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const PageKlassCreateDocument = gql`
    mutation PageKlassCreate($input: PageKlassCreationInput!) {
  createPageKlass(data: $input) {
    errors {
      ...Error
    }
    result {
      ...PageKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${PageKlassDetailsFragmentDoc}
${PageKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const AssignPageAttributeDocument = gql`
    mutation AssignPageAttribute($id: ID!, $ids: [ID!]!) {
  assignPageAttribute(pageKlassId: $id, attributeIds: $ids) {
    errors {
      ...Error
    }
    result {
      ...PageKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${PageKlassDetailsFragmentDoc}
${PageKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const UnassignPageAttributeDocument = gql`
    mutation UnassignPageAttribute($id: ID!, $ids: [ID!]!) {
  unassignPageAttribute(pageKlassId: $id, attributeIds: $ids) {
    errors {
      ...Error
    }
    result {
      ...PageKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${PageKlassDetailsFragmentDoc}
${PageKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const PageKlassDeleteDocument = gql`
    mutation PageKlassDelete($id: ID!) {
  deletePageKlass(id: $id) {
    errors {
      ...Error
    }
    result {
      id
    }
  }
}
    ${ErrorFragmentDoc}`;
export const PageKlassBulkDeleteDocument = gql`
    mutation PageKlassBulkDelete($ids: [ID!]!) {
  deletePageKlasses(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const PageKlassAttributeReorderDocument = gql`
    mutation PageKlassAttributeReorder($move: ReorderInput!, $pageKlassId: ID!) {
  reorderPageKlassAttributes(moves: [$move], pageKlassId: $pageKlassId) {
    errors {
      ...Error
    }
    result {
      ...PageKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${PageKlassDetailsFragmentDoc}
${PageKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const PageKlassListDocument = gql`
    query PageKlassList($after: String, $before: String, $first: Int, $last: Int, $filter: PageKlassFilter, $sort: PageKlassOrderingInput) {
  pageKlasses(
    after: $after
    before: $before
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        ...PageKlass
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageKlassFragmentDoc}
${PageInfoFragmentDoc}`;
export const PageKlassDetailsDocument = gql`
    query PageKlassDetails($id: ID!) {
  pageKlass(id: $id) {
    ...PageKlassDetails
  }
}
    ${PageKlassDetailsFragmentDoc}
${PageKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const PageCreateDocument = gql`
    mutation PageCreate($input: PageCreationInput!) {
  createPage(data: $input) {
    errors {
      ...PageErrorWithAttributes
    }
    result {
      id
    }
  }
}
    ${PageErrorWithAttributesFragmentDoc}
${ErrorFragmentDoc}`;
export const PageUpdateDocument = gql`
    mutation PageUpdate($id: ID!, $input: PageInput!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  updatePage(id: $id, data: $input) {
    errors {
      ...PageErrorWithAttributes
    }
    result {
      ...PageDetails
    }
  }
}
    ${PageErrorWithAttributesFragmentDoc}
${ErrorFragmentDoc}
${PageDetailsFragmentDoc}
${PageFragmentDoc}
${PageAttributesFragmentDoc}
${PageSelectedAttributeFragmentDoc}
${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const PageRemoveDocument = gql`
    mutation PageRemove($id: ID!) {
  deletePage(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const PageBulkPublishDocument = gql`
    mutation PageBulkPublish($ids: [ID!]!, $isPublished: Boolean!) {
  publishPages(ids: $ids, isPublished: $isPublished) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const PageBulkRemoveDocument = gql`
    mutation PageBulkRemove($ids: [ID!]!) {
  deletePages(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const PageListDocument = gql`
    query PageList($first: Int, $after: String, $last: Int, $before: String, $sort: PageOrderingInput, $filter: PageFilter) {
  pages(
    before: $before
    after: $after
    first: $first
    last: $last
    sortBy: $sort
    filters: $filter
  ) {
    edges {
      node {
        ...Page
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
  }
}
    ${PageFragmentDoc}`;
export const PageDetailsDocument = gql`
    query PageDetails($id: ID!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  page(id: $id) {
    ...PageDetails
  }
}
    ${PageDetailsFragmentDoc}
${PageFragmentDoc}
${PageAttributesFragmentDoc}
${PageSelectedAttributeFragmentDoc}
${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const PageKlassDocument = gql`
    query PageKlass($id: ID!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  pageKlass(id: $id) {
    id
    name
    attributes {
      id
      inputType
      entityType
      slug
      name
      valueRequired
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        ...ValueList
      }
    }
  }
}
    ${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}`;
export const PageCountDocument = gql`
    query PageCount($filter: PageFilter) {
  pages(filters: $filter) {
    totalCount
  }
}
    `;
export const PluginUpdateDocument = gql`
    mutation PluginUpdate($channelId: ID, $id: ID!, $input: PluginUpdateInput!) {
  updatePlugin(channelId: $channelId, id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...PluginsDetails
    }
  }
}
    ${ErrorFragmentDoc}
${PluginsDetailsFragmentDoc}
${PluginConfigurationExtendedFragmentDoc}
${PluginConfigurationBaseFragmentDoc}
${ConfigurationItemFragmentDoc}`;
export const PluginsDocument = gql`
    query Plugins($first: Int, $after: String, $last: Int, $before: String, $filter: PluginFilter, $sort: PluginOrderingInput) {
  plugins(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        ...PluginBase
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
  }
}
    ${PluginBaseFragmentDoc}
${PluginConfigurationBaseFragmentDoc}`;
export const PluginDocument = gql`
    query Plugin($id: ID!) {
  plugin(id: $id) {
    ...PluginsDetails
  }
}
    ${PluginsDetailsFragmentDoc}
${PluginConfigurationExtendedFragmentDoc}
${PluginConfigurationBaseFragmentDoc}
${ConfigurationItemFragmentDoc}`;
export const ProductKlassDeleteDocument = gql`
    mutation ProductKlassDelete($id: ID!) {
  deleteProductKlass(id: $id) {
    errors {
      ...Error
    }
    result {
      id
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductKlassBulkDeleteDocument = gql`
    mutation ProductKlassBulkDelete($ids: [ID!]!) {
  deleteProductKlasses(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductKlassUpdateDocument = gql`
    mutation ProductKlassUpdate($id: ID!, $input: ProductKlassInput!) {
  updateProductKlass(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...ProductKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${ProductKlassDetailsFragmentDoc}
${ProductKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const AssignProductAttributeDocument = gql`
    mutation AssignProductAttribute($id: ID!, $operations: [ProductAttributeAssignInput!]!) {
  assignProductAttribute(klassId: $id, operations: $operations) {
    errors {
      ...Error
    }
    productKlass {
      ...ProductKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${ProductKlassDetailsFragmentDoc}
${ProductKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const UnassignProductAttributeDocument = gql`
    mutation UnassignProductAttribute($id: ID!, $ids: [ID!]!) {
  unassignProductAttribute(klassId: $id, attributeIds: $ids) {
    errors {
      ...Error
    }
    result {
      ...ProductKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${ProductKlassDetailsFragmentDoc}
${ProductKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const ProductKlassCreateDocument = gql`
    mutation ProductKlassCreate($input: ProductKlassInput!) {
  createProductKlass(data: $input) {
    errors {
      ...Error
    }
    result {
      ...ProductKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${ProductKlassDetailsFragmentDoc}
${ProductKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const ProductKlassAttributeReorderDocument = gql`
    mutation ProductKlassAttributeReorder($move: ReorderInput!, $klassId: ID!, $type: ProductAttributeType!) {
  reorderProductKlassAttributes(moves: [$move], klassId: $klassId, type: $type) {
    errors {
      ...Error
    }
    result {
      ...ProductKlassDetails
    }
  }
}
    ${ErrorFragmentDoc}
${ProductKlassDetailsFragmentDoc}
${ProductKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const ProductAttributeAssignmentUpdateDocument = gql`
    mutation ProductAttributeAssignmentUpdate($operations: [ProductAttributeAssignmentUpdateInput!]!, $klassId: ID!) {
  updateProductAttributeAssignment(operations: $operations, klassId: $klassId) {
    errors {
      ...ProductAttributeAssignmentUpdateError
    }
    result {
      ...ProductKlassDetails
    }
  }
}
    ${ProductAttributeAssignmentUpdateErrorFragmentDoc}
${ErrorFragmentDoc}
${ProductKlassDetailsFragmentDoc}
${ProductKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const ProductKlassListDocument = gql`
    query ProductKlassList($after: String, $before: String, $first: Int, $last: Int, $filter: ProductKlassFilter, $sort: ProductKlassOrderingInput) {
  productKlasses(
    after: $after
    before: $before
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        ...ProductKlass
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${ProductKlassFragmentDoc}
${PageInfoFragmentDoc}`;
export const ProductKlassDetailsDocument = gql`
    query ProductKlassDetails($id: ID!) {
  productKlass(id: $id) {
    ...ProductKlassDetails
  }
  shop {
    id
    defaultWeightUnit
  }
}
    ${ProductKlassDetailsFragmentDoc}
${ProductKlassFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${AttributeFragmentDoc}`;
export const ProductKlassCreateDataDocument = gql`
    query ProductKlassCreateData {
  shop {
    id
    defaultWeightUnit
  }
}
    `;
export const ProductMediaCreateDocument = gql`
    mutation ProductMediaCreate($product: ID!, $image: Upload, $alt: String!, $mediaUrl: String) {
  createProductMediaItem(
    data: {alt: $alt, image: $image, product: $product, mediaUrl: $mediaUrl}
  ) {
    errors {
      ...Error
    }
    media {
      ...ProductMediaItem
    }
  }
}
    ${ErrorFragmentDoc}
${ProductMediaItemFragmentDoc}`;
export const ProductDeleteDocument = gql`
    mutation ProductDelete($id: ID!) {
  deleteProduct(id: $id) {
    errors {
      ...Error
    }
    result {
      id
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductMediaReorderDocument = gql`
    mutation ProductMediaReorder($productId: ID!, $mediaItemIds: [ID!]!) {
  reorderProductMedia(productId: $productId, mediaItemIds: $mediaItemIds) {
    errors {
      ...Error
    }
    media {
      id
      alt
      sortOrder
      url
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductSetDefaultVariantDocument = gql`
    mutation ProductSetDefaultVariant($productId: ID!, $variantId: ID!) {
  setDefaultVariant(productId: $productId, variantId: $variantId) {
    errors {
      ...Error
    }
    result {
      id
      defaultVariant {
        id
        name
      }
      variants {
        id
        name
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductDatagridUpdateDocument = gql`
    mutation ProductDatagridUpdate($id: ID!, $input: ProductInput!) {
  updateProduct(id: $id, data: $input) {
    errors {
      ...ProductErrorWithAttributes
    }
  }
}
    ${ProductErrorWithAttributesFragmentDoc}
${ErrorFragmentDoc}`;
export const ProductDatagridStockUpdateDocument = gql`
    mutation ProductDatagridStockUpdate($stocks: [StockInput!]!, $removeStocks: [ID!]!, $id: ID!) {
  deleteProductStocks(warehouseIds: $removeStocks, productId: $id) {
    errors {
      ...Error
    }
  }
  updateProductStocks(stocks: $stocks, productId: $id) {
    errors {
      ...BulkStockError
    }
  }
}
    ${ErrorFragmentDoc}
${BulkStockErrorFragmentDoc}`;
export const ProductDatagridChannelListingUpdateDocument = gql`
    mutation ProductDatagridChannelListingUpdate($id: ID!, $input: [ProductChannelListingAddInput!]!) {
  updateProductChannelListing(id: $id, data: $input) {
    errors {
      ...ProductChannelListingError
    }
  }
}
    ${ProductChannelListingErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const ProductUpdateDocument = gql`
    mutation ProductUpdate($addStocks: [StockInput!]!, $removeStocks: [ID!]!, $id: ID!, $attributes: [ValueInput!], $sku: String, $quantityLimitPerCustomer: Int, $trackInventory: Boolean!, $stocks: [StockInput!]!, $preorder: PreorderSettingsInput, $weight: Weight, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String, $name: String!) {
  deleteProductStocks(warehouseIds: $removeStocks, productId: $id) {
    errors {
      ...Error
    }
    result {
      id
      stocks {
        ...Stock
      }
    }
  }
  createProductStocks(stocks: $addStocks, productId: $id) {
    errors {
      ...BulkStockError
    }
    result {
      id
      stocks {
        ...Stock
      }
    }
  }
  updateProductStocks(stocks: $stocks, productId: $id) {
    errors {
      ...BulkStockError
    }
    result {
      ...Product
    }
  }
  updateProduct(
    id: $id
    data: {attributes: $attributes, sku: $sku, trackInventory: $trackInventory, preorder: $preorder, weight: $weight, quantityLimitPerCustomer: $quantityLimitPerCustomer, name: $name}
  ) {
    errors {
      ...ProductErrorWithAttributes
    }
    result {
      ...Product
    }
  }
}
    ${ErrorFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${BulkStockErrorFragmentDoc}
${ProductFragmentDoc}
${ProductAttributesFragmentDoc}
${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${ProductMediaItemFragmentDoc}
${ProductDetailsVariantFragmentDoc}
${PreorderFragmentDoc}
${ChannelListingProductFragmentDoc}
${PriceRangeFragmentDoc}
${MoneyFragmentDoc}
${AttributeFragmentDoc}
${ProductErrorWithAttributesFragmentDoc}`;
export const ProductMediaDeleteDocument = gql`
    mutation ProductMediaDelete($id: ID!) {
  deleteProductMediaItem(id: $id) {
    errors {
      ...Error
    }
    product {
      id
      media {
        id
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductMediaUpdateDocument = gql`
    mutation ProductMediaUpdate($id: ID!, $alt: String!) {
  updateProductMedia(id: $id, data: {alt: $alt}) {
    errors {
      ...Error
    }
    product {
      id
      media {
        ...ProductMediaItem
      }
    }
  }
}
    ${ErrorFragmentDoc}
${ProductMediaItemFragmentDoc}`;
export const ProductMediaAssignDocument = gql`
    mutation ProductMediaAssign($productId: ID!, $mediaItemId: ID!) {
  assignProductMedia(productId: $productId, mediaItemId: $mediaItemId) {
    errors {
      ...Error
    }
    product {
      id
      media {
        ...ProductMediaItem
      }
      parent {
        id
        media {
          ...ProductMediaItem
        }
        variants {
          id
          name
          ... on ConcreteProduct {
            sku
          }
          media {
            ...ProductMediaItem
          }
        }
      }
    }
  }
}
    ${ErrorFragmentDoc}
${ProductMediaItemFragmentDoc}`;
export const ProductMediaUnassignDocument = gql`
    mutation ProductMediaUnassign($productId: ID!, $mediaItemId: ID!) {
  unassignProductMedia(productId: $productId, mediaItemId: $mediaItemId) {
    errors {
      ...Error
    }
    product {
      id
      media {
        ...ProductMediaItem
      }
      parent {
        id
        media {
          ...ProductMediaItem
        }
        variants {
          id
          name
          ... on ConcreteProduct {
            sku
          }
          media {
            ...ProductMediaItem
          }
        }
      }
    }
  }
}
    ${ErrorFragmentDoc}
${ProductMediaItemFragmentDoc}`;
export const ProductBulkCreateDocument = gql`
    mutation ProductBulkCreate($id: ID!, $inputs: [ProductBulkCreationInput!]!) {
  createProducts(productId: $id, variants: $inputs) {
    errors {
      ...BulkProductError
    }
    objects {
      id
    }
  }
}
    ${BulkProductErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const ProductBulkDeleteDocument = gql`
    mutation ProductBulkDelete($ids: [ID!]!) {
  deleteProducts(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductReorderDocument = gql`
    mutation ProductReorder($move: ReorderInput!, $productId: ID!) {
  reorderProductVariants(moves: [$move], productId: $productId) {
    errors {
      ...Error
    }
    result {
      id
      variants {
        id
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ProductChannelListingUpdateDocument = gql`
    mutation ProductChannelListingUpdate($id: ID!, $input: [ProductChannelListingAddInput!]!) {
  updateProductChannelListing(id: $id, data: $input) {
    result {
      id
      channelListings {
        ...ChannelListingProduct
      }
    }
    errors {
      ...ProductChannelListingError
    }
  }
}
    ${ChannelListingProductFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PriceRangeFragmentDoc}
${MoneyFragmentDoc}
${ProductChannelListingErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const ProductPreorderDeactivateDocument = gql`
    mutation ProductPreorderDeactivate($id: ID!) {
  deactivateProductPreorder(id: $id) {
    productVariant {
      id
      preorder {
        ...Preorder
      }
    }
    errors {
      ...Error
    }
  }
}
    ${PreorderFragmentDoc}
${ErrorFragmentDoc}`;
export const InitialProductFilterAttributesDocument = gql`
    query InitialProductFilterAttributes {
  attributes(first: 100, filters: {type: PRODUCT_TYPE}) {
    edges {
      node {
        id
        name
        inputType
        slug
      }
    }
  }
}
    `;
export const InitialProductFilterCategoriesDocument = gql`
    query InitialProductFilterCategories($categories: [ID!]) {
  categories(first: 100, filters: {ids: $categories}) {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;
export const InitialProductFilterCollectionsDocument = gql`
    query InitialProductFilterCollections($collections: [ID!]) {
  collections(first: 100, filters: {ids: $collections}) {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;
export const InitialProductFilterProductKlassesDocument = gql`
    query InitialProductFilterProductKlasses($productKlasses: [ID!]) {
  productKlasses(first: 100, filters: {ids: $productKlasses}) {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;
export const ProductListDocument = gql`
    query ProductList($first: Int, $after: String, $last: Int, $before: String, $filter: ProductFilter, $channel: String, $sort: ProductOrderingInput, $hasChannel: Boolean!, $hasSelectedAttributes: Boolean!) {
  products(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
    channel: $channel
  ) {
    edges {
      node {
        ...ProductWithChannelListings
        updatedAt
        attributes @include(if: $hasSelectedAttributes) {
          ...ProductListAttribute
        }
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
  }
}
    ${ProductWithChannelListingsFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${PriceRangeFragmentDoc}
${MoneyFragmentDoc}
${ProductListAttributeFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}`;
export const ProductCountDocument = gql`
    query ProductCount($filter: ProductFilter, $channel: String) {
  products(filters: $filter, channel: $channel) {
    totalCount
  }
}
    `;
export const ProductDetailsDocument = gql`
    query ProductDetails($id: ID!, $channel: String, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  product(id: $id, channel: $channel) {
    ...Product
  }
}
    ${ProductFragmentDoc}
${ProductAttributesFragmentDoc}
${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${ProductMediaItemFragmentDoc}
${ProductDetailsVariantFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${PreorderFragmentDoc}
${ChannelListingProductFragmentDoc}
${PriceRangeFragmentDoc}
${MoneyFragmentDoc}
${AttributeFragmentDoc}`;
export const ProductKlassDocument = gql`
    query ProductKlass($id: ID!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  productKlass(id: $id) {
    id
    name
    hasVariants
    productAttributes {
      id
      inputType
      entityType
      slug
      name
      valueRequired
      unit
      values(
        first: $firstValues
        after: $afterValues
        last: $lastValues
        before: $beforeValues
      ) {
        ...ValueList
      }
    }
    taxClass {
      id
      name
    }
  }
}
    ${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}`;
export const ProductVariantDetailsDocument = gql`
    query ProductVariantDetails($id: ID!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  productVariant(id: $id) {
    ...Product
  }
}
    ${ProductFragmentDoc}
${ProductAttributesFragmentDoc}
${ValueListFragmentDoc}
${PageInfoFragmentDoc}
${ValueDetailsFragmentDoc}
${ValueFragmentDoc}
${FileFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ChannelListingProductWithoutPricingFragmentDoc}
${ProductMediaItemFragmentDoc}
${ProductDetailsVariantFragmentDoc}
${StockFragmentDoc}
${WarehouseFragmentDoc}
${PreorderFragmentDoc}
${ChannelListingProductFragmentDoc}
${PriceRangeFragmentDoc}
${MoneyFragmentDoc}
${AttributeFragmentDoc}`;
export const ProductCreateDataDocument = gql`
    query ProductCreateData($id: ID!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  product(id: $id) {
    id
    media {
      id
      sortOrder
      url
    }
    channelListings {
      id
      isPublished
      publishedAt
      channel {
        id
        name
        currencyCode
      }
    }
    name
    productKlass {
      id
    }
    thumbnail {
      url
    }
    defaultVariant {
      id
    }
    variants {
      id
      name
      ... on ConcreteProduct {
        sku
      }
      media {
        id
        url
        type
      }
    }
  }
}
    `;
export const ProductMediaByIdDocument = gql`
    query ProductMediaById($productId: ID!, $mediaItemId: ID!) {
  product(id: $productId) {
    id
    name
    mainImage: mediaById(id: $mediaItemId) {
      id
      alt
      url
      type
      oembedData
    }
    media {
      id
      url(size: 48)
      alt
      type
      oembedData
    }
  }
}
    `;
export const GridAttributesDocument = gql`
    query GridAttributes($ids: [ID!]!) {
  grid: attributes(first: 25, filters: {ids: $ids}) {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;
export const SearchAvailableInGridAttributesDocument = gql`
    query SearchAvailableInGridAttributes($first: Int!, $after: String, $query: String!) {
  availableInGrid: attributes(
    first: $first
    after: $after
    filters: {isVariantOnly: false, type: PRODUCT_TYPE, search: $query}
  ) {
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
    totalCount
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchAvailablePageAttributesDocument = gql`
    query SearchAvailablePageAttributes($id: ID!, $after: String, $first: Int!, $query: String!) {
  pageKlass(id: $id) {
    id
    availableAttributes(after: $after, first: $first, filters: {search: $query}) {
      edges {
        node {
          ...AvailableAttribute
        }
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
    ${AvailableAttributeFragmentDoc}
${PageInfoFragmentDoc}`;
export const SearchAvailableProductAttributesDocument = gql`
    query SearchAvailableProductAttributes($id: ID!, $after: String, $first: Int!, $query: String!) {
  productKlass(id: $id) {
    id
    availableAttributes(after: $after, first: $first, filters: {search: $query}) {
      edges {
        node {
          ...AvailableAttribute
        }
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
    ${AvailableAttributeFragmentDoc}
${PageInfoFragmentDoc}`;
export const SearchCategoriesDocument = gql`
    query SearchCategories($after: String, $first: Int!, $query: String!) {
  search: categories(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchCollectionsDocument = gql`
    query SearchCollections($after: String, $first: Int!, $query: String!) {
  search: collections(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchGiftCardTagsDocument = gql`
    query SearchGiftCardTags($query: String!, $first: Int!, $after: String, $last: Int, $before: String) {
  search: giftCardTags(
    filters: {search: $query}
    first: $first
    after: $after
    last: $last
    before: $before
  ) {
    totalCount
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchGroupsDocument = gql`
    query SearchGroups($after: String, $first: Int!, $query: String!) {
  search: groups(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
        userCanManage
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchMediaDocument = gql`
    query SearchMedia($after: String, $first: Int!, $query: String!) {
  search: media(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        title
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchOrderVariantDocument = gql`
    query SearchOrderVariant($channel: String!, $first: Int!, $query: String!, $after: String, $address: AddressUpdateInput, $isPublished: Boolean, $stockAvailability: StockAvailability) {
  search: products(
    first: $first
    after: $after
    filters: {search: $query, isPublished: $isPublished, stockAvailability: $stockAvailability}
    channel: $channel
  ) {
    edges {
      node {
        id
        name
        thumbnail {
          url
        }
        variants {
          id
          name
          ... on ConcreteProduct {
            sku
          }
          pricing(address: $address) {
            priceUndiscounted {
              gross {
                ...Money
              }
            }
            price {
              gross {
                ...Money
              }
            }
            onSale
          }
        }
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}
    ${MoneyFragmentDoc}`;
export const SearchPageKlassesDocument = gql`
    query SearchPageKlasses($after: String, $first: Int!, $query: String!) {
  search: pageKlasses(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchPagesDocument = gql`
    query SearchPages($after: String, $first: Int!, $query: String!) {
  search: pages(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        title
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchProductKlassesDocument = gql`
    query SearchProductKlasses($after: String, $first: Int!, $query: String!) {
  search: productKlasses(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchProductsDocument = gql`
    query SearchProducts($after: String, $first: Int!, $query: String!) {
  search: products(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        name
        thumbnail {
          url
        }
        variants {
          id
          name
          ... on ConcreteProduct {
            sku
          }
          channelListings {
            id
            channel {
              id
              isActive
              name
              currencyCode
            }
            price {
              amount
              currency
            }
          }
        }
        collections {
          id
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchStaffMembersDocument = gql`
    query SearchStaffMembers($after: String, $first: Int!, $query: String!) {
  search: staffUsers(after: $after, first: $first, filters: {search: $query}) {
    edges {
      node {
        id
        email
        firstName
        lastName
        isActive
        avatar {
          alt
          url
        }
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const SearchWarehousesDocument = gql`
    query SearchWarehouses($after: String, $first: Int!, $query: String!) {
  search: warehouses(
    after: $after
    first: $first
    sortBy: {direction: ASC, field: NAME}
    filters: {search: $query}
  ) {
    totalCount
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageInfoFragmentDoc}`;
export const DeleteShippingZoneDocument = gql`
    mutation DeleteShippingZone($id: ID!) {
  deleteShippingZone(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const BulkDeleteShippingZoneDocument = gql`
    mutation BulkDeleteShippingZone($ids: [ID!]!) {
  deleteShippingZones(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdateDefaultWeightUnitDocument = gql`
    mutation UpdateDefaultWeightUnit($unit: WeightUnit) {
  updateShopSettings(data: {defaultWeightUnit: $unit}) {
    errors {
      ...Error
    }
    result {
      defaultWeightUnit
    }
  }
}
    ${ErrorFragmentDoc}`;
export const CreateShippingZoneDocument = gql`
    mutation CreateShippingZone($input: ShippingZoneCreationInput!) {
  createShippingZone(data: $input) {
    errors {
      ...Error
    }
    result {
      countries {
        ...Country
      }
      id
      name
    }
  }
}
    ${ErrorFragmentDoc}
${CountryFragmentDoc}`;
export const UpdateShippingZoneDocument = gql`
    mutation UpdateShippingZone($id: ID!, $input: ShippingZoneUpdateInput!) {
  updateShippingZone(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      countries {
        ...Country
      }
      id
      name
    }
  }
}
    ${ErrorFragmentDoc}
${CountryFragmentDoc}`;
export const UpdateShippingRateDocument = gql`
    mutation UpdateShippingRate($id: ID!, $input: ShippingPriceInput!) {
  updateShippingPrice(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      shippingMethod {
        ...ShippingMethod
      }
    }
  }
}
    ${ErrorFragmentDoc}
${ShippingMethodFragmentDoc}
${MoneyFragmentDoc}`;
export const CreateShippingRateDocument = gql`
    mutation CreateShippingRate($input: ShippingPriceInput!) {
  createShippingPrice(data: $input) {
    errors {
      ...Error
    }
    result {
      shippingZone {
        ...ShippingZoneDetails
      }
      shippingMethod {
        ...ShippingMethod
      }
    }
  }
}
    ${ErrorFragmentDoc}
${ShippingZoneDetailsFragmentDoc}
${ShippingZoneFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ShippingMethodFragmentDoc}
${MoneyFragmentDoc}`;
export const DeleteShippingRateDocument = gql`
    mutation DeleteShippingRate($id: ID!) {
  deleteShippingPrice(id: $id) {
    errors {
      ...Error
    }
    result {
      shippingZone {
        ...ShippingZoneDetails
      }
    }
  }
}
    ${ErrorFragmentDoc}
${ShippingZoneDetailsFragmentDoc}
${ShippingZoneFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ShippingMethodFragmentDoc}
${MoneyFragmentDoc}`;
export const BulkDeleteShippingRateDocument = gql`
    mutation BulkDeleteShippingRate($ids: [ID!]!) {
  deleteShippingPrices(ids: $ids) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ShippingMethodChannelListingUpdateDocument = gql`
    mutation ShippingMethodChannelListingUpdate($id: ID!, $input: ShippingMethodChannelListingInput!) {
  updateShippingMethodChannelListing(id: $id, data: $input) {
    shippingMethod {
      ...ShippingMethod
    }
    errors {
      ...ShippingChannelsError
    }
  }
}
    ${ShippingMethodFragmentDoc}
${MoneyFragmentDoc}
${ShippingChannelsErrorFragmentDoc}
${ErrorFragmentDoc}`;
export const ShippingPriceExcludeProductDocument = gql`
    mutation ShippingPriceExcludeProduct($id: ID!, $input: ShippingPriceExcludeProductsInput!) {
  excludeProductsFromShippingPrice(id: $id, data: $input) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ShippingPriceRemoveProductFromExcludeDocument = gql`
    mutation ShippingPriceRemoveProductFromExclude($id: ID!, $products: [ID!]!) {
  removeProductFromShippingPriceExclusionList(id: $id, products: $products) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ShippingZonesDocument = gql`
    query ShippingZones($first: Int, $after: String, $last: Int, $before: String) {
  shippingZones(first: $first, after: $after, last: $last, before: $before) {
    edges {
      node {
        ...ShippingZone
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${ShippingZoneFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${PageInfoFragmentDoc}`;
export const ShippingZoneDocument = gql`
    query ShippingZone($id: ID!, $before: String, $after: String, $first: Int, $last: Int) {
  shippingZone(id: $id) {
    ...ShippingZone
    default
    shippingMethods {
      ...ShippingMethodWithExcludedProducts
    }
    channels {
      id
      name
      currencyCode
    }
    warehouses {
      id
      name
    }
  }
}
    ${ShippingZoneFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${ShippingMethodWithExcludedProductsFragmentDoc}
${ShippingMethodFragmentDoc}
${MoneyFragmentDoc}`;
export const ShippingZoneChannelsDocument = gql`
    query ShippingZoneChannels($id: ID!) {
  shippingZone(id: $id) {
    id
    channels {
      id
      name
      currencyCode
    }
  }
}
    `;
export const ChannelShippingZonesDocument = gql`
    query ChannelShippingZones($filter: ShippingZoneFilter) {
  shippingZones(filters: $filter, first: 100) {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;
export const ShippingZonesCountDocument = gql`
    query ShippingZonesCount {
  shippingZones {
    totalCount
  }
}
    `;
export const ShopSettingsUpdateDocument = gql`
    mutation ShopSettingsUpdate($shopSettingsInput: ShopSettingsUpdateInput!, $addressInput: AddressUpdateInput!) {
  updateShopSettings(data: $shopSettingsInput) {
    errors {
      ...Error
    }
    result {
      ...Shop
    }
  }
  updateShopAddress(data: $addressInput) {
    errors {
      ...Error
    }
    result {
      companyAddress {
        ...Address
      }
    }
  }
}
    ${ErrorFragmentDoc}
${ShopFragmentDoc}
${AddressFragmentDoc}`;
export const SiteSettingsDocument = gql`
    query SiteSettings {
  shop {
    ...Shop
  }
}
    ${ShopFragmentDoc}
${AddressFragmentDoc}`;
export const StaffMemberAddDocument = gql`
    mutation StaffMemberAdd($input: StaffCreationInput!) {
  createStaffMember(data: $input) {
    errors {
      ...Error
    }
    result {
      ...StaffMemberDetails
    }
  }
}
    ${ErrorFragmentDoc}
${StaffMemberDetailsFragmentDoc}
${StaffMemberFragmentDoc}`;
export const StaffMemberUpdateDocument = gql`
    mutation StaffMemberUpdate($id: ID!, $input: StaffUpdateInput!) {
  updateStaffMember(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...StaffMemberDetails
    }
  }
}
    ${ErrorFragmentDoc}
${StaffMemberDetailsFragmentDoc}
${StaffMemberFragmentDoc}`;
export const StaffMemberDeleteDocument = gql`
    mutation StaffMemberDelete($id: ID!) {
  deleteStaffMember(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const StaffAvatarUpdateDocument = gql`
    mutation StaffAvatarUpdate($image: Upload!) {
  updateUserAvatar(image: $image) {
    errors {
      ...Error
    }
    result {
      id
      avatar {
        url
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const StaffAvatarDeleteDocument = gql`
    mutation StaffAvatarDelete {
  deleteUserAvatar {
    errors {
      ...Error
    }
    result {
      id
      avatar {
        url
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const ChangeStaffPasswordDocument = gql`
    mutation ChangeStaffPassword($newPassword: String!, $oldPassword: String!) {
  changePassword(newPassword: $newPassword, oldPassword: $oldPassword) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const StaffListDocument = gql`
    query StaffList($first: Int, $after: String, $last: Int, $before: String, $filter: StaffUserFilter, $sort: UserOrderingInput) {
  staffUsers(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      cursor
      node {
        ...StaffMember
        avatar(size: 48) {
          url
        }
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
  }
}
    ${StaffMemberFragmentDoc}`;
export const StaffMemberDetailsDocument = gql`
    query StaffMemberDetails($id: ID!) {
  user(id: $id) {
    ...StaffMemberDetails
  }
}
    ${StaffMemberDetailsFragmentDoc}
${StaffMemberFragmentDoc}`;
export const TaxConfigurationUpdateDocument = gql`
    mutation TaxConfigurationUpdate($id: ID!, $input: TaxConfigurationUpdateInput!) {
  updateTaxConfiguration(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...TaxConfiguration
    }
  }
}
    ${ErrorFragmentDoc}
${TaxConfigurationFragmentDoc}
${TaxConfigurationPerCountryFragmentDoc}
${CountryWithCodeFragmentDoc}`;
export const TaxCountryConfigurationUpdateDocument = gql`
    mutation TaxCountryConfigurationUpdate($countryCode: CountryCode!, $updateTaxClassRates: [TaxClassRateInput!]!) {
  updateTaxCountryConfiguration(
    countryCode: $countryCode
    updateTaxClassRates: $updateTaxClassRates
  ) {
    errors {
      ...Error
    }
    result {
      ...TaxCountryConfiguration
    }
  }
}
    ${ErrorFragmentDoc}
${TaxCountryConfigurationFragmentDoc}
${CountryWithCodeFragmentDoc}`;
export const TaxCountryConfigurationDeleteDocument = gql`
    mutation TaxCountryConfigurationDelete($countryCode: CountryCode!) {
  deleteTaxCountryConfiguration(countryCode: $countryCode) {
    errors {
      ...Error
    }
    result {
      ...TaxCountryConfiguration
    }
  }
}
    ${ErrorFragmentDoc}
${TaxCountryConfigurationFragmentDoc}
${CountryWithCodeFragmentDoc}`;
export const TaxClassUpdateDocument = gql`
    mutation TaxClassUpdate($id: ID!, $input: TaxClassUpdateInput!) {
  updateTaxClass(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...TaxClass
    }
  }
}
    ${ErrorFragmentDoc}
${TaxClassFragmentDoc}
${TaxClassBaseFragmentDoc}
${TaxRateFragmentDoc}
${CountryWithCodeFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const TaxClassCreateDocument = gql`
    mutation TaxClassCreate($input: TaxClassCreationInput!) {
  createTaxClass(data: $input) {
    errors {
      ...Error
    }
    result {
      ...TaxClass
    }
  }
}
    ${ErrorFragmentDoc}
${TaxClassFragmentDoc}
${TaxClassBaseFragmentDoc}
${TaxRateFragmentDoc}
${CountryWithCodeFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const TaxClassDeleteDocument = gql`
    mutation TaxClassDelete($id: ID!) {
  deleteTaxClass(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const TaxConfigurationsListDocument = gql`
    query TaxConfigurationsList($before: String, $after: String, $first: Int, $last: Int, $filter: TaxConfigurationFilter) {
  taxConfigurations(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
  ) {
    edges {
      node {
        ...TaxConfiguration
      }
    }
  }
}
    ${TaxConfigurationFragmentDoc}
${TaxConfigurationPerCountryFragmentDoc}
${CountryWithCodeFragmentDoc}`;
export const TaxCountriesListDocument = gql`
    query TaxCountriesList {
  taxCountryConfigurations {
    ...TaxCountryConfiguration
  }
}
    ${TaxCountryConfigurationFragmentDoc}
${CountryWithCodeFragmentDoc}`;
export const TaxClassesListDocument = gql`
    query TaxClassesList($before: String, $after: String, $first: Int, $last: Int, $filter: TaxClassFilter, $sortBy: TaxClassOrderingInput) {
  taxClasses(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
    sortBy: $sortBy
  ) {
    edges {
      node {
        ...TaxClass
      }
    }
  }
}
    ${TaxClassFragmentDoc}
${TaxClassBaseFragmentDoc}
${TaxRateFragmentDoc}
${CountryWithCodeFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const TaxClassAssignDocument = gql`
    query TaxClassAssign($first: Int, $after: String) {
  taxClasses(first: $first, after: $after) {
    edges {
      node {
        id
        name
      }
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}
    `;
export const UpdateProductTranslationsDocument = gql`
    mutation UpdateProductTranslations($id: ID!, $input: TranslationInput!, $language: LanguageCode!) {
  translateProduct(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      description
      seoDescription
      seoTitle
      translation(languageCode: $language) {
        id
        description
        language {
          code
          language
        }
        name
        seoDescription
        seoTitle
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdateCategoryTranslationsDocument = gql`
    mutation UpdateCategoryTranslations($id: ID!, $input: TranslationInput!, $language: LanguageCode!) {
  translateCategory(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      description
      seoDescription
      seoTitle
      translation(languageCode: $language) {
        id
        description
        language {
          language
        }
        name
        seoDescription
        seoTitle
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdateCollectionTranslationsDocument = gql`
    mutation UpdateCollectionTranslations($id: ID!, $input: TranslationInput!, $language: LanguageCode!) {
  translateCollection(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      description
      seoDescription
      seoTitle
      translation(languageCode: $language) {
        id
        description
        language {
          language
        }
        name
        seoDescription
        seoTitle
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdatePageTranslationsDocument = gql`
    mutation UpdatePageTranslations($id: ID!, $input: PageTranslationInput!, $language: LanguageCode!) {
  translatePage(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      translation(languageCode: $language) {
        ...PageTranslation
      }
    }
  }
}
    ${ErrorFragmentDoc}
${PageTranslationFragmentDoc}`;
export const UpdateAttributeTranslationsDocument = gql`
    mutation UpdateAttributeTranslations($id: ID!, $input: NameTranslationInput!, $language: LanguageCode!) {
  translateAttribute(id: $id, data: $input, languageCode: $language) {
    errors {
      ...Error
    }
    result {
      id
      name
      translation(languageCode: $language) {
        id
        name
      }
    }
  }
}
    ${ErrorFragmentDoc}`;
export const UpdateMenuItemTranslationsDocument = gql`
    mutation UpdateMenuItemTranslations($id: ID!, $input: NameTranslationInput!, $language: LanguageCode!) {
  translateMenuItem(id: $id, data: $input, languageCode: $language) {
    errors {
      field
      message
    }
    result {
      id
      name
      translation(languageCode: $language) {
        id
        language {
          language
        }
        name
      }
    }
  }
}
    `;
export const CategoryTranslationsDocument = gql`
    query CategoryTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: CATEGORY
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...CategoryTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${CategoryTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const CollectionTranslationsDocument = gql`
    query CollectionTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: COLLECTION
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...CollectionTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${CollectionTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const ProductTranslationsDocument = gql`
    query ProductTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: PRODUCT
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...ProductTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${ProductTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const PageTranslationsDocument = gql`
    query PageTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: PAGE
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...PageTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${PageTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const VoucherTranslationsDocument = gql`
    query VoucherTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: VOUCHER
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...VoucherTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${VoucherTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const SaleTranslationsDocument = gql`
    query SaleTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: SALE
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...SaleTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${SaleTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const AttributeTranslationsDocument = gql`
    query AttributeTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: ATTRIBUTE
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...AttributeTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${AttributeTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const ShippingMethodTranslationsDocument = gql`
    query ShippingMethodTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: SHIPPING_METHOD
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...ShippingMethodTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${ShippingMethodTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const MenuItemTranslationsDocument = gql`
    query MenuItemTranslations($language: LanguageCode!, $first: Int, $after: String, $last: Int, $before: String) {
  translations(
    kind: MENU_ITEM
    before: $before
    after: $after
    first: $first
    last: $last
  ) {
    edges {
      node {
        ...MenuItemTranslation
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${MenuItemTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const ProductTranslationDetailsDocument = gql`
    query ProductTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(kind: PRODUCT, id: $id) {
    ...ProductTranslation
  }
}
    ${ProductTranslationFragmentDoc}`;
export const ProductVariantListDocument = gql`
    query ProductVariantList($id: ID!) {
  product(id: $id) {
    id
    variants {
      id
      name
      slug
    }
  }
}
    `;
export const ProductVariantTranslationDetailsDocument = gql`
    query ProductVariantTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(kind: PRODUCT, id: $id) {
    ...ProductTranslation
  }
}
    ${ProductTranslationFragmentDoc}`;
export const CategoryTranslationDetailsDocument = gql`
    query CategoryTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(kind: CATEGORY, id: $id) {
    ...CategoryTranslation
  }
}
    ${CategoryTranslationFragmentDoc}`;
export const CollectionTranslationDetailsDocument = gql`
    query CollectionTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(id: $id, kind: COLLECTION) {
    ...CollectionTranslation
  }
}
    ${CollectionTranslationFragmentDoc}`;
export const PageTranslationDetailsDocument = gql`
    query PageTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(id: $id, kind: PAGE) {
    ...PageTranslation
  }
}
    ${PageTranslationFragmentDoc}`;
export const SaleTranslationDetailsDocument = gql`
    query SaleTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(kind: SALE, id: $id) {
    ...SaleTranslation
  }
}
    ${SaleTranslationFragmentDoc}`;
export const VoucherTranslationDetailsDocument = gql`
    query VoucherTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(kind: VOUCHER, id: $id) {
    ...VoucherTranslation
  }
}
    ${VoucherTranslationFragmentDoc}`;
export const AttributeTranslationDetailsDocument = gql`
    query AttributeTranslationDetails($id: ID!, $language: LanguageCode!, $firstValues: Int, $afterValues: String, $lastValues: Int, $beforeValues: String) {
  translation(kind: ATTRIBUTE, id: $id) {
    ...AttributeTranslationDetails
  }
}
    ${AttributeTranslationDetailsFragmentDoc}
${AttributeChoicesTranslationFragmentDoc}
${PageInfoFragmentDoc}`;
export const ShippingMethodTranslationDetailsDocument = gql`
    query ShippingMethodTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(kind: SHIPPING_METHOD, id: $id) {
    ...ShippingMethodTranslation
  }
}
    ${ShippingMethodTranslationFragmentDoc}`;
export const MenuItemTranslationDetailsDocument = gql`
    query MenuItemTranslationDetails($id: ID!, $language: LanguageCode!) {
  translation(kind: MENU_ITEM, id: $id) {
    ...MenuItemTranslation
  }
}
    ${MenuItemTranslationFragmentDoc}`;
export const UpdateMetadataDocument = gql`
    mutation UpdateMetadata($id: ID!, $input: [MetadataInput!]!, $keysToDelete: [String!]!) {
  updateMetadata(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...Metadata
      ... on Node {
        id
      }
    }
  }
  deleteMetadata(id: $id, keys: $keysToDelete) {
    errors {
      ...Error
    }
    result {
      ...Metadata
      ... on Node {
        id
      }
    }
  }
}
    ${ErrorFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}`;
export const WarehouseDeleteDocument = gql`
    mutation WarehouseDelete($id: ID!) {
  deleteWarehouse(id: $id) {
    errors {
      ...Error
    }
  }
}
    ${ErrorFragmentDoc}`;
export const WarehouseCreateDocument = gql`
    mutation WarehouseCreate($input: WarehouseCreationInput!) {
  createWarehouse(data: $input) {
    errors {
      ...Error
    }
    result {
      ...WarehouseDetails
    }
  }
}
    ${ErrorFragmentDoc}
${WarehouseDetailsFragmentDoc}
${WarehouseWithShippingFragmentDoc}
${WarehouseFragmentDoc}
${AddressFragmentDoc}`;
export const WarehouseUpdateDocument = gql`
    mutation WarehouseUpdate($id: ID!, $input: WarehouseUpdateInput!) {
  updateWarehouse(id: $id, data: $input) {
    errors {
      ...Error
    }
    result {
      ...WarehouseDetails
    }
  }
}
    ${ErrorFragmentDoc}
${WarehouseDetailsFragmentDoc}
${WarehouseWithShippingFragmentDoc}
${WarehouseFragmentDoc}
${AddressFragmentDoc}`;
export const WarehouseListDocument = gql`
    query WarehouseList($first: Int, $after: String, $last: Int, $before: String, $filter: WarehouseFilter, $sort: WarehouseOrderingInput) {
  warehouses(
    before: $before
    after: $after
    first: $first
    last: $last
    filters: $filter
    sortBy: $sort
  ) {
    edges {
      node {
        ...WarehouseWithShipping
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}
    ${WarehouseWithShippingFragmentDoc}
${WarehouseFragmentDoc}
${PageInfoFragmentDoc}`;
export const WarehouseDetailsDocument = gql`
    query WarehouseDetails($id: ID!) {
  warehouse(id: $id) {
    ...WarehouseDetails
  }
}
    ${WarehouseDetailsFragmentDoc}
${WarehouseWithShippingFragmentDoc}
${WarehouseFragmentDoc}
${AddressFragmentDoc}`;
export const WarehousesCountDocument = gql`
    query WarehousesCount {
  warehouses {
    totalCount
  }
}
    `;
export const ShopInfoDocument = gql`
    query ShopInfo {
  shop {
    id
    ...ShopSettings
    permissions {
      code
      name
    }
  }
}
    ${ShopSettingsFragmentDoc}
${CountryFragmentDoc}
${LanguageFragmentDoc}`;
export const MainMenuDocument = gql`
    query MainMenu($channel: String!) {
  menu(slug: "navbar", channel: $channel) {
    id
    items {
      ...MenuItemWithChildren
    }
  }
}
    ${MenuItemWithChildrenFragmentDoc}
${MenuItemFragmentDoc}`;
export const GalleryMediaDocument = gql`
    query GalleryMedia($first: Int) {
  media(first: $first) {
    edges {
      node {
        id
        type
        title
        alt
        file {
          url
          contentType
        }
        width
        height
        aspectRatio
        placeholder
      }
    }
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
  }
}
    `;
export const CreateCheckoutDocument = gql`
    mutation CreateCheckout($email: String, $lines: [CheckoutLineInput!]!, $channel: String!) {
  createCheckout(data: {channel: $channel, email: $email, lines: $lines}) {
    result {
      id
    }
    errors {
      field
      message
      code
    }
  }
}
    `;
export const ProductBySlugDocument = gql`
    query ProductBySlug($slug: String!, $channel: String!) {
  product(slug: $slug, channel: $channel) {
    ...ProductDetails
  }
}
    ${ProductDetailsFragmentDoc}
${ConcreteProductDetailsFragmentDoc}
${BaseProductDetailsFragmentDoc}
${AttributeDetailsFragmentDoc}
${AttributeFragmentDoc}
${MetadataFragmentDoc}
${MetadataItemFragmentDoc}
${CategoryBasicFragmentDoc}
${ProductMediaItemFragmentDoc}
${ImageFragmentDoc}
${ProductAncestorFragmentDoc}
${ProductVariantFragmentDoc}
${MoneyFragmentDoc}
${AbstractProductDetailsFragmentDoc}`;
export type Requester<C = {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R> | AsyncIterable<R>
export function getSdk<C>(requester: Requester<C>) {
  return {
    login(variables: LoginMutationVariables, options?: C): Promise<LoginMutation> {
      return requester<LoginMutation, LoginMutationVariables>(LoginDocument, variables, options) as Promise<LoginMutation>;
    },
    AvailableExternalAuthentications(variables?: AvailableExternalAuthenticationsQueryVariables, options?: C): Promise<AvailableExternalAuthenticationsQuery> {
      return requester<AvailableExternalAuthenticationsQuery, AvailableExternalAuthenticationsQueryVariables>(AvailableExternalAuthenticationsDocument, variables, options) as Promise<AvailableExternalAuthenticationsQuery>;
    },
    FileUpload(variables: FileUploadMutationVariables, options?: C): Promise<FileUploadMutation> {
      return requester<FileUploadMutation, FileUploadMutationVariables>(FileUploadDocument, variables, options) as Promise<FileUploadMutation>;
    },
    PublicMetafields(variables: PublicMetafieldsQueryVariables, options?: C): Promise<PublicMetafieldsQuery> {
      return requester<PublicMetafieldsQuery, PublicMetafieldsQueryVariables>(PublicMetafieldsDocument, variables, options) as Promise<PublicMetafieldsQuery>;
    },
    PrivateMetafields(variables: PrivateMetafieldsQueryVariables, options?: C): Promise<PrivateMetafieldsQuery> {
      return requester<PrivateMetafieldsQuery, PrivateMetafieldsQueryVariables>(PrivateMetafieldsDocument, variables, options) as Promise<PrivateMetafieldsQuery>;
    },
    PublicMetafieldsInferred(variables: PublicMetafieldsInferredQueryVariables, options?: C): Promise<PublicMetafieldsInferredQuery> {
      return requester<PublicMetafieldsInferredQuery, PublicMetafieldsInferredQueryVariables>(PublicMetafieldsInferredDocument, variables, options) as Promise<PublicMetafieldsInferredQuery>;
    },
    PrivateMetafieldsInferred(variables: PrivateMetafieldsInferredQueryVariables, options?: C): Promise<PrivateMetafieldsInferredQuery> {
      return requester<PrivateMetafieldsInferredQuery, PrivateMetafieldsInferredQueryVariables>(PrivateMetafieldsInferredDocument, variables, options) as Promise<PrivateMetafieldsInferredQuery>;
    },
    UpdatePublicMetadata(variables: UpdatePublicMetadataMutationVariables, options?: C): Promise<UpdatePublicMetadataMutation> {
      return requester<UpdatePublicMetadataMutation, UpdatePublicMetadataMutationVariables>(UpdatePublicMetadataDocument, variables, options) as Promise<UpdatePublicMetadataMutation>;
    },
    UpdatePrivateMetadata(variables: UpdatePrivateMetadataMutationVariables, options?: C): Promise<UpdatePrivateMetadataMutation> {
      return requester<UpdatePrivateMetadataMutation, UpdatePrivateMetadataMutationVariables>(UpdatePrivateMetadataDocument, variables, options) as Promise<UpdatePrivateMetadataMutation>;
    },
    TransactionProcessedEvents(variables: TransactionProcessedEventsQueryVariables, options?: C): Promise<TransactionProcessedEventsQuery> {
      return requester<TransactionProcessedEventsQuery, TransactionProcessedEventsQueryVariables>(TransactionProcessedEventsDocument, variables, options) as Promise<TransactionProcessedEventsQuery>;
    },
    TransactionUpdateProcessedEvents(variables: TransactionUpdateProcessedEventsMutationVariables, options?: C): Promise<TransactionUpdateProcessedEventsMutation> {
      return requester<TransactionUpdateProcessedEventsMutation, TransactionUpdateProcessedEventsMutationVariables>(TransactionUpdateProcessedEventsDocument, variables, options) as Promise<TransactionUpdateProcessedEventsMutation>;
    },
    TransactionActionRequestSubscription(variables?: TransactionActionRequestSubscriptionSubscriptionVariables, options?: C): AsyncIterable<TransactionActionRequestSubscriptionSubscription> {
      return requester<TransactionActionRequestSubscriptionSubscription, TransactionActionRequestSubscriptionSubscriptionVariables>(TransactionActionRequestSubscriptionDocument, variables, options) as AsyncIterable<TransactionActionRequestSubscriptionSubscription>;
    },
    CreateWebhooks(variables: CreateWebhooksMutationVariables, options?: C): Promise<CreateWebhooksMutation> {
      return requester<CreateWebhooksMutation, CreateWebhooksMutationVariables>(CreateWebhooksDocument, variables, options) as Promise<CreateWebhooksMutation>;
    },
    CheckWebhooks(variables?: CheckWebhooksQueryVariables, options?: C): Promise<CheckWebhooksQuery> {
      return requester<CheckWebhooksQuery, CheckWebhooksQueryVariables>(CheckWebhooksDocument, variables, options) as Promise<CheckWebhooksQuery>;
    },
    AddressDelete(variables: AddressDeleteMutationVariables, options?: C): Promise<AddressDeleteMutation> {
      return requester<AddressDeleteMutation, AddressDeleteMutationVariables>(AddressDeleteDocument, variables, options) as Promise<AddressDeleteMutation>;
    },
    AddressSetDefault(variables: AddressSetDefaultMutationVariables, options?: C): Promise<AddressSetDefaultMutation> {
      return requester<AddressSetDefaultMutation, AddressSetDefaultMutationVariables>(AddressSetDefaultDocument, variables, options) as Promise<AddressSetDefaultMutation>;
    },
    CheckoutAddProductLine(variables: CheckoutAddProductLineMutationVariables, options?: C): Promise<CheckoutAddProductLineMutation> {
      return requester<CheckoutAddProductLineMutation, CheckoutAddProductLineMutationVariables>(CheckoutAddProductLineDocument, variables, options) as Promise<CheckoutAddProductLineMutation>;
    },
    CheckoutAddPromoCode(variables: CheckoutAddPromoCodeMutationVariables, options?: C): Promise<CheckoutAddPromoCodeMutation> {
      return requester<CheckoutAddPromoCodeMutation, CheckoutAddPromoCodeMutationVariables>(CheckoutAddPromoCodeDocument, variables, options) as Promise<CheckoutAddPromoCodeMutation>;
    },
    CheckoutBillingAddressUpdate(variables: CheckoutBillingAddressUpdateMutationVariables, options?: C): Promise<CheckoutBillingAddressUpdateMutation> {
      return requester<CheckoutBillingAddressUpdateMutation, CheckoutBillingAddressUpdateMutationVariables>(CheckoutBillingAddressUpdateDocument, variables, options) as Promise<CheckoutBillingAddressUpdateMutation>;
    },
    completeCheckout(variables: CompleteCheckoutMutationVariables, options?: C): Promise<CompleteCheckoutMutation> {
      return requester<CompleteCheckoutMutation, CompleteCheckoutMutationVariables>(CompleteCheckoutDocument, variables, options) as Promise<CompleteCheckoutMutation>;
    },
    CheckoutContactInfoUpdate(variables: CheckoutContactInfoUpdateMutationVariables, options?: C): Promise<CheckoutContactInfoUpdateMutation> {
      return requester<CheckoutContactInfoUpdateMutation, CheckoutContactInfoUpdateMutationVariables>(CheckoutContactInfoUpdateDocument, variables, options) as Promise<CheckoutContactInfoUpdateMutation>;
    },
    createCheckoutPayment(variables: CreateCheckoutPaymentMutationVariables, options?: C): Promise<CreateCheckoutPaymentMutation> {
      return requester<CreateCheckoutPaymentMutation, CreateCheckoutPaymentMutationVariables>(CreateCheckoutPaymentDocument, variables, options) as Promise<CreateCheckoutPaymentMutation>;
    },
    attachCustomerToCheckout(variables: AttachCustomerToCheckoutMutationVariables, options?: C): Promise<AttachCustomerToCheckoutMutation> {
      return requester<AttachCustomerToCheckoutMutation, AttachCustomerToCheckoutMutationVariables>(AttachCustomerToCheckoutDocument, variables, options) as Promise<AttachCustomerToCheckoutMutation>;
    },
    detachCustomerFromCheckout(variables: DetachCustomerFromCheckoutMutationVariables, options?: C): Promise<DetachCustomerFromCheckoutMutation> {
      return requester<DetachCustomerFromCheckoutMutation, DetachCustomerFromCheckoutMutationVariables>(DetachCustomerFromCheckoutDocument, variables, options) as Promise<DetachCustomerFromCheckoutMutation>;
    },
    updateCheckoutFulfillmentMethod(variables: UpdateCheckoutFulfillmentMethodMutationVariables, options?: C): Promise<UpdateCheckoutFulfillmentMethodMutation> {
      return requester<UpdateCheckoutFulfillmentMethodMutation, UpdateCheckoutFulfillmentMethodMutationVariables>(UpdateCheckoutFulfillmentMethodDocument, variables, options) as Promise<UpdateCheckoutFulfillmentMethodMutation>;
    },
    CheckoutLineDelete(variables: CheckoutLineDeleteMutationVariables, options?: C): Promise<CheckoutLineDeleteMutation> {
      return requester<CheckoutLineDeleteMutation, CheckoutLineDeleteMutationVariables>(CheckoutLineDeleteDocument, variables, options) as Promise<CheckoutLineDeleteMutation>;
    },
    CheckoutLineUpdate(variables: CheckoutLineUpdateMutationVariables, options?: C): Promise<CheckoutLineUpdateMutation> {
      return requester<CheckoutLineUpdateMutation, CheckoutLineUpdateMutationVariables>(CheckoutLineUpdateDocument, variables, options) as Promise<CheckoutLineUpdateMutation>;
    },
    updateCheckoutLines(variables: UpdateCheckoutLinesMutationVariables, options?: C): Promise<UpdateCheckoutLinesMutation> {
      return requester<UpdateCheckoutLinesMutation, UpdateCheckoutLinesMutationVariables>(UpdateCheckoutLinesDocument, variables, options) as Promise<UpdateCheckoutLinesMutation>;
    },
    removePromoCodeFromCheckout(variables: RemovePromoCodeFromCheckoutMutationVariables, options?: C): Promise<RemovePromoCodeFromCheckoutMutation> {
      return requester<RemovePromoCodeFromCheckoutMutation, RemovePromoCodeFromCheckoutMutationVariables>(RemovePromoCodeFromCheckoutDocument, variables, options) as Promise<RemovePromoCodeFromCheckoutMutation>;
    },
    CheckoutShippingAddressUpdate(variables: CheckoutShippingAddressUpdateMutationVariables, options?: C): Promise<CheckoutShippingAddressUpdateMutation> {
      return requester<CheckoutShippingAddressUpdateMutation, CheckoutShippingAddressUpdateMutationVariables>(CheckoutShippingAddressUpdateDocument, variables, options) as Promise<CheckoutShippingAddressUpdateMutation>;
    },
    CheckoutShippingMethodUpdate(variables: CheckoutShippingMethodUpdateMutationVariables, options?: C): Promise<CheckoutShippingMethodUpdateMutation> {
      return requester<CheckoutShippingMethodUpdateMutation, CheckoutShippingMethodUpdateMutationVariables>(CheckoutShippingMethodUpdateDocument, variables, options) as Promise<CheckoutShippingMethodUpdateMutation>;
    },
    accountConfirm(variables: AccountConfirmMutationVariables, options?: C): Promise<AccountConfirmMutation> {
      return requester<AccountConfirmMutation, AccountConfirmMutationVariables>(AccountConfirmDocument, variables, options) as Promise<AccountConfirmMutation>;
    },
    confirmEmailChange(variables: ConfirmEmailChangeMutationVariables, options?: C): Promise<ConfirmEmailChangeMutation> {
      return requester<ConfirmEmailChangeMutation, ConfirmEmailChangeMutationVariables>(ConfirmEmailChangeDocument, variables, options) as Promise<ConfirmEmailChangeMutation>;
    },
    createAccountAddress(variables: CreateAccountAddressMutationVariables, options?: C): Promise<CreateAccountAddressMutation> {
      return requester<CreateAccountAddressMutation, CreateAccountAddressMutationVariables>(CreateAccountAddressDocument, variables, options) as Promise<CreateAccountAddressMutation>;
    },
    CreateOrder(variables: CreateOrderMutationVariables, options?: C): Promise<CreateOrderMutation> {
      return requester<CreateOrderMutation, CreateOrderMutationVariables>(CreateOrderDocument, variables, options) as Promise<CreateOrderMutation>;
    },
    SetAddressDefault(variables: SetAddressDefaultMutationVariables, options?: C): Promise<SetAddressDefaultMutation> {
      return requester<SetAddressDefaultMutation, SetAddressDefaultMutationVariables>(SetAddressDefaultDocument, variables, options) as Promise<SetAddressDefaultMutation>;
    },
    deleteAccount(variables: DeleteAccountMutationVariables, options?: C): Promise<DeleteAccountMutation> {
      return requester<DeleteAccountMutation, DeleteAccountMutationVariables>(DeleteAccountDocument, variables, options) as Promise<DeleteAccountMutation>;
    },
    deleteAddress(variables: DeleteAddressMutationVariables, options?: C): Promise<DeleteAddressMutation> {
      return requester<DeleteAddressMutation, DeleteAddressMutationVariables>(DeleteAddressDocument, variables, options) as Promise<DeleteAddressMutation>;
    },
    externalAuthenticationUrl(variables: ExternalAuthenticationUrlMutationVariables, options?: C): Promise<ExternalAuthenticationUrlMutation> {
      return requester<ExternalAuthenticationUrlMutation, ExternalAuthenticationUrlMutationVariables>(ExternalAuthenticationUrlDocument, variables, options) as Promise<ExternalAuthenticationUrlMutation>;
    },
    refreshExternalToken(variables: RefreshExternalTokenMutationVariables, options?: C): Promise<RefreshExternalTokenMutation> {
      return requester<RefreshExternalTokenMutation, RefreshExternalTokenMutationVariables>(RefreshExternalTokenDocument, variables, options) as Promise<RefreshExternalTokenMutation>;
    },
    externalRefreshWithUser(variables: ExternalRefreshWithUserMutationVariables, options?: C): Promise<ExternalRefreshWithUserMutation> {
      return requester<ExternalRefreshWithUserMutation, ExternalRefreshWithUserMutationVariables>(ExternalRefreshWithUserDocument, variables, options) as Promise<ExternalRefreshWithUserMutation>;
    },
    verifyExternalToken(variables: VerifyExternalTokenMutationVariables, options?: C): Promise<VerifyExternalTokenMutation> {
      return requester<VerifyExternalTokenMutation, VerifyExternalTokenMutationVariables>(VerifyExternalTokenDocument, variables, options) as Promise<VerifyExternalTokenMutation>;
    },
    loginWithoutDetails(variables: LoginWithoutDetailsMutationVariables, options?: C): Promise<LoginWithoutDetailsMutation> {
      return requester<LoginWithoutDetailsMutation, LoginWithoutDetailsMutationVariables>(LoginWithoutDetailsDocument, variables, options) as Promise<LoginWithoutDetailsMutation>;
    },
    logout(variables?: LogoutMutationVariables, options?: C): Promise<LogoutMutation> {
      return requester<LogoutMutation, LogoutMutationVariables>(LogoutDocument, variables, options) as Promise<LogoutMutation>;
    },
    ObtainExternalAccessTokens(variables: ObtainExternalAccessTokensMutationVariables, options?: C): Promise<ObtainExternalAccessTokensMutation> {
      return requester<ObtainExternalAccessTokensMutation, ObtainExternalAccessTokensMutationVariables>(ObtainExternalAccessTokensDocument, variables, options) as Promise<ObtainExternalAccessTokensMutation>;
    },
    OrderUpdatePaymentMetafield(variables: OrderUpdatePaymentMetafieldMutationVariables, options?: C): Promise<OrderUpdatePaymentMetafieldMutation> {
      return requester<OrderUpdatePaymentMetafieldMutation, OrderUpdatePaymentMetafieldMutationVariables>(OrderUpdatePaymentMetafieldDocument, variables, options) as Promise<OrderUpdatePaymentMetafieldMutation>;
    },
    PasswordChange(variables: PasswordChangeMutationVariables, options?: C): Promise<PasswordChangeMutation> {
      return requester<PasswordChangeMutation, PasswordChangeMutationVariables>(PasswordChangeDocument, variables, options) as Promise<PasswordChangeMutation>;
    },
    refreshToken(variables: RefreshTokenMutationVariables, options?: C): Promise<RefreshTokenMutation> {
      return requester<RefreshTokenMutation, RefreshTokenMutationVariables>(RefreshTokenDocument, variables, options) as Promise<RefreshTokenMutation>;
    },
    refreshTokenWithUser(variables: RefreshTokenWithUserMutationVariables, options?: C): Promise<RefreshTokenWithUserMutation> {
      return requester<RefreshTokenWithUserMutation, RefreshTokenWithUserMutationVariables>(RefreshTokenWithUserDocument, variables, options) as Promise<RefreshTokenWithUserMutation>;
    },
    register(variables: RegisterMutationVariables, options?: C): Promise<RegisterMutation> {
      return requester<RegisterMutation, RegisterMutationVariables>(RegisterDocument, variables, options) as Promise<RegisterMutation>;
    },
    requestAccountDeletion(variables: RequestAccountDeletionMutationVariables, options?: C): Promise<RequestAccountDeletionMutation> {
      return requester<RequestAccountDeletionMutation, RequestAccountDeletionMutationVariables>(RequestAccountDeletionDocument, variables, options) as Promise<RequestAccountDeletionMutation>;
    },
    RequestEmailChange(variables: RequestEmailChangeMutationVariables, options?: C): Promise<RequestEmailChangeMutation> {
      return requester<RequestEmailChangeMutation, RequestEmailChangeMutationVariables>(RequestEmailChangeDocument, variables, options) as Promise<RequestEmailChangeMutation>;
    },
    requestPasswordReset(variables: RequestPasswordResetMutationVariables, options?: C): Promise<RequestPasswordResetMutation> {
      return requester<RequestPasswordResetMutation, RequestPasswordResetMutationVariables>(RequestPasswordResetDocument, variables, options) as Promise<RequestPasswordResetMutation>;
    },
    setAccountDefaultAddress(variables: SetAccountDefaultAddressMutationVariables, options?: C): Promise<SetAccountDefaultAddressMutation> {
      return requester<SetAccountDefaultAddressMutation, SetAccountDefaultAddressMutationVariables>(SetAccountDefaultAddressDocument, variables, options) as Promise<SetAccountDefaultAddressMutation>;
    },
    setPassword(variables: SetPasswordMutationVariables, options?: C): Promise<SetPasswordMutation> {
      return requester<SetPasswordMutation, SetPasswordMutationVariables>(SetPasswordDocument, variables, options) as Promise<SetPasswordMutation>;
    },
    TransactionCreate(variables: TransactionCreateMutationVariables, options?: C): Promise<TransactionCreateMutation> {
      return requester<TransactionCreateMutation, TransactionCreateMutationVariables>(TransactionCreateDocument, variables, options) as Promise<TransactionCreateMutation>;
    },
    TransactionUpdate(variables: TransactionUpdateMutationVariables, options?: C): Promise<TransactionUpdateMutation> {
      return requester<TransactionUpdateMutation, TransactionUpdateMutationVariables>(TransactionUpdateDocument, variables, options) as Promise<TransactionUpdateMutation>;
    },
    updateUser(variables: UpdateUserMutationVariables, options?: C): Promise<UpdateUserMutation> {
      return requester<UpdateUserMutation, UpdateUserMutationVariables>(UpdateUserDocument, variables, options) as Promise<UpdateUserMutation>;
    },
    updateUserAddress(variables: UpdateUserAddressMutationVariables, options?: C): Promise<UpdateUserAddressMutation> {
      return requester<UpdateUserAddressMutation, UpdateUserAddressMutationVariables>(UpdateUserAddressDocument, variables, options) as Promise<UpdateUserAddressMutation>;
    },
    userAddressCreate(variables: UserAddressCreateMutationVariables, options?: C): Promise<UserAddressCreateMutation> {
      return requester<UserAddressCreateMutation, UserAddressCreateMutationVariables>(UserAddressCreateDocument, variables, options) as Promise<UserAddressCreateMutation>;
    },
    userAddressDelete(variables: UserAddressDeleteMutationVariables, options?: C): Promise<UserAddressDeleteMutation> {
      return requester<UserAddressDeleteMutation, UserAddressDeleteMutationVariables>(UserAddressDeleteDocument, variables, options) as Promise<UserAddressDeleteMutation>;
    },
    userAddressUpdate(variables: UserAddressUpdateMutationVariables, options?: C): Promise<UserAddressUpdateMutation> {
      return requester<UserAddressUpdateMutation, UserAddressUpdateMutationVariables>(UserAddressUpdateDocument, variables, options) as Promise<UserAddressUpdateMutation>;
    },
    verifyToken(variables: VerifyTokenMutationVariables, options?: C): Promise<VerifyTokenMutation> {
      return requester<VerifyTokenMutation, VerifyTokenMutationVariables>(VerifyTokenDocument, variables, options) as Promise<VerifyTokenMutation>;
    },
    addressValidationRules(variables: AddressValidationRulesQueryVariables, options?: C): Promise<AddressValidationRulesQuery> {
      return requester<AddressValidationRulesQuery, AddressValidationRulesQueryVariables>(AddressValidationRulesDocument, variables, options) as Promise<AddressValidationRulesQuery>;
    },
    App(variables?: AppQueryVariables, options?: C): Promise<AppQuery> {
      return requester<AppQuery, AppQueryVariables>(AppDocument, variables, options) as Promise<AppQuery>;
    },
    AvailableShippingMethods(variables?: AvailableShippingMethodsQueryVariables, options?: C): Promise<AvailableShippingMethodsQuery> {
      return requester<AvailableShippingMethodsQuery, AvailableShippingMethodsQueryVariables>(AvailableShippingMethodsDocument, variables, options) as Promise<AvailableShippingMethodsQuery>;
    },
    CategoryBySlug(variables: CategoryBySlugQueryVariables, options?: C): Promise<CategoryBySlugQuery> {
      return requester<CategoryBySlugQuery, CategoryBySlugQueryVariables>(CategoryBySlugDocument, variables, options) as Promise<CategoryBySlugQuery>;
    },
    CategoryPaths(variables?: CategoryPathsQueryVariables, options?: C): Promise<CategoryPathsQuery> {
      return requester<CategoryPathsQuery, CategoryPathsQueryVariables>(CategoryPathsDocument, variables, options) as Promise<CategoryPathsQuery>;
    },
    Channel(variables: ChannelQueryVariables, options?: C): Promise<ChannelQuery> {
      return requester<ChannelQuery, ChannelQueryVariables>(ChannelDocument, variables, options) as Promise<ChannelQuery>;
    },
    ChannelBySlug(variables: ChannelBySlugQueryVariables, options?: C): Promise<ChannelBySlugQuery> {
      return requester<ChannelBySlugQuery, ChannelBySlugQueryVariables>(ChannelBySlugDocument, variables, options) as Promise<ChannelBySlugQuery>;
    },
    Channels(variables?: ChannelsQueryVariables, options?: C): Promise<ChannelsQuery> {
      return requester<ChannelsQuery, ChannelsQueryVariables>(ChannelsDocument, variables, options) as Promise<ChannelsQuery>;
    },
    Checkout(variables: CheckoutQueryVariables, options?: C): Promise<CheckoutQuery> {
      return requester<CheckoutQuery, CheckoutQueryVariables>(CheckoutDocument, variables, options) as Promise<CheckoutQuery>;
    },
    CollectionBySlug(variables: CollectionBySlugQueryVariables, options?: C): Promise<CollectionBySlugQuery> {
      return requester<CollectionBySlugQuery, CollectionBySlugQueryVariables>(CollectionBySlugDocument, variables, options) as Promise<CollectionBySlugQuery>;
    },
    CollectionPaths(variables?: CollectionPathsQueryVariables, options?: C): Promise<CollectionPathsQuery> {
      return requester<CollectionPathsQuery, CollectionPathsQueryVariables>(CollectionPathsDocument, variables, options) as Promise<CollectionPathsQuery>;
    },
    CurrentUserDetails(variables?: CurrentUserDetailsQueryVariables, options?: C): Promise<CurrentUserDetailsQuery> {
      return requester<CurrentUserDetailsQuery, CurrentUserDetailsQueryVariables>(CurrentUserDetailsDocument, variables, options) as Promise<CurrentUserDetailsQuery>;
    },
    FilteringAttributes(variables: FilteringAttributesQueryVariables, options?: C): Promise<FilteringAttributesQuery> {
      return requester<FilteringAttributesQuery, FilteringAttributesQueryVariables>(FilteringAttributesDocument, variables, options) as Promise<FilteringAttributesQuery>;
    },
    FooterMenu(variables?: FooterMenuQueryVariables, options?: C): Promise<FooterMenuQuery> {
      return requester<FooterMenuQuery, FooterMenuQueryVariables>(FooterMenuDocument, variables, options) as Promise<FooterMenuQuery>;
    },
    HomepageBlocks(variables: HomepageBlocksQueryVariables, options?: C): Promise<HomepageBlocksQuery> {
      return requester<HomepageBlocksQuery, HomepageBlocksQueryVariables>(HomepageBlocksDocument, variables, options) as Promise<HomepageBlocksQuery>;
    },
    Order(variables: OrderQueryVariables, options?: C): Promise<OrderQuery> {
      return requester<OrderQuery, OrderQueryVariables>(OrderDocument, variables, options) as Promise<OrderQuery>;
    },
    OrderPaymentDetails(variables: OrderPaymentDetailsQueryVariables, options?: C): Promise<OrderPaymentDetailsQuery> {
      return requester<OrderPaymentDetailsQuery, OrderPaymentDetailsQueryVariables>(OrderPaymentDetailsDocument, variables, options) as Promise<OrderPaymentDetailsQuery>;
    },
    OrderTransactions(variables: OrderTransactionsQueryVariables, options?: C): Promise<OrderTransactionsQuery> {
      return requester<OrderTransactionsQuery, OrderTransactionsQueryVariables>(OrderTransactionsDocument, variables, options) as Promise<OrderTransactionsQuery>;
    },
    Orders(variables?: OrdersQueryVariables, options?: C): Promise<OrdersQuery> {
      return requester<OrdersQuery, OrdersQueryVariables>(OrdersDocument, variables, options) as Promise<OrdersQuery>;
    },
    Page(variables: PageQueryVariables, options?: C): Promise<PageQuery> {
      return requester<PageQuery, PageQueryVariables>(PageDocument, variables, options) as Promise<PageQuery>;
    },
    PagePaths(variables?: PagePathsQueryVariables, options?: C): Promise<PagePathsQuery> {
      return requester<PagePathsQuery, PagePathsQueryVariables>(PagePathsDocument, variables, options) as Promise<PagePathsQuery>;
    },
    ProductById(variables: ProductByIdQueryVariables, options?: C): Promise<ProductByIdQuery> {
      return requester<ProductByIdQuery, ProductByIdQueryVariables>(ProductByIdDocument, variables, options) as Promise<ProductByIdQuery>;
    },
    ProductCollection(variables: ProductCollectionQueryVariables, options?: C): Promise<ProductCollectionQuery> {
      return requester<ProductCollectionQuery, ProductCollectionQueryVariables>(ProductCollectionDocument, variables, options) as Promise<ProductCollectionQuery>;
    },
    ProductPaths(variables?: ProductPathsQueryVariables, options?: C): Promise<ProductPathsQuery> {
      return requester<ProductPathsQuery, ProductPathsQueryVariables>(ProductPathsDocument, variables, options) as Promise<ProductPathsQuery>;
    },
    User(variables?: UserQueryVariables, options?: C): Promise<UserQuery> {
      return requester<UserQuery, UserQueryVariables>(UserDocument, variables, options) as Promise<UserQuery>;
    },
    UserWithoutDetails(variables?: UserWithoutDetailsQueryVariables, options?: C): Promise<UserWithoutDetailsQuery> {
      return requester<UserWithoutDetailsQuery, UserWithoutDetailsQueryVariables>(UserWithoutDetailsDocument, variables, options) as Promise<UserWithoutDetailsQuery>;
    },
    CurrentUserAddresses(variables?: CurrentUserAddressesQueryVariables, options?: C): Promise<CurrentUserAddressesQuery> {
      return requester<CurrentUserAddressesQuery, CurrentUserAddressesQueryVariables>(CurrentUserAddressesDocument, variables, options) as Promise<CurrentUserAddressesQuery>;
    },
    DeleteProducts(variables: DeleteProductsMutationVariables, options?: C): Promise<DeleteProductsMutation> {
      return requester<DeleteProductsMutation, DeleteProductsMutationVariables>(DeleteProductsDocument, variables, options) as Promise<DeleteProductsMutation>;
    },
    ProductCreate(variables: ProductCreateMutationVariables, options?: C): Promise<ProductCreateMutation> {
      return requester<ProductCreateMutation, ProductCreateMutationVariables>(ProductCreateDocument, variables, options) as Promise<ProductCreateMutation>;
    },
    SearchValues(variables: SearchValuesQueryVariables, options?: C): Promise<SearchValuesQuery> {
      return requester<SearchValuesQuery, SearchValuesQueryVariables>(SearchValuesDocument, variables, options) as Promise<SearchValuesQuery>;
    },
    SearchAttributes(variables: SearchAttributesQueryVariables, options?: C): Promise<SearchAttributesQuery> {
      return requester<SearchAttributesQuery, SearchAttributesQueryVariables>(SearchAttributesDocument, variables, options) as Promise<SearchAttributesQuery>;
    },
    ProductExport(variables: ProductExportMutationVariables, options?: C): Promise<ProductExportMutation> {
      return requester<ProductExportMutation, ProductExportMutationVariables>(ProductExportDocument, variables, options) as Promise<ProductExportMutation>;
    },
    UpdateValueTranslations(variables: UpdateValueTranslationsMutationVariables, options?: C): Promise<UpdateValueTranslationsMutation> {
      return requester<UpdateValueTranslationsMutation, UpdateValueTranslationsMutationVariables>(UpdateValueTranslationsDocument, variables, options) as Promise<UpdateValueTranslationsMutation>;
    },
    UpdateSaleTranslations(variables: UpdateSaleTranslationsMutationVariables, options?: C): Promise<UpdateSaleTranslationsMutation> {
      return requester<UpdateSaleTranslationsMutation, UpdateSaleTranslationsMutationVariables>(UpdateSaleTranslationsDocument, variables, options) as Promise<UpdateSaleTranslationsMutation>;
    },
    UpdateShippingMethodTranslations(variables: UpdateShippingMethodTranslationsMutationVariables, options?: C): Promise<UpdateShippingMethodTranslationsMutation> {
      return requester<UpdateShippingMethodTranslationsMutation, UpdateShippingMethodTranslationsMutationVariables>(UpdateShippingMethodTranslationsDocument, variables, options) as Promise<UpdateShippingMethodTranslationsMutation>;
    },
    UpdateVoucherTranslations(variables: UpdateVoucherTranslationsMutationVariables, options?: C): Promise<UpdateVoucherTranslationsMutation> {
      return requester<UpdateVoucherTranslationsMutation, UpdateVoucherTranslationsMutationVariables>(UpdateVoucherTranslationsDocument, variables, options) as Promise<UpdateVoucherTranslationsMutation>;
    },
    Home(variables: HomeQueryVariables, options?: C): Promise<HomeQuery> {
      return requester<HomeQuery, HomeQueryVariables>(HomeDocument, variables, options) as Promise<HomeQuery>;
    },
    ShopCountries(variables?: ShopCountriesQueryVariables, options?: C): Promise<ShopCountriesQuery> {
      return requester<ShopCountriesQuery, ShopCountriesQueryVariables>(ShopCountriesDocument, variables, options) as Promise<ShopCountriesQuery>;
    },
    RefreshLimits(variables: RefreshLimitsQueryVariables, options?: C): Promise<RefreshLimitsQuery> {
      return requester<RefreshLimitsQuery, RefreshLimitsQueryVariables>(RefreshLimitsDocument, variables, options) as Promise<RefreshLimitsQuery>;
    },
    CustomerGiftCardList(variables?: CustomerGiftCardListQueryVariables, options?: C): Promise<CustomerGiftCardListQuery> {
      return requester<CustomerGiftCardListQuery, CustomerGiftCardListQueryVariables>(CustomerGiftCardListDocument, variables, options) as Promise<CustomerGiftCardListQuery>;
    },
    CheckIfOrderExists(variables: CheckIfOrderExistsQueryVariables, options?: C): Promise<CheckIfOrderExistsQuery> {
      return requester<CheckIfOrderExistsQuery, CheckIfOrderExistsQueryVariables>(CheckIfOrderExistsDocument, variables, options) as Promise<CheckIfOrderExistsQuery>;
    },
    SearchCatalog(variables: SearchCatalogQueryVariables, options?: C): Promise<SearchCatalogQuery> {
      return requester<SearchCatalogQuery, SearchCatalogQueryVariables>(SearchCatalogDocument, variables, options) as Promise<SearchCatalogQuery>;
    },
    SearchCustomers(variables: SearchCustomersQueryVariables, options?: C): Promise<SearchCustomersQuery> {
      return requester<SearchCustomersQuery, SearchCustomersQueryVariables>(SearchCustomersDocument, variables, options) as Promise<SearchCustomersQuery>;
    },
    AttributeBulkDelete(variables: AttributeBulkDeleteMutationVariables, options?: C): Promise<AttributeBulkDeleteMutation> {
      return requester<AttributeBulkDeleteMutation, AttributeBulkDeleteMutationVariables>(AttributeBulkDeleteDocument, variables, options) as Promise<AttributeBulkDeleteMutation>;
    },
    AttributeDelete(variables: AttributeDeleteMutationVariables, options?: C): Promise<AttributeDeleteMutation> {
      return requester<AttributeDeleteMutation, AttributeDeleteMutationVariables>(AttributeDeleteDocument, variables, options) as Promise<AttributeDeleteMutation>;
    },
    AttributeUpdate(variables: AttributeUpdateMutationVariables, options?: C): Promise<AttributeUpdateMutation> {
      return requester<AttributeUpdateMutation, AttributeUpdateMutationVariables>(AttributeUpdateDocument, variables, options) as Promise<AttributeUpdateMutation>;
    },
    ValueDelete(variables: ValueDeleteMutationVariables, options?: C): Promise<ValueDeleteMutation> {
      return requester<ValueDeleteMutation, ValueDeleteMutationVariables>(ValueDeleteDocument, variables, options) as Promise<ValueDeleteMutation>;
    },
    ValueUpdate(variables: ValueUpdateMutationVariables, options?: C): Promise<ValueUpdateMutation> {
      return requester<ValueUpdateMutation, ValueUpdateMutationVariables>(ValueUpdateDocument, variables, options) as Promise<ValueUpdateMutation>;
    },
    ValueCreate(variables: ValueCreateMutationVariables, options?: C): Promise<ValueCreateMutation> {
      return requester<ValueCreateMutation, ValueCreateMutationVariables>(ValueCreateDocument, variables, options) as Promise<ValueCreateMutation>;
    },
    AttributeCreate(variables: AttributeCreateMutationVariables, options?: C): Promise<AttributeCreateMutation> {
      return requester<AttributeCreateMutation, AttributeCreateMutationVariables>(AttributeCreateDocument, variables, options) as Promise<AttributeCreateMutation>;
    },
    ValueReorder(variables: ValueReorderMutationVariables, options?: C): Promise<ValueReorderMutation> {
      return requester<ValueReorderMutation, ValueReorderMutationVariables>(ValueReorderDocument, variables, options) as Promise<ValueReorderMutation>;
    },
    AttributeDetails(variables: AttributeDetailsQueryVariables, options?: C): Promise<AttributeDetailsQuery> {
      return requester<AttributeDetailsQuery, AttributeDetailsQueryVariables>(AttributeDetailsDocument, variables, options) as Promise<AttributeDetailsQuery>;
    },
    AttributeList(variables?: AttributeListQueryVariables, options?: C): Promise<AttributeListQuery> {
      return requester<AttributeListQuery, AttributeListQueryVariables>(AttributeListDocument, variables, options) as Promise<AttributeListQuery>;
    },
    CategoryDelete(variables: CategoryDeleteMutationVariables, options?: C): Promise<CategoryDeleteMutation> {
      return requester<CategoryDeleteMutation, CategoryDeleteMutationVariables>(CategoryDeleteDocument, variables, options) as Promise<CategoryDeleteMutation>;
    },
    CategoryCreate(variables: CategoryCreateMutationVariables, options?: C): Promise<CategoryCreateMutation> {
      return requester<CategoryCreateMutation, CategoryCreateMutationVariables>(CategoryCreateDocument, variables, options) as Promise<CategoryCreateMutation>;
    },
    CategoryUpdate(variables: CategoryUpdateMutationVariables, options?: C): Promise<CategoryUpdateMutation> {
      return requester<CategoryUpdateMutation, CategoryUpdateMutationVariables>(CategoryUpdateDocument, variables, options) as Promise<CategoryUpdateMutation>;
    },
    CategoryBulkDelete(variables: CategoryBulkDeleteMutationVariables, options?: C): Promise<CategoryBulkDeleteMutation> {
      return requester<CategoryBulkDeleteMutation, CategoryBulkDeleteMutationVariables>(CategoryBulkDeleteDocument, variables, options) as Promise<CategoryBulkDeleteMutation>;
    },
    RootCategories(variables?: RootCategoriesQueryVariables, options?: C): Promise<RootCategoriesQuery> {
      return requester<RootCategoriesQuery, RootCategoriesQueryVariables>(RootCategoriesDocument, variables, options) as Promise<RootCategoriesQuery>;
    },
    CategoryDetails(variables: CategoryDetailsQueryVariables, options?: C): Promise<CategoryDetailsQuery> {
      return requester<CategoryDetailsQuery, CategoryDetailsQueryVariables>(CategoryDetailsDocument, variables, options) as Promise<CategoryDetailsQuery>;
    },
    ChannelCreate(variables: ChannelCreateMutationVariables, options?: C): Promise<ChannelCreateMutation> {
      return requester<ChannelCreateMutation, ChannelCreateMutationVariables>(ChannelCreateDocument, variables, options) as Promise<ChannelCreateMutation>;
    },
    ChannelUpdate(variables: ChannelUpdateMutationVariables, options?: C): Promise<ChannelUpdateMutation> {
      return requester<ChannelUpdateMutation, ChannelUpdateMutationVariables>(ChannelUpdateDocument, variables, options) as Promise<ChannelUpdateMutation>;
    },
    ChannelDelete(variables: ChannelDeleteMutationVariables, options?: C): Promise<ChannelDeleteMutation> {
      return requester<ChannelDeleteMutation, ChannelDeleteMutationVariables>(ChannelDeleteDocument, variables, options) as Promise<ChannelDeleteMutation>;
    },
    ChannelActivate(variables: ChannelActivateMutationVariables, options?: C): Promise<ChannelActivateMutation> {
      return requester<ChannelActivateMutation, ChannelActivateMutationVariables>(ChannelActivateDocument, variables, options) as Promise<ChannelActivateMutation>;
    },
    ChannelDeactivate(variables: ChannelDeactivateMutationVariables, options?: C): Promise<ChannelDeactivateMutation> {
      return requester<ChannelDeactivateMutation, ChannelDeactivateMutationVariables>(ChannelDeactivateDocument, variables, options) as Promise<ChannelDeactivateMutation>;
    },
    ChannelReorderWarehouses(variables: ChannelReorderWarehousesMutationVariables, options?: C): Promise<ChannelReorderWarehousesMutation> {
      return requester<ChannelReorderWarehousesMutation, ChannelReorderWarehousesMutationVariables>(ChannelReorderWarehousesDocument, variables, options) as Promise<ChannelReorderWarehousesMutation>;
    },
    BaseChannels(variables?: BaseChannelsQueryVariables, options?: C): Promise<BaseChannelsQuery> {
      return requester<BaseChannelsQuery, BaseChannelsQueryVariables>(BaseChannelsDocument, variables, options) as Promise<BaseChannelsQuery>;
    },
    CollectionUpdate(variables: CollectionUpdateMutationVariables, options?: C): Promise<CollectionUpdateMutation> {
      return requester<CollectionUpdateMutation, CollectionUpdateMutationVariables>(CollectionUpdateDocument, variables, options) as Promise<CollectionUpdateMutation>;
    },
    CollectionAssignProduct(variables: CollectionAssignProductMutationVariables, options?: C): Promise<CollectionAssignProductMutation> {
      return requester<CollectionAssignProductMutation, CollectionAssignProductMutationVariables>(CollectionAssignProductDocument, variables, options) as Promise<CollectionAssignProductMutation>;
    },
    CreateCollection(variables: CreateCollectionMutationVariables, options?: C): Promise<CreateCollectionMutation> {
      return requester<CreateCollectionMutation, CreateCollectionMutationVariables>(CreateCollectionDocument, variables, options) as Promise<CreateCollectionMutation>;
    },
    RemoveCollection(variables: RemoveCollectionMutationVariables, options?: C): Promise<RemoveCollectionMutation> {
      return requester<RemoveCollectionMutation, RemoveCollectionMutationVariables>(RemoveCollectionDocument, variables, options) as Promise<RemoveCollectionMutation>;
    },
    UnassignCollectionProduct(variables: UnassignCollectionProductMutationVariables, options?: C): Promise<UnassignCollectionProductMutation> {
      return requester<UnassignCollectionProductMutation, UnassignCollectionProductMutationVariables>(UnassignCollectionProductDocument, variables, options) as Promise<UnassignCollectionProductMutation>;
    },
    CollectionBulkDelete(variables: CollectionBulkDeleteMutationVariables, options?: C): Promise<CollectionBulkDeleteMutation> {
      return requester<CollectionBulkDeleteMutation, CollectionBulkDeleteMutationVariables>(CollectionBulkDeleteDocument, variables, options) as Promise<CollectionBulkDeleteMutation>;
    },
    CollectionChannelListingUpdate(variables: CollectionChannelListingUpdateMutationVariables, options?: C): Promise<CollectionChannelListingUpdateMutation> {
      return requester<CollectionChannelListingUpdateMutation, CollectionChannelListingUpdateMutationVariables>(CollectionChannelListingUpdateDocument, variables, options) as Promise<CollectionChannelListingUpdateMutation>;
    },
    CollectionList(variables?: CollectionListQueryVariables, options?: C): Promise<CollectionListQuery> {
      return requester<CollectionListQuery, CollectionListQueryVariables>(CollectionListDocument, variables, options) as Promise<CollectionListQuery>;
    },
    CollectionDetails(variables: CollectionDetailsQueryVariables, options?: C): Promise<CollectionDetailsQuery> {
      return requester<CollectionDetailsQuery, CollectionDetailsQueryVariables>(CollectionDetailsDocument, variables, options) as Promise<CollectionDetailsQuery>;
    },
    CheckExportFileStatus(variables: CheckExportFileStatusQueryVariables, options?: C): Promise<CheckExportFileStatusQuery> {
      return requester<CheckExportFileStatusQuery, CheckExportFileStatusQueryVariables>(CheckExportFileStatusDocument, variables, options) as Promise<CheckExportFileStatusQuery>;
    },
    CheckOrderInvoicesStatus(variables: CheckOrderInvoicesStatusQueryVariables, options?: C): Promise<CheckOrderInvoicesStatusQuery> {
      return requester<CheckOrderInvoicesStatusQuery, CheckOrderInvoicesStatusQueryVariables>(CheckOrderInvoicesStatusDocument, variables, options) as Promise<CheckOrderInvoicesStatusQuery>;
    },
    UpdateCustomer(variables: UpdateCustomerMutationVariables, options?: C): Promise<UpdateCustomerMutation> {
      return requester<UpdateCustomerMutation, UpdateCustomerMutationVariables>(UpdateCustomerDocument, variables, options) as Promise<UpdateCustomerMutation>;
    },
    CreateCustomer(variables: CreateCustomerMutationVariables, options?: C): Promise<CreateCustomerMutation> {
      return requester<CreateCustomerMutation, CreateCustomerMutationVariables>(CreateCustomerDocument, variables, options) as Promise<CreateCustomerMutation>;
    },
    RemoveCustomer(variables: RemoveCustomerMutationVariables, options?: C): Promise<RemoveCustomerMutation> {
      return requester<RemoveCustomerMutation, RemoveCustomerMutationVariables>(RemoveCustomerDocument, variables, options) as Promise<RemoveCustomerMutation>;
    },
    SetCustomerDefaultAddress(variables: SetCustomerDefaultAddressMutationVariables, options?: C): Promise<SetCustomerDefaultAddressMutation> {
      return requester<SetCustomerDefaultAddressMutation, SetCustomerDefaultAddressMutationVariables>(SetCustomerDefaultAddressDocument, variables, options) as Promise<SetCustomerDefaultAddressMutation>;
    },
    CreateCustomerAddress(variables: CreateCustomerAddressMutationVariables, options?: C): Promise<CreateCustomerAddressMutation> {
      return requester<CreateCustomerAddressMutation, CreateCustomerAddressMutationVariables>(CreateCustomerAddressDocument, variables, options) as Promise<CreateCustomerAddressMutation>;
    },
    UpdateCustomerAddress(variables: UpdateCustomerAddressMutationVariables, options?: C): Promise<UpdateCustomerAddressMutation> {
      return requester<UpdateCustomerAddressMutation, UpdateCustomerAddressMutationVariables>(UpdateCustomerAddressDocument, variables, options) as Promise<UpdateCustomerAddressMutation>;
    },
    RemoveCustomerAddress(variables: RemoveCustomerAddressMutationVariables, options?: C): Promise<RemoveCustomerAddressMutation> {
      return requester<RemoveCustomerAddressMutation, RemoveCustomerAddressMutationVariables>(RemoveCustomerAddressDocument, variables, options) as Promise<RemoveCustomerAddressMutation>;
    },
    BulkRemoveCustomers(variables: BulkRemoveCustomersMutationVariables, options?: C): Promise<BulkRemoveCustomersMutation> {
      return requester<BulkRemoveCustomersMutation, BulkRemoveCustomersMutationVariables>(BulkRemoveCustomersDocument, variables, options) as Promise<BulkRemoveCustomersMutation>;
    },
    ListCustomers(variables: ListCustomersQueryVariables, options?: C): Promise<ListCustomersQuery> {
      return requester<ListCustomersQuery, ListCustomersQueryVariables>(ListCustomersDocument, variables, options) as Promise<ListCustomersQuery>;
    },
    CustomerDetails(variables: CustomerDetailsQueryVariables, options?: C): Promise<CustomerDetailsQuery> {
      return requester<CustomerDetailsQuery, CustomerDetailsQueryVariables>(CustomerDetailsDocument, variables, options) as Promise<CustomerDetailsQuery>;
    },
    CustomerAddresses(variables: CustomerAddressesQueryVariables, options?: C): Promise<CustomerAddressesQuery> {
      return requester<CustomerAddressesQuery, CustomerAddressesQueryVariables>(CustomerAddressesDocument, variables, options) as Promise<CustomerAddressesQuery>;
    },
    CustomerCreateData(variables?: CustomerCreateDataQueryVariables, options?: C): Promise<CustomerCreateDataQuery> {
      return requester<CustomerCreateDataQuery, CustomerCreateDataQueryVariables>(CustomerCreateDataDocument, variables, options) as Promise<CustomerCreateDataQuery>;
    },
    SaleUpdate(variables: SaleUpdateMutationVariables, options?: C): Promise<SaleUpdateMutation> {
      return requester<SaleUpdateMutation, SaleUpdateMutationVariables>(SaleUpdateDocument, variables, options) as Promise<SaleUpdateMutation>;
    },
    SaleCataloguesAdd(variables: SaleCataloguesAddMutationVariables, options?: C): Promise<SaleCataloguesAddMutation> {
      return requester<SaleCataloguesAddMutation, SaleCataloguesAddMutationVariables>(SaleCataloguesAddDocument, variables, options) as Promise<SaleCataloguesAddMutation>;
    },
    SaleCataloguesRemove(variables: SaleCataloguesRemoveMutationVariables, options?: C): Promise<SaleCataloguesRemoveMutation> {
      return requester<SaleCataloguesRemoveMutation, SaleCataloguesRemoveMutationVariables>(SaleCataloguesRemoveDocument, variables, options) as Promise<SaleCataloguesRemoveMutation>;
    },
    SaleCreate(variables: SaleCreateMutationVariables, options?: C): Promise<SaleCreateMutation> {
      return requester<SaleCreateMutation, SaleCreateMutationVariables>(SaleCreateDocument, variables, options) as Promise<SaleCreateMutation>;
    },
    SaleDelete(variables: SaleDeleteMutationVariables, options?: C): Promise<SaleDeleteMutation> {
      return requester<SaleDeleteMutation, SaleDeleteMutationVariables>(SaleDeleteDocument, variables, options) as Promise<SaleDeleteMutation>;
    },
    SaleBulkDelete(variables: SaleBulkDeleteMutationVariables, options?: C): Promise<SaleBulkDeleteMutation> {
      return requester<SaleBulkDeleteMutation, SaleBulkDeleteMutationVariables>(SaleBulkDeleteDocument, variables, options) as Promise<SaleBulkDeleteMutation>;
    },
    SaleChannelListingUpdate(variables: SaleChannelListingUpdateMutationVariables, options?: C): Promise<SaleChannelListingUpdateMutation> {
      return requester<SaleChannelListingUpdateMutation, SaleChannelListingUpdateMutationVariables>(SaleChannelListingUpdateDocument, variables, options) as Promise<SaleChannelListingUpdateMutation>;
    },
    VoucherChannelListingUpdate(variables: VoucherChannelListingUpdateMutationVariables, options?: C): Promise<VoucherChannelListingUpdateMutation> {
      return requester<VoucherChannelListingUpdateMutation, VoucherChannelListingUpdateMutationVariables>(VoucherChannelListingUpdateDocument, variables, options) as Promise<VoucherChannelListingUpdateMutation>;
    },
    VoucherUpdate(variables: VoucherUpdateMutationVariables, options?: C): Promise<VoucherUpdateMutation> {
      return requester<VoucherUpdateMutation, VoucherUpdateMutationVariables>(VoucherUpdateDocument, variables, options) as Promise<VoucherUpdateMutation>;
    },
    VoucherCataloguesAdd(variables: VoucherCataloguesAddMutationVariables, options?: C): Promise<VoucherCataloguesAddMutation> {
      return requester<VoucherCataloguesAddMutation, VoucherCataloguesAddMutationVariables>(VoucherCataloguesAddDocument, variables, options) as Promise<VoucherCataloguesAddMutation>;
    },
    VoucherCataloguesRemove(variables: VoucherCataloguesRemoveMutationVariables, options?: C): Promise<VoucherCataloguesRemoveMutation> {
      return requester<VoucherCataloguesRemoveMutation, VoucherCataloguesRemoveMutationVariables>(VoucherCataloguesRemoveDocument, variables, options) as Promise<VoucherCataloguesRemoveMutation>;
    },
    VoucherCreate(variables: VoucherCreateMutationVariables, options?: C): Promise<VoucherCreateMutation> {
      return requester<VoucherCreateMutation, VoucherCreateMutationVariables>(VoucherCreateDocument, variables, options) as Promise<VoucherCreateMutation>;
    },
    VoucherDelete(variables: VoucherDeleteMutationVariables, options?: C): Promise<VoucherDeleteMutation> {
      return requester<VoucherDeleteMutation, VoucherDeleteMutationVariables>(VoucherDeleteDocument, variables, options) as Promise<VoucherDeleteMutation>;
    },
    VoucherBulkDelete(variables: VoucherBulkDeleteMutationVariables, options?: C): Promise<VoucherBulkDeleteMutation> {
      return requester<VoucherBulkDeleteMutation, VoucherBulkDeleteMutationVariables>(VoucherBulkDeleteDocument, variables, options) as Promise<VoucherBulkDeleteMutation>;
    },
    SaleList(variables?: SaleListQueryVariables, options?: C): Promise<SaleListQuery> {
      return requester<SaleListQuery, SaleListQueryVariables>(SaleListDocument, variables, options) as Promise<SaleListQuery>;
    },
    VoucherList(variables?: VoucherListQueryVariables, options?: C): Promise<VoucherListQuery> {
      return requester<VoucherListQuery, VoucherListQueryVariables>(VoucherListDocument, variables, options) as Promise<VoucherListQuery>;
    },
    SaleDetails(variables: SaleDetailsQueryVariables, options?: C): Promise<SaleDetailsQuery> {
      return requester<SaleDetailsQuery, SaleDetailsQueryVariables>(SaleDetailsDocument, variables, options) as Promise<SaleDetailsQuery>;
    },
    VoucherDetails(variables: VoucherDetailsQueryVariables, options?: C): Promise<VoucherDetailsQuery> {
      return requester<VoucherDetailsQuery, VoucherDetailsQueryVariables>(VoucherDetailsDocument, variables, options) as Promise<VoucherDetailsQuery>;
    },
    GiftCardBulkCreate(variables: GiftCardBulkCreateMutationVariables, options?: C): Promise<GiftCardBulkCreateMutation> {
      return requester<GiftCardBulkCreateMutation, GiftCardBulkCreateMutationVariables>(GiftCardBulkCreateDocument, variables, options) as Promise<GiftCardBulkCreateMutation>;
    },
    GiftCardCreate(variables: GiftCardCreateMutationVariables, options?: C): Promise<GiftCardCreateMutation> {
      return requester<GiftCardCreateMutation, GiftCardCreateMutationVariables>(GiftCardCreateDocument, variables, options) as Promise<GiftCardCreateMutation>;
    },
    ChannelCurrencies(variables?: ChannelCurrenciesQueryVariables, options?: C): Promise<ChannelCurrenciesQuery> {
      return requester<ChannelCurrenciesQuery, ChannelCurrenciesQueryVariables>(ChannelCurrenciesDocument, variables, options) as Promise<ChannelCurrenciesQuery>;
    },
    ExportGiftCards(variables: ExportGiftCardsMutationVariables, options?: C): Promise<ExportGiftCardsMutation> {
      return requester<ExportGiftCardsMutation, ExportGiftCardsMutationVariables>(ExportGiftCardsDocument, variables, options) as Promise<ExportGiftCardsMutation>;
    },
    GiftCardSettingsUpdate(variables: GiftCardSettingsUpdateMutationVariables, options?: C): Promise<GiftCardSettingsUpdateMutation> {
      return requester<GiftCardSettingsUpdateMutation, GiftCardSettingsUpdateMutationVariables>(GiftCardSettingsUpdateDocument, variables, options) as Promise<GiftCardSettingsUpdateMutation>;
    },
    GiftCardSettings(variables?: GiftCardSettingsQueryVariables, options?: C): Promise<GiftCardSettingsQuery> {
      return requester<GiftCardSettingsQuery, GiftCardSettingsQueryVariables>(GiftCardSettingsDocument, variables, options) as Promise<GiftCardSettingsQuery>;
    },
    GiftCardResend(variables: GiftCardResendMutationVariables, options?: C): Promise<GiftCardResendMutation> {
      return requester<GiftCardResendMutation, GiftCardResendMutationVariables>(GiftCardResendDocument, variables, options) as Promise<GiftCardResendMutation>;
    },
    GiftCardActivate(variables: GiftCardActivateMutationVariables, options?: C): Promise<GiftCardActivateMutation> {
      return requester<GiftCardActivateMutation, GiftCardActivateMutationVariables>(GiftCardActivateDocument, variables, options) as Promise<GiftCardActivateMutation>;
    },
    GiftCardDeactivate(variables: GiftCardDeactivateMutationVariables, options?: C): Promise<GiftCardDeactivateMutation> {
      return requester<GiftCardDeactivateMutation, GiftCardDeactivateMutationVariables>(GiftCardDeactivateDocument, variables, options) as Promise<GiftCardDeactivateMutation>;
    },
    GiftCardUpdate(variables: GiftCardUpdateMutationVariables, options?: C): Promise<GiftCardUpdateMutation> {
      return requester<GiftCardUpdateMutation, GiftCardUpdateMutationVariables>(GiftCardUpdateDocument, variables, options) as Promise<GiftCardUpdateMutation>;
    },
    GiftCardAddNote(variables: GiftCardAddNoteMutationVariables, options?: C): Promise<GiftCardAddNoteMutation> {
      return requester<GiftCardAddNoteMutation, GiftCardAddNoteMutationVariables>(GiftCardAddNoteDocument, variables, options) as Promise<GiftCardAddNoteMutation>;
    },
    GiftCardDetails(variables: GiftCardDetailsQueryVariables, options?: C): Promise<GiftCardDetailsQuery> {
      return requester<GiftCardDetailsQuery, GiftCardDetailsQueryVariables>(GiftCardDetailsDocument, variables, options) as Promise<GiftCardDetailsQuery>;
    },
    GiftCardCurrencies(variables?: GiftCardCurrenciesQueryVariables, options?: C): Promise<GiftCardCurrenciesQuery> {
      return requester<GiftCardCurrenciesQuery, GiftCardCurrenciesQueryVariables>(GiftCardCurrenciesDocument, variables, options) as Promise<GiftCardCurrenciesQuery>;
    },
    GiftCardBulkActivate(variables: GiftCardBulkActivateMutationVariables, options?: C): Promise<GiftCardBulkActivateMutation> {
      return requester<GiftCardBulkActivateMutation, GiftCardBulkActivateMutationVariables>(GiftCardBulkActivateDocument, variables, options) as Promise<GiftCardBulkActivateMutation>;
    },
    GiftCardBulkDeactivate(variables: GiftCardBulkDeactivateMutationVariables, options?: C): Promise<GiftCardBulkDeactivateMutation> {
      return requester<GiftCardBulkDeactivateMutation, GiftCardBulkDeactivateMutationVariables>(GiftCardBulkDeactivateDocument, variables, options) as Promise<GiftCardBulkDeactivateMutation>;
    },
    DeleteGiftCard(variables: DeleteGiftCardMutationVariables, options?: C): Promise<DeleteGiftCardMutation> {
      return requester<DeleteGiftCardMutation, DeleteGiftCardMutationVariables>(DeleteGiftCardDocument, variables, options) as Promise<DeleteGiftCardMutation>;
    },
    BulkDeleteGiftCard(variables: BulkDeleteGiftCardMutationVariables, options?: C): Promise<BulkDeleteGiftCardMutation> {
      return requester<BulkDeleteGiftCardMutation, BulkDeleteGiftCardMutationVariables>(BulkDeleteGiftCardDocument, variables, options) as Promise<BulkDeleteGiftCardMutation>;
    },
    GiftCardList(variables?: GiftCardListQueryVariables, options?: C): Promise<GiftCardListQuery> {
      return requester<GiftCardListQuery, GiftCardListQueryVariables>(GiftCardListDocument, variables, options) as Promise<GiftCardListQuery>;
    },
    GiftCardTotalCount(variables?: GiftCardTotalCountQueryVariables, options?: C): Promise<GiftCardTotalCountQuery> {
      return requester<GiftCardTotalCountQuery, GiftCardTotalCountQueryVariables>(GiftCardTotalCountDocument, variables, options) as Promise<GiftCardTotalCountQuery>;
    },
    GiftCardProductsCount(variables?: GiftCardProductsCountQueryVariables, options?: C): Promise<GiftCardProductsCountQuery> {
      return requester<GiftCardProductsCountQuery, GiftCardProductsCountQueryVariables>(GiftCardProductsCountDocument, variables, options) as Promise<GiftCardProductsCountQuery>;
    },
    GroupDelete(variables: GroupDeleteMutationVariables, options?: C): Promise<GroupDeleteMutation> {
      return requester<GroupDeleteMutation, GroupDeleteMutationVariables>(GroupDeleteDocument, variables, options) as Promise<GroupDeleteMutation>;
    },
    GroupCreate(variables: GroupCreateMutationVariables, options?: C): Promise<GroupCreateMutation> {
      return requester<GroupCreateMutation, GroupCreateMutationVariables>(GroupCreateDocument, variables, options) as Promise<GroupCreateMutation>;
    },
    GroupUpdate(variables: GroupUpdateMutationVariables, options?: C): Promise<GroupUpdateMutation> {
      return requester<GroupUpdateMutation, GroupUpdateMutationVariables>(GroupUpdateDocument, variables, options) as Promise<GroupUpdateMutation>;
    },
    GroupList(variables?: GroupListQueryVariables, options?: C): Promise<GroupListQuery> {
      return requester<GroupListQuery, GroupListQueryVariables>(GroupListDocument, variables, options) as Promise<GroupListQuery>;
    },
    GroupDetails(variables: GroupDetailsQueryVariables, options?: C): Promise<GroupDetailsQuery> {
      return requester<GroupDetailsQuery, GroupDetailsQueryVariables>(GroupDetailsDocument, variables, options) as Promise<GroupDetailsQuery>;
    },
    MediaCreate(variables: MediaCreateMutationVariables, options?: C): Promise<MediaCreateMutation> {
      return requester<MediaCreateMutation, MediaCreateMutationVariables>(MediaCreateDocument, variables, options) as Promise<MediaCreateMutation>;
    },
    MediaUpdate(variables: MediaUpdateMutationVariables, options?: C): Promise<MediaUpdateMutation> {
      return requester<MediaUpdateMutation, MediaUpdateMutationVariables>(MediaUpdateDocument, variables, options) as Promise<MediaUpdateMutation>;
    },
    MediaRemove(variables: MediaRemoveMutationVariables, options?: C): Promise<MediaRemoveMutation> {
      return requester<MediaRemoveMutation, MediaRemoveMutationVariables>(MediaRemoveDocument, variables, options) as Promise<MediaRemoveMutation>;
    },
    MediaBulkPublish(variables: MediaBulkPublishMutationVariables, options?: C): Promise<MediaBulkPublishMutation> {
      return requester<MediaBulkPublishMutation, MediaBulkPublishMutationVariables>(MediaBulkPublishDocument, variables, options) as Promise<MediaBulkPublishMutation>;
    },
    MediaBulkRemove(variables: MediaBulkRemoveMutationVariables, options?: C): Promise<MediaBulkRemoveMutation> {
      return requester<MediaBulkRemoveMutation, MediaBulkRemoveMutationVariables>(MediaBulkRemoveDocument, variables, options) as Promise<MediaBulkRemoveMutation>;
    },
    MediaList(variables?: MediaListQueryVariables, options?: C): Promise<MediaListQuery> {
      return requester<MediaListQuery, MediaListQueryVariables>(MediaListDocument, variables, options) as Promise<MediaListQuery>;
    },
    MediaItemDetails(variables: MediaItemDetailsQueryVariables, options?: C): Promise<MediaItemDetailsQuery> {
      return requester<MediaItemDetailsQuery, MediaItemDetailsQueryVariables>(MediaItemDetailsDocument, variables, options) as Promise<MediaItemDetailsQuery>;
    },
    MediaCount(variables?: MediaCountQueryVariables, options?: C): Promise<MediaCountQuery> {
      return requester<MediaCountQuery, MediaCountQueryVariables>(MediaCountDocument, variables, options) as Promise<MediaCountQuery>;
    },
    MenuCreate(variables: MenuCreateMutationVariables, options?: C): Promise<MenuCreateMutation> {
      return requester<MenuCreateMutation, MenuCreateMutationVariables>(MenuCreateDocument, variables, options) as Promise<MenuCreateMutation>;
    },
    MenuBulkDelete(variables: MenuBulkDeleteMutationVariables, options?: C): Promise<MenuBulkDeleteMutation> {
      return requester<MenuBulkDeleteMutation, MenuBulkDeleteMutationVariables>(MenuBulkDeleteDocument, variables, options) as Promise<MenuBulkDeleteMutation>;
    },
    MenuDelete(variables: MenuDeleteMutationVariables, options?: C): Promise<MenuDeleteMutation> {
      return requester<MenuDeleteMutation, MenuDeleteMutationVariables>(MenuDeleteDocument, variables, options) as Promise<MenuDeleteMutation>;
    },
    MenuItemCreate(variables: MenuItemCreateMutationVariables, options?: C): Promise<MenuItemCreateMutation> {
      return requester<MenuItemCreateMutation, MenuItemCreateMutationVariables>(MenuItemCreateDocument, variables, options) as Promise<MenuItemCreateMutation>;
    },
    MenuUpdate(variables: MenuUpdateMutationVariables, options?: C): Promise<MenuUpdateMutation> {
      return requester<MenuUpdateMutation, MenuUpdateMutationVariables>(MenuUpdateDocument, variables, options) as Promise<MenuUpdateMutation>;
    },
    MenuItemUpdate(variables: MenuItemUpdateMutationVariables, options?: C): Promise<MenuItemUpdateMutation> {
      return requester<MenuItemUpdateMutation, MenuItemUpdateMutationVariables>(MenuItemUpdateDocument, variables, options) as Promise<MenuItemUpdateMutation>;
    },
    MenuList(variables?: MenuListQueryVariables, options?: C): Promise<MenuListQuery> {
      return requester<MenuListQuery, MenuListQueryVariables>(MenuListDocument, variables, options) as Promise<MenuListQuery>;
    },
    MenuDetails(variables: MenuDetailsQueryVariables, options?: C): Promise<MenuDetailsQuery> {
      return requester<MenuDetailsQuery, MenuDetailsQueryVariables>(MenuDetailsDocument, variables, options) as Promise<MenuDetailsQuery>;
    },
    OrderCancel(variables: OrderCancelMutationVariables, options?: C): Promise<OrderCancelMutation> {
      return requester<OrderCancelMutation, OrderCancelMutationVariables>(OrderCancelDocument, variables, options) as Promise<OrderCancelMutation>;
    },
    OrderDiscountAdd(variables: OrderDiscountAddMutationVariables, options?: C): Promise<OrderDiscountAddMutation> {
      return requester<OrderDiscountAddMutation, OrderDiscountAddMutationVariables>(OrderDiscountAddDocument, variables, options) as Promise<OrderDiscountAddMutation>;
    },
    OrderDiscountDelete(variables: OrderDiscountDeleteMutationVariables, options?: C): Promise<OrderDiscountDeleteMutation> {
      return requester<OrderDiscountDeleteMutation, OrderDiscountDeleteMutationVariables>(OrderDiscountDeleteDocument, variables, options) as Promise<OrderDiscountDeleteMutation>;
    },
    OrderLineDiscountRemove(variables: OrderLineDiscountRemoveMutationVariables, options?: C): Promise<OrderLineDiscountRemoveMutation> {
      return requester<OrderLineDiscountRemoveMutation, OrderLineDiscountRemoveMutationVariables>(OrderLineDiscountRemoveDocument, variables, options) as Promise<OrderLineDiscountRemoveMutation>;
    },
    OrderLineDiscountUpdate(variables: OrderLineDiscountUpdateMutationVariables, options?: C): Promise<OrderLineDiscountUpdateMutation> {
      return requester<OrderLineDiscountUpdateMutation, OrderLineDiscountUpdateMutationVariables>(OrderLineDiscountUpdateDocument, variables, options) as Promise<OrderLineDiscountUpdateMutation>;
    },
    OrderDiscountUpdate(variables: OrderDiscountUpdateMutationVariables, options?: C): Promise<OrderDiscountUpdateMutation> {
      return requester<OrderDiscountUpdateMutation, OrderDiscountUpdateMutationVariables>(OrderDiscountUpdateDocument, variables, options) as Promise<OrderDiscountUpdateMutation>;
    },
    OrderDraftCancel(variables: OrderDraftCancelMutationVariables, options?: C): Promise<OrderDraftCancelMutation> {
      return requester<OrderDraftCancelMutation, OrderDraftCancelMutationVariables>(OrderDraftCancelDocument, variables, options) as Promise<OrderDraftCancelMutation>;
    },
    OrderDraftBulkCancel(variables: OrderDraftBulkCancelMutationVariables, options?: C): Promise<OrderDraftBulkCancelMutation> {
      return requester<OrderDraftBulkCancelMutation, OrderDraftBulkCancelMutationVariables>(OrderDraftBulkCancelDocument, variables, options) as Promise<OrderDraftBulkCancelMutation>;
    },
    OrderConfirm(variables: OrderConfirmMutationVariables, options?: C): Promise<OrderConfirmMutation> {
      return requester<OrderConfirmMutation, OrderConfirmMutationVariables>(OrderConfirmDocument, variables, options) as Promise<OrderConfirmMutation>;
    },
    OrderDraftFinalize(variables: OrderDraftFinalizeMutationVariables, options?: C): Promise<OrderDraftFinalizeMutation> {
      return requester<OrderDraftFinalizeMutation, OrderDraftFinalizeMutationVariables>(OrderDraftFinalizeDocument, variables, options) as Promise<OrderDraftFinalizeMutation>;
    },
    FulfillmentReturnProducts(variables: FulfillmentReturnProductsMutationVariables, options?: C): Promise<FulfillmentReturnProductsMutation> {
      return requester<FulfillmentReturnProductsMutation, FulfillmentReturnProductsMutationVariables>(FulfillmentReturnProductsDocument, variables, options) as Promise<FulfillmentReturnProductsMutation>;
    },
    OrderRefund(variables: OrderRefundMutationVariables, options?: C): Promise<OrderRefundMutation> {
      return requester<OrderRefundMutation, OrderRefundMutationVariables>(OrderRefundDocument, variables, options) as Promise<OrderRefundMutation>;
    },
    OrderFulfillmentRefundProducts(variables: OrderFulfillmentRefundProductsMutationVariables, options?: C): Promise<OrderFulfillmentRefundProductsMutation> {
      return requester<OrderFulfillmentRefundProductsMutation, OrderFulfillmentRefundProductsMutationVariables>(OrderFulfillmentRefundProductsDocument, variables, options) as Promise<OrderFulfillmentRefundProductsMutation>;
    },
    OrderVoid(variables: OrderVoidMutationVariables, options?: C): Promise<OrderVoidMutation> {
      return requester<OrderVoidMutation, OrderVoidMutationVariables>(OrderVoidDocument, variables, options) as Promise<OrderVoidMutation>;
    },
    OrderMarkAsPaid(variables: OrderMarkAsPaidMutationVariables, options?: C): Promise<OrderMarkAsPaidMutation> {
      return requester<OrderMarkAsPaidMutation, OrderMarkAsPaidMutationVariables>(OrderMarkAsPaidDocument, variables, options) as Promise<OrderMarkAsPaidMutation>;
    },
    OrderCapture(variables: OrderCaptureMutationVariables, options?: C): Promise<OrderCaptureMutation> {
      return requester<OrderCaptureMutation, OrderCaptureMutationVariables>(OrderCaptureDocument, variables, options) as Promise<OrderCaptureMutation>;
    },
    OrderFulfillmentUpdateTracking(variables: OrderFulfillmentUpdateTrackingMutationVariables, options?: C): Promise<OrderFulfillmentUpdateTrackingMutation> {
      return requester<OrderFulfillmentUpdateTrackingMutation, OrderFulfillmentUpdateTrackingMutationVariables>(OrderFulfillmentUpdateTrackingDocument, variables, options) as Promise<OrderFulfillmentUpdateTrackingMutation>;
    },
    OrderFulfillmentApprove(variables: OrderFulfillmentApproveMutationVariables, options?: C): Promise<OrderFulfillmentApproveMutation> {
      return requester<OrderFulfillmentApproveMutation, OrderFulfillmentApproveMutationVariables>(OrderFulfillmentApproveDocument, variables, options) as Promise<OrderFulfillmentApproveMutation>;
    },
    OrderFulfillmentCancel(variables: OrderFulfillmentCancelMutationVariables, options?: C): Promise<OrderFulfillmentCancelMutation> {
      return requester<OrderFulfillmentCancelMutation, OrderFulfillmentCancelMutationVariables>(OrderFulfillmentCancelDocument, variables, options) as Promise<OrderFulfillmentCancelMutation>;
    },
    OrderAddNote(variables: OrderAddNoteMutationVariables, options?: C): Promise<OrderAddNoteMutation> {
      return requester<OrderAddNoteMutation, OrderAddNoteMutationVariables>(OrderAddNoteDocument, variables, options) as Promise<OrderAddNoteMutation>;
    },
    OrderUpdate(variables: OrderUpdateMutationVariables, options?: C): Promise<OrderUpdateMutation> {
      return requester<OrderUpdateMutation, OrderUpdateMutationVariables>(OrderUpdateDocument, variables, options) as Promise<OrderUpdateMutation>;
    },
    OrderDraftUpdate(variables: OrderDraftUpdateMutationVariables, options?: C): Promise<OrderDraftUpdateMutation> {
      return requester<OrderDraftUpdateMutation, OrderDraftUpdateMutationVariables>(OrderDraftUpdateDocument, variables, options) as Promise<OrderDraftUpdateMutation>;
    },
    OrderShippingMethodUpdate(variables: OrderShippingMethodUpdateMutationVariables, options?: C): Promise<OrderShippingMethodUpdateMutation> {
      return requester<OrderShippingMethodUpdateMutation, OrderShippingMethodUpdateMutationVariables>(OrderShippingMethodUpdateDocument, variables, options) as Promise<OrderShippingMethodUpdateMutation>;
    },
    OrderDraftCreate(variables: OrderDraftCreateMutationVariables, options?: C): Promise<OrderDraftCreateMutation> {
      return requester<OrderDraftCreateMutation, OrderDraftCreateMutationVariables>(OrderDraftCreateDocument, variables, options) as Promise<OrderDraftCreateMutation>;
    },
    OrderLineDelete(variables: OrderLineDeleteMutationVariables, options?: C): Promise<OrderLineDeleteMutation> {
      return requester<OrderLineDeleteMutation, OrderLineDeleteMutationVariables>(OrderLineDeleteDocument, variables, options) as Promise<OrderLineDeleteMutation>;
    },
    OrderLinesAdd(variables: OrderLinesAddMutationVariables, options?: C): Promise<OrderLinesAddMutation> {
      return requester<OrderLinesAddMutation, OrderLinesAddMutationVariables>(OrderLinesAddDocument, variables, options) as Promise<OrderLinesAddMutation>;
    },
    OrderLineUpdate(variables: OrderLineUpdateMutationVariables, options?: C): Promise<OrderLineUpdateMutation> {
      return requester<OrderLineUpdateMutation, OrderLineUpdateMutationVariables>(OrderLineUpdateDocument, variables, options) as Promise<OrderLineUpdateMutation>;
    },
    FulfillOrder(variables: FulfillOrderMutationVariables, options?: C): Promise<FulfillOrderMutation> {
      return requester<FulfillOrderMutation, FulfillOrderMutationVariables>(FulfillOrderDocument, variables, options) as Promise<FulfillOrderMutation>;
    },
    InvoiceRequest(variables: InvoiceRequestMutationVariables, options?: C): Promise<InvoiceRequestMutation> {
      return requester<InvoiceRequestMutation, InvoiceRequestMutationVariables>(InvoiceRequestDocument, variables, options) as Promise<InvoiceRequestMutation>;
    },
    InvoiceEmailSend(variables: InvoiceEmailSendMutationVariables, options?: C): Promise<InvoiceEmailSendMutation> {
      return requester<InvoiceEmailSendMutation, InvoiceEmailSendMutationVariables>(InvoiceEmailSendDocument, variables, options) as Promise<InvoiceEmailSendMutation>;
    },
    OrderSettingsUpdate(variables: OrderSettingsUpdateMutationVariables, options?: C): Promise<OrderSettingsUpdateMutation> {
      return requester<OrderSettingsUpdateMutation, OrderSettingsUpdateMutationVariables>(OrderSettingsUpdateDocument, variables, options) as Promise<OrderSettingsUpdateMutation>;
    },
    OrderList(variables?: OrderListQueryVariables, options?: C): Promise<OrderListQuery> {
      return requester<OrderListQuery, OrderListQueryVariables>(OrderListDocument, variables, options) as Promise<OrderListQuery>;
    },
    OrderDraftList(variables?: OrderDraftListQueryVariables, options?: C): Promise<OrderDraftListQuery> {
      return requester<OrderDraftListQuery, OrderDraftListQueryVariables>(OrderDraftListDocument, variables, options) as Promise<OrderDraftListQuery>;
    },
    OrderDetails(variables: OrderDetailsQueryVariables, options?: C): Promise<OrderDetailsQuery> {
      return requester<OrderDetailsQuery, OrderDetailsQueryVariables>(OrderDetailsDocument, variables, options) as Promise<OrderDetailsQuery>;
    },
    OrderFulfillData(variables: OrderFulfillDataQueryVariables, options?: C): Promise<OrderFulfillDataQuery> {
      return requester<OrderFulfillDataQuery, OrderFulfillDataQueryVariables>(OrderFulfillDataDocument, variables, options) as Promise<OrderFulfillDataQuery>;
    },
    OrderFulfillSettings(variables?: OrderFulfillSettingsQueryVariables, options?: C): Promise<OrderFulfillSettingsQuery> {
      return requester<OrderFulfillSettingsQuery, OrderFulfillSettingsQueryVariables>(OrderFulfillSettingsDocument, variables, options) as Promise<OrderFulfillSettingsQuery>;
    },
    OrderSettings(variables?: OrderSettingsQueryVariables, options?: C): Promise<OrderSettingsQuery> {
      return requester<OrderSettingsQuery, OrderSettingsQueryVariables>(OrderSettingsDocument, variables, options) as Promise<OrderSettingsQuery>;
    },
    OrderRefundData(variables: OrderRefundDataQueryVariables, options?: C): Promise<OrderRefundDataQuery> {
      return requester<OrderRefundDataQuery, OrderRefundDataQueryVariables>(OrderRefundDataDocument, variables, options) as Promise<OrderRefundDataQuery>;
    },
    ChannelUsabilityData(variables: ChannelUsabilityDataQueryVariables, options?: C): Promise<ChannelUsabilityDataQuery> {
      return requester<ChannelUsabilityDataQuery, ChannelUsabilityDataQueryVariables>(ChannelUsabilityDataDocument, variables, options) as Promise<ChannelUsabilityDataQuery>;
    },
    PageKlassUpdate(variables: PageKlassUpdateMutationVariables, options?: C): Promise<PageKlassUpdateMutation> {
      return requester<PageKlassUpdateMutation, PageKlassUpdateMutationVariables>(PageKlassUpdateDocument, variables, options) as Promise<PageKlassUpdateMutation>;
    },
    PageKlassCreate(variables: PageKlassCreateMutationVariables, options?: C): Promise<PageKlassCreateMutation> {
      return requester<PageKlassCreateMutation, PageKlassCreateMutationVariables>(PageKlassCreateDocument, variables, options) as Promise<PageKlassCreateMutation>;
    },
    AssignPageAttribute(variables: AssignPageAttributeMutationVariables, options?: C): Promise<AssignPageAttributeMutation> {
      return requester<AssignPageAttributeMutation, AssignPageAttributeMutationVariables>(AssignPageAttributeDocument, variables, options) as Promise<AssignPageAttributeMutation>;
    },
    UnassignPageAttribute(variables: UnassignPageAttributeMutationVariables, options?: C): Promise<UnassignPageAttributeMutation> {
      return requester<UnassignPageAttributeMutation, UnassignPageAttributeMutationVariables>(UnassignPageAttributeDocument, variables, options) as Promise<UnassignPageAttributeMutation>;
    },
    PageKlassDelete(variables: PageKlassDeleteMutationVariables, options?: C): Promise<PageKlassDeleteMutation> {
      return requester<PageKlassDeleteMutation, PageKlassDeleteMutationVariables>(PageKlassDeleteDocument, variables, options) as Promise<PageKlassDeleteMutation>;
    },
    PageKlassBulkDelete(variables: PageKlassBulkDeleteMutationVariables, options?: C): Promise<PageKlassBulkDeleteMutation> {
      return requester<PageKlassBulkDeleteMutation, PageKlassBulkDeleteMutationVariables>(PageKlassBulkDeleteDocument, variables, options) as Promise<PageKlassBulkDeleteMutation>;
    },
    PageKlassAttributeReorder(variables: PageKlassAttributeReorderMutationVariables, options?: C): Promise<PageKlassAttributeReorderMutation> {
      return requester<PageKlassAttributeReorderMutation, PageKlassAttributeReorderMutationVariables>(PageKlassAttributeReorderDocument, variables, options) as Promise<PageKlassAttributeReorderMutation>;
    },
    PageKlassList(variables?: PageKlassListQueryVariables, options?: C): Promise<PageKlassListQuery> {
      return requester<PageKlassListQuery, PageKlassListQueryVariables>(PageKlassListDocument, variables, options) as Promise<PageKlassListQuery>;
    },
    PageKlassDetails(variables: PageKlassDetailsQueryVariables, options?: C): Promise<PageKlassDetailsQuery> {
      return requester<PageKlassDetailsQuery, PageKlassDetailsQueryVariables>(PageKlassDetailsDocument, variables, options) as Promise<PageKlassDetailsQuery>;
    },
    PageCreate(variables: PageCreateMutationVariables, options?: C): Promise<PageCreateMutation> {
      return requester<PageCreateMutation, PageCreateMutationVariables>(PageCreateDocument, variables, options) as Promise<PageCreateMutation>;
    },
    PageUpdate(variables: PageUpdateMutationVariables, options?: C): Promise<PageUpdateMutation> {
      return requester<PageUpdateMutation, PageUpdateMutationVariables>(PageUpdateDocument, variables, options) as Promise<PageUpdateMutation>;
    },
    PageRemove(variables: PageRemoveMutationVariables, options?: C): Promise<PageRemoveMutation> {
      return requester<PageRemoveMutation, PageRemoveMutationVariables>(PageRemoveDocument, variables, options) as Promise<PageRemoveMutation>;
    },
    PageBulkPublish(variables: PageBulkPublishMutationVariables, options?: C): Promise<PageBulkPublishMutation> {
      return requester<PageBulkPublishMutation, PageBulkPublishMutationVariables>(PageBulkPublishDocument, variables, options) as Promise<PageBulkPublishMutation>;
    },
    PageBulkRemove(variables: PageBulkRemoveMutationVariables, options?: C): Promise<PageBulkRemoveMutation> {
      return requester<PageBulkRemoveMutation, PageBulkRemoveMutationVariables>(PageBulkRemoveDocument, variables, options) as Promise<PageBulkRemoveMutation>;
    },
    PageList(variables?: PageListQueryVariables, options?: C): Promise<PageListQuery> {
      return requester<PageListQuery, PageListQueryVariables>(PageListDocument, variables, options) as Promise<PageListQuery>;
    },
    PageDetails(variables: PageDetailsQueryVariables, options?: C): Promise<PageDetailsQuery> {
      return requester<PageDetailsQuery, PageDetailsQueryVariables>(PageDetailsDocument, variables, options) as Promise<PageDetailsQuery>;
    },
    PageKlass(variables: PageKlassQueryVariables, options?: C): Promise<PageKlassQuery> {
      return requester<PageKlassQuery, PageKlassQueryVariables>(PageKlassDocument, variables, options) as Promise<PageKlassQuery>;
    },
    PageCount(variables?: PageCountQueryVariables, options?: C): Promise<PageCountQuery> {
      return requester<PageCountQuery, PageCountQueryVariables>(PageCountDocument, variables, options) as Promise<PageCountQuery>;
    },
    PluginUpdate(variables: PluginUpdateMutationVariables, options?: C): Promise<PluginUpdateMutation> {
      return requester<PluginUpdateMutation, PluginUpdateMutationVariables>(PluginUpdateDocument, variables, options) as Promise<PluginUpdateMutation>;
    },
    Plugins(variables?: PluginsQueryVariables, options?: C): Promise<PluginsQuery> {
      return requester<PluginsQuery, PluginsQueryVariables>(PluginsDocument, variables, options) as Promise<PluginsQuery>;
    },
    Plugin(variables: PluginQueryVariables, options?: C): Promise<PluginQuery> {
      return requester<PluginQuery, PluginQueryVariables>(PluginDocument, variables, options) as Promise<PluginQuery>;
    },
    ProductKlassDelete(variables: ProductKlassDeleteMutationVariables, options?: C): Promise<ProductKlassDeleteMutation> {
      return requester<ProductKlassDeleteMutation, ProductKlassDeleteMutationVariables>(ProductKlassDeleteDocument, variables, options) as Promise<ProductKlassDeleteMutation>;
    },
    ProductKlassBulkDelete(variables: ProductKlassBulkDeleteMutationVariables, options?: C): Promise<ProductKlassBulkDeleteMutation> {
      return requester<ProductKlassBulkDeleteMutation, ProductKlassBulkDeleteMutationVariables>(ProductKlassBulkDeleteDocument, variables, options) as Promise<ProductKlassBulkDeleteMutation>;
    },
    ProductKlassUpdate(variables: ProductKlassUpdateMutationVariables, options?: C): Promise<ProductKlassUpdateMutation> {
      return requester<ProductKlassUpdateMutation, ProductKlassUpdateMutationVariables>(ProductKlassUpdateDocument, variables, options) as Promise<ProductKlassUpdateMutation>;
    },
    AssignProductAttribute(variables: AssignProductAttributeMutationVariables, options?: C): Promise<AssignProductAttributeMutation> {
      return requester<AssignProductAttributeMutation, AssignProductAttributeMutationVariables>(AssignProductAttributeDocument, variables, options) as Promise<AssignProductAttributeMutation>;
    },
    UnassignProductAttribute(variables: UnassignProductAttributeMutationVariables, options?: C): Promise<UnassignProductAttributeMutation> {
      return requester<UnassignProductAttributeMutation, UnassignProductAttributeMutationVariables>(UnassignProductAttributeDocument, variables, options) as Promise<UnassignProductAttributeMutation>;
    },
    ProductKlassCreate(variables: ProductKlassCreateMutationVariables, options?: C): Promise<ProductKlassCreateMutation> {
      return requester<ProductKlassCreateMutation, ProductKlassCreateMutationVariables>(ProductKlassCreateDocument, variables, options) as Promise<ProductKlassCreateMutation>;
    },
    ProductKlassAttributeReorder(variables: ProductKlassAttributeReorderMutationVariables, options?: C): Promise<ProductKlassAttributeReorderMutation> {
      return requester<ProductKlassAttributeReorderMutation, ProductKlassAttributeReorderMutationVariables>(ProductKlassAttributeReorderDocument, variables, options) as Promise<ProductKlassAttributeReorderMutation>;
    },
    ProductAttributeAssignmentUpdate(variables: ProductAttributeAssignmentUpdateMutationVariables, options?: C): Promise<ProductAttributeAssignmentUpdateMutation> {
      return requester<ProductAttributeAssignmentUpdateMutation, ProductAttributeAssignmentUpdateMutationVariables>(ProductAttributeAssignmentUpdateDocument, variables, options) as Promise<ProductAttributeAssignmentUpdateMutation>;
    },
    ProductKlassList(variables?: ProductKlassListQueryVariables, options?: C): Promise<ProductKlassListQuery> {
      return requester<ProductKlassListQuery, ProductKlassListQueryVariables>(ProductKlassListDocument, variables, options) as Promise<ProductKlassListQuery>;
    },
    ProductKlassDetails(variables: ProductKlassDetailsQueryVariables, options?: C): Promise<ProductKlassDetailsQuery> {
      return requester<ProductKlassDetailsQuery, ProductKlassDetailsQueryVariables>(ProductKlassDetailsDocument, variables, options) as Promise<ProductKlassDetailsQuery>;
    },
    ProductKlassCreateData(variables?: ProductKlassCreateDataQueryVariables, options?: C): Promise<ProductKlassCreateDataQuery> {
      return requester<ProductKlassCreateDataQuery, ProductKlassCreateDataQueryVariables>(ProductKlassCreateDataDocument, variables, options) as Promise<ProductKlassCreateDataQuery>;
    },
    ProductMediaCreate(variables: ProductMediaCreateMutationVariables, options?: C): Promise<ProductMediaCreateMutation> {
      return requester<ProductMediaCreateMutation, ProductMediaCreateMutationVariables>(ProductMediaCreateDocument, variables, options) as Promise<ProductMediaCreateMutation>;
    },
    ProductDelete(variables: ProductDeleteMutationVariables, options?: C): Promise<ProductDeleteMutation> {
      return requester<ProductDeleteMutation, ProductDeleteMutationVariables>(ProductDeleteDocument, variables, options) as Promise<ProductDeleteMutation>;
    },
    ProductMediaReorder(variables: ProductMediaReorderMutationVariables, options?: C): Promise<ProductMediaReorderMutation> {
      return requester<ProductMediaReorderMutation, ProductMediaReorderMutationVariables>(ProductMediaReorderDocument, variables, options) as Promise<ProductMediaReorderMutation>;
    },
    ProductSetDefaultVariant(variables: ProductSetDefaultVariantMutationVariables, options?: C): Promise<ProductSetDefaultVariantMutation> {
      return requester<ProductSetDefaultVariantMutation, ProductSetDefaultVariantMutationVariables>(ProductSetDefaultVariantDocument, variables, options) as Promise<ProductSetDefaultVariantMutation>;
    },
    ProductDatagridUpdate(variables: ProductDatagridUpdateMutationVariables, options?: C): Promise<ProductDatagridUpdateMutation> {
      return requester<ProductDatagridUpdateMutation, ProductDatagridUpdateMutationVariables>(ProductDatagridUpdateDocument, variables, options) as Promise<ProductDatagridUpdateMutation>;
    },
    ProductDatagridStockUpdate(variables: ProductDatagridStockUpdateMutationVariables, options?: C): Promise<ProductDatagridStockUpdateMutation> {
      return requester<ProductDatagridStockUpdateMutation, ProductDatagridStockUpdateMutationVariables>(ProductDatagridStockUpdateDocument, variables, options) as Promise<ProductDatagridStockUpdateMutation>;
    },
    ProductDatagridChannelListingUpdate(variables: ProductDatagridChannelListingUpdateMutationVariables, options?: C): Promise<ProductDatagridChannelListingUpdateMutation> {
      return requester<ProductDatagridChannelListingUpdateMutation, ProductDatagridChannelListingUpdateMutationVariables>(ProductDatagridChannelListingUpdateDocument, variables, options) as Promise<ProductDatagridChannelListingUpdateMutation>;
    },
    ProductUpdate(variables: ProductUpdateMutationVariables, options?: C): Promise<ProductUpdateMutation> {
      return requester<ProductUpdateMutation, ProductUpdateMutationVariables>(ProductUpdateDocument, variables, options) as Promise<ProductUpdateMutation>;
    },
    ProductMediaDelete(variables: ProductMediaDeleteMutationVariables, options?: C): Promise<ProductMediaDeleteMutation> {
      return requester<ProductMediaDeleteMutation, ProductMediaDeleteMutationVariables>(ProductMediaDeleteDocument, variables, options) as Promise<ProductMediaDeleteMutation>;
    },
    ProductMediaUpdate(variables: ProductMediaUpdateMutationVariables, options?: C): Promise<ProductMediaUpdateMutation> {
      return requester<ProductMediaUpdateMutation, ProductMediaUpdateMutationVariables>(ProductMediaUpdateDocument, variables, options) as Promise<ProductMediaUpdateMutation>;
    },
    ProductMediaAssign(variables: ProductMediaAssignMutationVariables, options?: C): Promise<ProductMediaAssignMutation> {
      return requester<ProductMediaAssignMutation, ProductMediaAssignMutationVariables>(ProductMediaAssignDocument, variables, options) as Promise<ProductMediaAssignMutation>;
    },
    ProductMediaUnassign(variables: ProductMediaUnassignMutationVariables, options?: C): Promise<ProductMediaUnassignMutation> {
      return requester<ProductMediaUnassignMutation, ProductMediaUnassignMutationVariables>(ProductMediaUnassignDocument, variables, options) as Promise<ProductMediaUnassignMutation>;
    },
    ProductBulkCreate(variables: ProductBulkCreateMutationVariables, options?: C): Promise<ProductBulkCreateMutation> {
      return requester<ProductBulkCreateMutation, ProductBulkCreateMutationVariables>(ProductBulkCreateDocument, variables, options) as Promise<ProductBulkCreateMutation>;
    },
    ProductBulkDelete(variables: ProductBulkDeleteMutationVariables, options?: C): Promise<ProductBulkDeleteMutation> {
      return requester<ProductBulkDeleteMutation, ProductBulkDeleteMutationVariables>(ProductBulkDeleteDocument, variables, options) as Promise<ProductBulkDeleteMutation>;
    },
    ProductReorder(variables: ProductReorderMutationVariables, options?: C): Promise<ProductReorderMutation> {
      return requester<ProductReorderMutation, ProductReorderMutationVariables>(ProductReorderDocument, variables, options) as Promise<ProductReorderMutation>;
    },
    ProductChannelListingUpdate(variables: ProductChannelListingUpdateMutationVariables, options?: C): Promise<ProductChannelListingUpdateMutation> {
      return requester<ProductChannelListingUpdateMutation, ProductChannelListingUpdateMutationVariables>(ProductChannelListingUpdateDocument, variables, options) as Promise<ProductChannelListingUpdateMutation>;
    },
    ProductPreorderDeactivate(variables: ProductPreorderDeactivateMutationVariables, options?: C): Promise<ProductPreorderDeactivateMutation> {
      return requester<ProductPreorderDeactivateMutation, ProductPreorderDeactivateMutationVariables>(ProductPreorderDeactivateDocument, variables, options) as Promise<ProductPreorderDeactivateMutation>;
    },
    InitialProductFilterAttributes(variables?: InitialProductFilterAttributesQueryVariables, options?: C): Promise<InitialProductFilterAttributesQuery> {
      return requester<InitialProductFilterAttributesQuery, InitialProductFilterAttributesQueryVariables>(InitialProductFilterAttributesDocument, variables, options) as Promise<InitialProductFilterAttributesQuery>;
    },
    InitialProductFilterCategories(variables?: InitialProductFilterCategoriesQueryVariables, options?: C): Promise<InitialProductFilterCategoriesQuery> {
      return requester<InitialProductFilterCategoriesQuery, InitialProductFilterCategoriesQueryVariables>(InitialProductFilterCategoriesDocument, variables, options) as Promise<InitialProductFilterCategoriesQuery>;
    },
    InitialProductFilterCollections(variables?: InitialProductFilterCollectionsQueryVariables, options?: C): Promise<InitialProductFilterCollectionsQuery> {
      return requester<InitialProductFilterCollectionsQuery, InitialProductFilterCollectionsQueryVariables>(InitialProductFilterCollectionsDocument, variables, options) as Promise<InitialProductFilterCollectionsQuery>;
    },
    InitialProductFilterProductKlasses(variables?: InitialProductFilterProductKlassesQueryVariables, options?: C): Promise<InitialProductFilterProductKlassesQuery> {
      return requester<InitialProductFilterProductKlassesQuery, InitialProductFilterProductKlassesQueryVariables>(InitialProductFilterProductKlassesDocument, variables, options) as Promise<InitialProductFilterProductKlassesQuery>;
    },
    ProductList(variables: ProductListQueryVariables, options?: C): Promise<ProductListQuery> {
      return requester<ProductListQuery, ProductListQueryVariables>(ProductListDocument, variables, options) as Promise<ProductListQuery>;
    },
    ProductCount(variables?: ProductCountQueryVariables, options?: C): Promise<ProductCountQuery> {
      return requester<ProductCountQuery, ProductCountQueryVariables>(ProductCountDocument, variables, options) as Promise<ProductCountQuery>;
    },
    ProductDetails(variables: ProductDetailsQueryVariables, options?: C): Promise<ProductDetailsQuery> {
      return requester<ProductDetailsQuery, ProductDetailsQueryVariables>(ProductDetailsDocument, variables, options) as Promise<ProductDetailsQuery>;
    },
    ProductKlass(variables: ProductKlassQueryVariables, options?: C): Promise<ProductKlassQuery> {
      return requester<ProductKlassQuery, ProductKlassQueryVariables>(ProductKlassDocument, variables, options) as Promise<ProductKlassQuery>;
    },
    ProductVariantDetails(variables: ProductVariantDetailsQueryVariables, options?: C): Promise<ProductVariantDetailsQuery> {
      return requester<ProductVariantDetailsQuery, ProductVariantDetailsQueryVariables>(ProductVariantDetailsDocument, variables, options) as Promise<ProductVariantDetailsQuery>;
    },
    ProductCreateData(variables: ProductCreateDataQueryVariables, options?: C): Promise<ProductCreateDataQuery> {
      return requester<ProductCreateDataQuery, ProductCreateDataQueryVariables>(ProductCreateDataDocument, variables, options) as Promise<ProductCreateDataQuery>;
    },
    ProductMediaById(variables: ProductMediaByIdQueryVariables, options?: C): Promise<ProductMediaByIdQuery> {
      return requester<ProductMediaByIdQuery, ProductMediaByIdQueryVariables>(ProductMediaByIdDocument, variables, options) as Promise<ProductMediaByIdQuery>;
    },
    GridAttributes(variables: GridAttributesQueryVariables, options?: C): Promise<GridAttributesQuery> {
      return requester<GridAttributesQuery, GridAttributesQueryVariables>(GridAttributesDocument, variables, options) as Promise<GridAttributesQuery>;
    },
    SearchAvailableInGridAttributes(variables: SearchAvailableInGridAttributesQueryVariables, options?: C): Promise<SearchAvailableInGridAttributesQuery> {
      return requester<SearchAvailableInGridAttributesQuery, SearchAvailableInGridAttributesQueryVariables>(SearchAvailableInGridAttributesDocument, variables, options) as Promise<SearchAvailableInGridAttributesQuery>;
    },
    SearchAvailablePageAttributes(variables: SearchAvailablePageAttributesQueryVariables, options?: C): Promise<SearchAvailablePageAttributesQuery> {
      return requester<SearchAvailablePageAttributesQuery, SearchAvailablePageAttributesQueryVariables>(SearchAvailablePageAttributesDocument, variables, options) as Promise<SearchAvailablePageAttributesQuery>;
    },
    SearchAvailableProductAttributes(variables: SearchAvailableProductAttributesQueryVariables, options?: C): Promise<SearchAvailableProductAttributesQuery> {
      return requester<SearchAvailableProductAttributesQuery, SearchAvailableProductAttributesQueryVariables>(SearchAvailableProductAttributesDocument, variables, options) as Promise<SearchAvailableProductAttributesQuery>;
    },
    SearchCategories(variables: SearchCategoriesQueryVariables, options?: C): Promise<SearchCategoriesQuery> {
      return requester<SearchCategoriesQuery, SearchCategoriesQueryVariables>(SearchCategoriesDocument, variables, options) as Promise<SearchCategoriesQuery>;
    },
    SearchCollections(variables: SearchCollectionsQueryVariables, options?: C): Promise<SearchCollectionsQuery> {
      return requester<SearchCollectionsQuery, SearchCollectionsQueryVariables>(SearchCollectionsDocument, variables, options) as Promise<SearchCollectionsQuery>;
    },
    SearchGiftCardTags(variables: SearchGiftCardTagsQueryVariables, options?: C): Promise<SearchGiftCardTagsQuery> {
      return requester<SearchGiftCardTagsQuery, SearchGiftCardTagsQueryVariables>(SearchGiftCardTagsDocument, variables, options) as Promise<SearchGiftCardTagsQuery>;
    },
    SearchGroups(variables: SearchGroupsQueryVariables, options?: C): Promise<SearchGroupsQuery> {
      return requester<SearchGroupsQuery, SearchGroupsQueryVariables>(SearchGroupsDocument, variables, options) as Promise<SearchGroupsQuery>;
    },
    SearchMedia(variables: SearchMediaQueryVariables, options?: C): Promise<SearchMediaQuery> {
      return requester<SearchMediaQuery, SearchMediaQueryVariables>(SearchMediaDocument, variables, options) as Promise<SearchMediaQuery>;
    },
    SearchOrderVariant(variables: SearchOrderVariantQueryVariables, options?: C): Promise<SearchOrderVariantQuery> {
      return requester<SearchOrderVariantQuery, SearchOrderVariantQueryVariables>(SearchOrderVariantDocument, variables, options) as Promise<SearchOrderVariantQuery>;
    },
    SearchPageKlasses(variables: SearchPageKlassesQueryVariables, options?: C): Promise<SearchPageKlassesQuery> {
      return requester<SearchPageKlassesQuery, SearchPageKlassesQueryVariables>(SearchPageKlassesDocument, variables, options) as Promise<SearchPageKlassesQuery>;
    },
    SearchPages(variables: SearchPagesQueryVariables, options?: C): Promise<SearchPagesQuery> {
      return requester<SearchPagesQuery, SearchPagesQueryVariables>(SearchPagesDocument, variables, options) as Promise<SearchPagesQuery>;
    },
    SearchProductKlasses(variables: SearchProductKlassesQueryVariables, options?: C): Promise<SearchProductKlassesQuery> {
      return requester<SearchProductKlassesQuery, SearchProductKlassesQueryVariables>(SearchProductKlassesDocument, variables, options) as Promise<SearchProductKlassesQuery>;
    },
    SearchProducts(variables: SearchProductsQueryVariables, options?: C): Promise<SearchProductsQuery> {
      return requester<SearchProductsQuery, SearchProductsQueryVariables>(SearchProductsDocument, variables, options) as Promise<SearchProductsQuery>;
    },
    SearchStaffMembers(variables: SearchStaffMembersQueryVariables, options?: C): Promise<SearchStaffMembersQuery> {
      return requester<SearchStaffMembersQuery, SearchStaffMembersQueryVariables>(SearchStaffMembersDocument, variables, options) as Promise<SearchStaffMembersQuery>;
    },
    SearchWarehouses(variables: SearchWarehousesQueryVariables, options?: C): Promise<SearchWarehousesQuery> {
      return requester<SearchWarehousesQuery, SearchWarehousesQueryVariables>(SearchWarehousesDocument, variables, options) as Promise<SearchWarehousesQuery>;
    },
    DeleteShippingZone(variables: DeleteShippingZoneMutationVariables, options?: C): Promise<DeleteShippingZoneMutation> {
      return requester<DeleteShippingZoneMutation, DeleteShippingZoneMutationVariables>(DeleteShippingZoneDocument, variables, options) as Promise<DeleteShippingZoneMutation>;
    },
    BulkDeleteShippingZone(variables: BulkDeleteShippingZoneMutationVariables, options?: C): Promise<BulkDeleteShippingZoneMutation> {
      return requester<BulkDeleteShippingZoneMutation, BulkDeleteShippingZoneMutationVariables>(BulkDeleteShippingZoneDocument, variables, options) as Promise<BulkDeleteShippingZoneMutation>;
    },
    UpdateDefaultWeightUnit(variables?: UpdateDefaultWeightUnitMutationVariables, options?: C): Promise<UpdateDefaultWeightUnitMutation> {
      return requester<UpdateDefaultWeightUnitMutation, UpdateDefaultWeightUnitMutationVariables>(UpdateDefaultWeightUnitDocument, variables, options) as Promise<UpdateDefaultWeightUnitMutation>;
    },
    CreateShippingZone(variables: CreateShippingZoneMutationVariables, options?: C): Promise<CreateShippingZoneMutation> {
      return requester<CreateShippingZoneMutation, CreateShippingZoneMutationVariables>(CreateShippingZoneDocument, variables, options) as Promise<CreateShippingZoneMutation>;
    },
    UpdateShippingZone(variables: UpdateShippingZoneMutationVariables, options?: C): Promise<UpdateShippingZoneMutation> {
      return requester<UpdateShippingZoneMutation, UpdateShippingZoneMutationVariables>(UpdateShippingZoneDocument, variables, options) as Promise<UpdateShippingZoneMutation>;
    },
    UpdateShippingRate(variables: UpdateShippingRateMutationVariables, options?: C): Promise<UpdateShippingRateMutation> {
      return requester<UpdateShippingRateMutation, UpdateShippingRateMutationVariables>(UpdateShippingRateDocument, variables, options) as Promise<UpdateShippingRateMutation>;
    },
    CreateShippingRate(variables: CreateShippingRateMutationVariables, options?: C): Promise<CreateShippingRateMutation> {
      return requester<CreateShippingRateMutation, CreateShippingRateMutationVariables>(CreateShippingRateDocument, variables, options) as Promise<CreateShippingRateMutation>;
    },
    DeleteShippingRate(variables: DeleteShippingRateMutationVariables, options?: C): Promise<DeleteShippingRateMutation> {
      return requester<DeleteShippingRateMutation, DeleteShippingRateMutationVariables>(DeleteShippingRateDocument, variables, options) as Promise<DeleteShippingRateMutation>;
    },
    BulkDeleteShippingRate(variables: BulkDeleteShippingRateMutationVariables, options?: C): Promise<BulkDeleteShippingRateMutation> {
      return requester<BulkDeleteShippingRateMutation, BulkDeleteShippingRateMutationVariables>(BulkDeleteShippingRateDocument, variables, options) as Promise<BulkDeleteShippingRateMutation>;
    },
    ShippingMethodChannelListingUpdate(variables: ShippingMethodChannelListingUpdateMutationVariables, options?: C): Promise<ShippingMethodChannelListingUpdateMutation> {
      return requester<ShippingMethodChannelListingUpdateMutation, ShippingMethodChannelListingUpdateMutationVariables>(ShippingMethodChannelListingUpdateDocument, variables, options) as Promise<ShippingMethodChannelListingUpdateMutation>;
    },
    ShippingPriceExcludeProduct(variables: ShippingPriceExcludeProductMutationVariables, options?: C): Promise<ShippingPriceExcludeProductMutation> {
      return requester<ShippingPriceExcludeProductMutation, ShippingPriceExcludeProductMutationVariables>(ShippingPriceExcludeProductDocument, variables, options) as Promise<ShippingPriceExcludeProductMutation>;
    },
    ShippingPriceRemoveProductFromExclude(variables: ShippingPriceRemoveProductFromExcludeMutationVariables, options?: C): Promise<ShippingPriceRemoveProductFromExcludeMutation> {
      return requester<ShippingPriceRemoveProductFromExcludeMutation, ShippingPriceRemoveProductFromExcludeMutationVariables>(ShippingPriceRemoveProductFromExcludeDocument, variables, options) as Promise<ShippingPriceRemoveProductFromExcludeMutation>;
    },
    ShippingZones(variables?: ShippingZonesQueryVariables, options?: C): Promise<ShippingZonesQuery> {
      return requester<ShippingZonesQuery, ShippingZonesQueryVariables>(ShippingZonesDocument, variables, options) as Promise<ShippingZonesQuery>;
    },
    ShippingZone(variables: ShippingZoneQueryVariables, options?: C): Promise<ShippingZoneQuery> {
      return requester<ShippingZoneQuery, ShippingZoneQueryVariables>(ShippingZoneDocument, variables, options) as Promise<ShippingZoneQuery>;
    },
    ShippingZoneChannels(variables: ShippingZoneChannelsQueryVariables, options?: C): Promise<ShippingZoneChannelsQuery> {
      return requester<ShippingZoneChannelsQuery, ShippingZoneChannelsQueryVariables>(ShippingZoneChannelsDocument, variables, options) as Promise<ShippingZoneChannelsQuery>;
    },
    ChannelShippingZones(variables?: ChannelShippingZonesQueryVariables, options?: C): Promise<ChannelShippingZonesQuery> {
      return requester<ChannelShippingZonesQuery, ChannelShippingZonesQueryVariables>(ChannelShippingZonesDocument, variables, options) as Promise<ChannelShippingZonesQuery>;
    },
    ShippingZonesCount(variables?: ShippingZonesCountQueryVariables, options?: C): Promise<ShippingZonesCountQuery> {
      return requester<ShippingZonesCountQuery, ShippingZonesCountQueryVariables>(ShippingZonesCountDocument, variables, options) as Promise<ShippingZonesCountQuery>;
    },
    ShopSettingsUpdate(variables: ShopSettingsUpdateMutationVariables, options?: C): Promise<ShopSettingsUpdateMutation> {
      return requester<ShopSettingsUpdateMutation, ShopSettingsUpdateMutationVariables>(ShopSettingsUpdateDocument, variables, options) as Promise<ShopSettingsUpdateMutation>;
    },
    SiteSettings(variables?: SiteSettingsQueryVariables, options?: C): Promise<SiteSettingsQuery> {
      return requester<SiteSettingsQuery, SiteSettingsQueryVariables>(SiteSettingsDocument, variables, options) as Promise<SiteSettingsQuery>;
    },
    StaffMemberAdd(variables: StaffMemberAddMutationVariables, options?: C): Promise<StaffMemberAddMutation> {
      return requester<StaffMemberAddMutation, StaffMemberAddMutationVariables>(StaffMemberAddDocument, variables, options) as Promise<StaffMemberAddMutation>;
    },
    StaffMemberUpdate(variables: StaffMemberUpdateMutationVariables, options?: C): Promise<StaffMemberUpdateMutation> {
      return requester<StaffMemberUpdateMutation, StaffMemberUpdateMutationVariables>(StaffMemberUpdateDocument, variables, options) as Promise<StaffMemberUpdateMutation>;
    },
    StaffMemberDelete(variables: StaffMemberDeleteMutationVariables, options?: C): Promise<StaffMemberDeleteMutation> {
      return requester<StaffMemberDeleteMutation, StaffMemberDeleteMutationVariables>(StaffMemberDeleteDocument, variables, options) as Promise<StaffMemberDeleteMutation>;
    },
    StaffAvatarUpdate(variables: StaffAvatarUpdateMutationVariables, options?: C): Promise<StaffAvatarUpdateMutation> {
      return requester<StaffAvatarUpdateMutation, StaffAvatarUpdateMutationVariables>(StaffAvatarUpdateDocument, variables, options) as Promise<StaffAvatarUpdateMutation>;
    },
    StaffAvatarDelete(variables?: StaffAvatarDeleteMutationVariables, options?: C): Promise<StaffAvatarDeleteMutation> {
      return requester<StaffAvatarDeleteMutation, StaffAvatarDeleteMutationVariables>(StaffAvatarDeleteDocument, variables, options) as Promise<StaffAvatarDeleteMutation>;
    },
    ChangeStaffPassword(variables: ChangeStaffPasswordMutationVariables, options?: C): Promise<ChangeStaffPasswordMutation> {
      return requester<ChangeStaffPasswordMutation, ChangeStaffPasswordMutationVariables>(ChangeStaffPasswordDocument, variables, options) as Promise<ChangeStaffPasswordMutation>;
    },
    StaffList(variables?: StaffListQueryVariables, options?: C): Promise<StaffListQuery> {
      return requester<StaffListQuery, StaffListQueryVariables>(StaffListDocument, variables, options) as Promise<StaffListQuery>;
    },
    StaffMemberDetails(variables: StaffMemberDetailsQueryVariables, options?: C): Promise<StaffMemberDetailsQuery> {
      return requester<StaffMemberDetailsQuery, StaffMemberDetailsQueryVariables>(StaffMemberDetailsDocument, variables, options) as Promise<StaffMemberDetailsQuery>;
    },
    TaxConfigurationUpdate(variables: TaxConfigurationUpdateMutationVariables, options?: C): Promise<TaxConfigurationUpdateMutation> {
      return requester<TaxConfigurationUpdateMutation, TaxConfigurationUpdateMutationVariables>(TaxConfigurationUpdateDocument, variables, options) as Promise<TaxConfigurationUpdateMutation>;
    },
    TaxCountryConfigurationUpdate(variables: TaxCountryConfigurationUpdateMutationVariables, options?: C): Promise<TaxCountryConfigurationUpdateMutation> {
      return requester<TaxCountryConfigurationUpdateMutation, TaxCountryConfigurationUpdateMutationVariables>(TaxCountryConfigurationUpdateDocument, variables, options) as Promise<TaxCountryConfigurationUpdateMutation>;
    },
    TaxCountryConfigurationDelete(variables: TaxCountryConfigurationDeleteMutationVariables, options?: C): Promise<TaxCountryConfigurationDeleteMutation> {
      return requester<TaxCountryConfigurationDeleteMutation, TaxCountryConfigurationDeleteMutationVariables>(TaxCountryConfigurationDeleteDocument, variables, options) as Promise<TaxCountryConfigurationDeleteMutation>;
    },
    TaxClassUpdate(variables: TaxClassUpdateMutationVariables, options?: C): Promise<TaxClassUpdateMutation> {
      return requester<TaxClassUpdateMutation, TaxClassUpdateMutationVariables>(TaxClassUpdateDocument, variables, options) as Promise<TaxClassUpdateMutation>;
    },
    TaxClassCreate(variables: TaxClassCreateMutationVariables, options?: C): Promise<TaxClassCreateMutation> {
      return requester<TaxClassCreateMutation, TaxClassCreateMutationVariables>(TaxClassCreateDocument, variables, options) as Promise<TaxClassCreateMutation>;
    },
    TaxClassDelete(variables: TaxClassDeleteMutationVariables, options?: C): Promise<TaxClassDeleteMutation> {
      return requester<TaxClassDeleteMutation, TaxClassDeleteMutationVariables>(TaxClassDeleteDocument, variables, options) as Promise<TaxClassDeleteMutation>;
    },
    TaxConfigurationsList(variables?: TaxConfigurationsListQueryVariables, options?: C): Promise<TaxConfigurationsListQuery> {
      return requester<TaxConfigurationsListQuery, TaxConfigurationsListQueryVariables>(TaxConfigurationsListDocument, variables, options) as Promise<TaxConfigurationsListQuery>;
    },
    TaxCountriesList(variables?: TaxCountriesListQueryVariables, options?: C): Promise<TaxCountriesListQuery> {
      return requester<TaxCountriesListQuery, TaxCountriesListQueryVariables>(TaxCountriesListDocument, variables, options) as Promise<TaxCountriesListQuery>;
    },
    TaxClassesList(variables?: TaxClassesListQueryVariables, options?: C): Promise<TaxClassesListQuery> {
      return requester<TaxClassesListQuery, TaxClassesListQueryVariables>(TaxClassesListDocument, variables, options) as Promise<TaxClassesListQuery>;
    },
    TaxClassAssign(variables?: TaxClassAssignQueryVariables, options?: C): Promise<TaxClassAssignQuery> {
      return requester<TaxClassAssignQuery, TaxClassAssignQueryVariables>(TaxClassAssignDocument, variables, options) as Promise<TaxClassAssignQuery>;
    },
    UpdateProductTranslations(variables: UpdateProductTranslationsMutationVariables, options?: C): Promise<UpdateProductTranslationsMutation> {
      return requester<UpdateProductTranslationsMutation, UpdateProductTranslationsMutationVariables>(UpdateProductTranslationsDocument, variables, options) as Promise<UpdateProductTranslationsMutation>;
    },
    UpdateCategoryTranslations(variables: UpdateCategoryTranslationsMutationVariables, options?: C): Promise<UpdateCategoryTranslationsMutation> {
      return requester<UpdateCategoryTranslationsMutation, UpdateCategoryTranslationsMutationVariables>(UpdateCategoryTranslationsDocument, variables, options) as Promise<UpdateCategoryTranslationsMutation>;
    },
    UpdateCollectionTranslations(variables: UpdateCollectionTranslationsMutationVariables, options?: C): Promise<UpdateCollectionTranslationsMutation> {
      return requester<UpdateCollectionTranslationsMutation, UpdateCollectionTranslationsMutationVariables>(UpdateCollectionTranslationsDocument, variables, options) as Promise<UpdateCollectionTranslationsMutation>;
    },
    UpdatePageTranslations(variables: UpdatePageTranslationsMutationVariables, options?: C): Promise<UpdatePageTranslationsMutation> {
      return requester<UpdatePageTranslationsMutation, UpdatePageTranslationsMutationVariables>(UpdatePageTranslationsDocument, variables, options) as Promise<UpdatePageTranslationsMutation>;
    },
    UpdateAttributeTranslations(variables: UpdateAttributeTranslationsMutationVariables, options?: C): Promise<UpdateAttributeTranslationsMutation> {
      return requester<UpdateAttributeTranslationsMutation, UpdateAttributeTranslationsMutationVariables>(UpdateAttributeTranslationsDocument, variables, options) as Promise<UpdateAttributeTranslationsMutation>;
    },
    UpdateMenuItemTranslations(variables: UpdateMenuItemTranslationsMutationVariables, options?: C): Promise<UpdateMenuItemTranslationsMutation> {
      return requester<UpdateMenuItemTranslationsMutation, UpdateMenuItemTranslationsMutationVariables>(UpdateMenuItemTranslationsDocument, variables, options) as Promise<UpdateMenuItemTranslationsMutation>;
    },
    CategoryTranslations(variables: CategoryTranslationsQueryVariables, options?: C): Promise<CategoryTranslationsQuery> {
      return requester<CategoryTranslationsQuery, CategoryTranslationsQueryVariables>(CategoryTranslationsDocument, variables, options) as Promise<CategoryTranslationsQuery>;
    },
    CollectionTranslations(variables: CollectionTranslationsQueryVariables, options?: C): Promise<CollectionTranslationsQuery> {
      return requester<CollectionTranslationsQuery, CollectionTranslationsQueryVariables>(CollectionTranslationsDocument, variables, options) as Promise<CollectionTranslationsQuery>;
    },
    ProductTranslations(variables: ProductTranslationsQueryVariables, options?: C): Promise<ProductTranslationsQuery> {
      return requester<ProductTranslationsQuery, ProductTranslationsQueryVariables>(ProductTranslationsDocument, variables, options) as Promise<ProductTranslationsQuery>;
    },
    PageTranslations(variables: PageTranslationsQueryVariables, options?: C): Promise<PageTranslationsQuery> {
      return requester<PageTranslationsQuery, PageTranslationsQueryVariables>(PageTranslationsDocument, variables, options) as Promise<PageTranslationsQuery>;
    },
    VoucherTranslations(variables: VoucherTranslationsQueryVariables, options?: C): Promise<VoucherTranslationsQuery> {
      return requester<VoucherTranslationsQuery, VoucherTranslationsQueryVariables>(VoucherTranslationsDocument, variables, options) as Promise<VoucherTranslationsQuery>;
    },
    SaleTranslations(variables: SaleTranslationsQueryVariables, options?: C): Promise<SaleTranslationsQuery> {
      return requester<SaleTranslationsQuery, SaleTranslationsQueryVariables>(SaleTranslationsDocument, variables, options) as Promise<SaleTranslationsQuery>;
    },
    AttributeTranslations(variables: AttributeTranslationsQueryVariables, options?: C): Promise<AttributeTranslationsQuery> {
      return requester<AttributeTranslationsQuery, AttributeTranslationsQueryVariables>(AttributeTranslationsDocument, variables, options) as Promise<AttributeTranslationsQuery>;
    },
    ShippingMethodTranslations(variables: ShippingMethodTranslationsQueryVariables, options?: C): Promise<ShippingMethodTranslationsQuery> {
      return requester<ShippingMethodTranslationsQuery, ShippingMethodTranslationsQueryVariables>(ShippingMethodTranslationsDocument, variables, options) as Promise<ShippingMethodTranslationsQuery>;
    },
    MenuItemTranslations(variables: MenuItemTranslationsQueryVariables, options?: C): Promise<MenuItemTranslationsQuery> {
      return requester<MenuItemTranslationsQuery, MenuItemTranslationsQueryVariables>(MenuItemTranslationsDocument, variables, options) as Promise<MenuItemTranslationsQuery>;
    },
    ProductTranslationDetails(variables: ProductTranslationDetailsQueryVariables, options?: C): Promise<ProductTranslationDetailsQuery> {
      return requester<ProductTranslationDetailsQuery, ProductTranslationDetailsQueryVariables>(ProductTranslationDetailsDocument, variables, options) as Promise<ProductTranslationDetailsQuery>;
    },
    ProductVariantList(variables: ProductVariantListQueryVariables, options?: C): Promise<ProductVariantListQuery> {
      return requester<ProductVariantListQuery, ProductVariantListQueryVariables>(ProductVariantListDocument, variables, options) as Promise<ProductVariantListQuery>;
    },
    ProductVariantTranslationDetails(variables: ProductVariantTranslationDetailsQueryVariables, options?: C): Promise<ProductVariantTranslationDetailsQuery> {
      return requester<ProductVariantTranslationDetailsQuery, ProductVariantTranslationDetailsQueryVariables>(ProductVariantTranslationDetailsDocument, variables, options) as Promise<ProductVariantTranslationDetailsQuery>;
    },
    CategoryTranslationDetails(variables: CategoryTranslationDetailsQueryVariables, options?: C): Promise<CategoryTranslationDetailsQuery> {
      return requester<CategoryTranslationDetailsQuery, CategoryTranslationDetailsQueryVariables>(CategoryTranslationDetailsDocument, variables, options) as Promise<CategoryTranslationDetailsQuery>;
    },
    CollectionTranslationDetails(variables: CollectionTranslationDetailsQueryVariables, options?: C): Promise<CollectionTranslationDetailsQuery> {
      return requester<CollectionTranslationDetailsQuery, CollectionTranslationDetailsQueryVariables>(CollectionTranslationDetailsDocument, variables, options) as Promise<CollectionTranslationDetailsQuery>;
    },
    PageTranslationDetails(variables: PageTranslationDetailsQueryVariables, options?: C): Promise<PageTranslationDetailsQuery> {
      return requester<PageTranslationDetailsQuery, PageTranslationDetailsQueryVariables>(PageTranslationDetailsDocument, variables, options) as Promise<PageTranslationDetailsQuery>;
    },
    SaleTranslationDetails(variables: SaleTranslationDetailsQueryVariables, options?: C): Promise<SaleTranslationDetailsQuery> {
      return requester<SaleTranslationDetailsQuery, SaleTranslationDetailsQueryVariables>(SaleTranslationDetailsDocument, variables, options) as Promise<SaleTranslationDetailsQuery>;
    },
    VoucherTranslationDetails(variables: VoucherTranslationDetailsQueryVariables, options?: C): Promise<VoucherTranslationDetailsQuery> {
      return requester<VoucherTranslationDetailsQuery, VoucherTranslationDetailsQueryVariables>(VoucherTranslationDetailsDocument, variables, options) as Promise<VoucherTranslationDetailsQuery>;
    },
    AttributeTranslationDetails(variables: AttributeTranslationDetailsQueryVariables, options?: C): Promise<AttributeTranslationDetailsQuery> {
      return requester<AttributeTranslationDetailsQuery, AttributeTranslationDetailsQueryVariables>(AttributeTranslationDetailsDocument, variables, options) as Promise<AttributeTranslationDetailsQuery>;
    },
    ShippingMethodTranslationDetails(variables: ShippingMethodTranslationDetailsQueryVariables, options?: C): Promise<ShippingMethodTranslationDetailsQuery> {
      return requester<ShippingMethodTranslationDetailsQuery, ShippingMethodTranslationDetailsQueryVariables>(ShippingMethodTranslationDetailsDocument, variables, options) as Promise<ShippingMethodTranslationDetailsQuery>;
    },
    MenuItemTranslationDetails(variables: MenuItemTranslationDetailsQueryVariables, options?: C): Promise<MenuItemTranslationDetailsQuery> {
      return requester<MenuItemTranslationDetailsQuery, MenuItemTranslationDetailsQueryVariables>(MenuItemTranslationDetailsDocument, variables, options) as Promise<MenuItemTranslationDetailsQuery>;
    },
    UpdateMetadata(variables: UpdateMetadataMutationVariables, options?: C): Promise<UpdateMetadataMutation> {
      return requester<UpdateMetadataMutation, UpdateMetadataMutationVariables>(UpdateMetadataDocument, variables, options) as Promise<UpdateMetadataMutation>;
    },
    WarehouseDelete(variables: WarehouseDeleteMutationVariables, options?: C): Promise<WarehouseDeleteMutation> {
      return requester<WarehouseDeleteMutation, WarehouseDeleteMutationVariables>(WarehouseDeleteDocument, variables, options) as Promise<WarehouseDeleteMutation>;
    },
    WarehouseCreate(variables: WarehouseCreateMutationVariables, options?: C): Promise<WarehouseCreateMutation> {
      return requester<WarehouseCreateMutation, WarehouseCreateMutationVariables>(WarehouseCreateDocument, variables, options) as Promise<WarehouseCreateMutation>;
    },
    WarehouseUpdate(variables: WarehouseUpdateMutationVariables, options?: C): Promise<WarehouseUpdateMutation> {
      return requester<WarehouseUpdateMutation, WarehouseUpdateMutationVariables>(WarehouseUpdateDocument, variables, options) as Promise<WarehouseUpdateMutation>;
    },
    WarehouseList(variables?: WarehouseListQueryVariables, options?: C): Promise<WarehouseListQuery> {
      return requester<WarehouseListQuery, WarehouseListQueryVariables>(WarehouseListDocument, variables, options) as Promise<WarehouseListQuery>;
    },
    WarehouseDetails(variables: WarehouseDetailsQueryVariables, options?: C): Promise<WarehouseDetailsQuery> {
      return requester<WarehouseDetailsQuery, WarehouseDetailsQueryVariables>(WarehouseDetailsDocument, variables, options) as Promise<WarehouseDetailsQuery>;
    },
    WarehousesCount(variables?: WarehousesCountQueryVariables, options?: C): Promise<WarehousesCountQuery> {
      return requester<WarehousesCountQuery, WarehousesCountQueryVariables>(WarehousesCountDocument, variables, options) as Promise<WarehousesCountQuery>;
    },
    ShopInfo(variables?: ShopInfoQueryVariables, options?: C): Promise<ShopInfoQuery> {
      return requester<ShopInfoQuery, ShopInfoQueryVariables>(ShopInfoDocument, variables, options) as Promise<ShopInfoQuery>;
    },
    MainMenu(variables: MainMenuQueryVariables, options?: C): Promise<MainMenuQuery> {
      return requester<MainMenuQuery, MainMenuQueryVariables>(MainMenuDocument, variables, options) as Promise<MainMenuQuery>;
    },
    GalleryMedia(variables?: GalleryMediaQueryVariables, options?: C): Promise<GalleryMediaQuery> {
      return requester<GalleryMediaQuery, GalleryMediaQueryVariables>(GalleryMediaDocument, variables, options) as Promise<GalleryMediaQuery>;
    },
    CreateCheckout(variables: CreateCheckoutMutationVariables, options?: C): Promise<CreateCheckoutMutation> {
      return requester<CreateCheckoutMutation, CreateCheckoutMutationVariables>(CreateCheckoutDocument, variables, options) as Promise<CreateCheckoutMutation>;
    },
    ProductBySlug(variables: ProductBySlugQueryVariables, options?: C): Promise<ProductBySlugQuery> {
      return requester<ProductBySlugQuery, ProductBySlugQueryVariables>(ProductBySlugDocument, variables, options) as Promise<ProductBySlugQuery>;
    }
  };
}
export type Sdk = ReturnType<typeof getSdk>;